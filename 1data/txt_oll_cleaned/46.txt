Введение


     Нынешний уровень информатизации общества расширяет возможности взаимодействия между людьми во всех сферах предоставления услуг. Автострахование одна из них.
     Цель выпускнойквалификационной работы – разработка информационной системы«Страхование автомобилей».
     Поставленные практические задачи для достижения цели в рамках выпускнойквалификационной работы:
     * исследовать предметную область;
     * сформировать требования к разработке;
     * выбрать формат и средства реализации разработки;
     * спроектировать архитектуру приложения;
     * выбрать цветовую палитру приложения;
     * спроектировать структуру базы данных приложения;
     * разработать пользовательский интерфейс приложения;
     * запрограммировать приложение;
     * протестировать приложение;
     * провести экономическое обоснование проекта;
     * рассмотреть вопросы информационной безопасности, охраны труда и окружающей среды.
     Предметная область выпускнойквалификационной работы– страхование автомобилей.
     Автострахование – активно развивающаяся отрасль в собственном направлении и информационном, т.к. является одним из самых информационно зависимых видов бизнеса. Для нее актуальность обработки данных и их структурированное хранение, от которых напрямую зависит лидерство компании на рынке, очень высока. Информационные системы направлены на решение такого рода задач.

    1 Анализ предметной области


     1.1 Исследование предметной области


     В Российской Федерации действуют нижеперечисленные виды автострахования.
     ОСАГО – обязательный вид страхования ответственности, при котором объектом страхования являются имущественные интересы, связанные с риском гражданской ответственности владельца транспортного средства по обязательствам, возникающим вследствие причинения вреда жизни, здоровью или имуществу потерпевших при использовании транспортного средства[2].
     Субъекты ОСАГО:
     * страховщики – страховые организации, которые вправе осуществлять обязательное страхование гражданской ответственности владельцев транспортных средств в соответствии с разрешением (лицензией), выданным федеральным органом исполнительной власти по надзору за страховой деятельностью в установленном порядке «Законодательством Российской Федерации»;
     * страхователи – лица, заключившие со страховщиком договор обязательного страхования. Так как контроль за наличием страхового полиса и его действительностью предусмотрен на многих стадиях использования автотранспорта, охват страхового поля здесь приближается к 100%. Исключения могут составлять лица, не успевшие перезаключить договор страхования и нарушители, подделывающие страховые полисы;
     * выгодоприобретатели – третьи лица, которым был причинен ущерб в автомобильной аварии;
     * страховые посредники – агенты и брокеры;
     * профессиональное объединение страховщиков – «Российский союз автостраховщиков» (РСА), аккумулирующий средства резервов гарантий и текущих компенсационных выплат и осуществляющий компенсационные выплаты [2].
     При расчете страхового тарифа базовая ставка умножается на некоторый набор поправочных коэффициентов. На итоговый размер страховой премии влияют мощность двигателя автомобиля, регион, в котором проживает (зарегистрирован) его собственник, количество водителей, их возраст, стаж, страховая история (наличие или отсутствие страховых случаев в прошлые годы). Повышающие коэффициенты, установленные для водителей в возрасте до 22 лет, или со стажем вождения до 3 лет, увеличивают размер страховой премии до 80%. Полный набор коэффициентов применяется не всегда. Например, при страховании на период следования к месту регистрации и для временного использования в Российской Федерации транспортных средств, зарегистрированных за рубежом, применяется сокращенный набор коэффициентов. Также 25 мая 2020 года президент РФ подписал закон об индивидуализации тарифов ОСАГО. Документ, в частности, дает возможность страховщикам учитывать в цене полиса грубые нарушения ПДД, а также предоставлять страхователям скидки с учетом их личностных характеристик. Контроль за правильностью расчета страховых премий по договорам ОСАГО осуществляет «Центральный банк РФ». Также он устанавливает критерии, применение которых не допускается [2].
     КАСКО – добровольный вид страхования обеспечивающий защиту транспортного средства от рисков угона, хищения, в случае нанесения ущерба автомобилю в результате ДТП, действий третьих лиц, вследствие стихийных бедствий (удар молнии, буря, шторм, ураган, ливень, град, землетрясение, селевые оползни, обвал, сдвиг, паводок, наводнение), нападение животных, падение на автомобиль предметов, пожари взрыв транспортного средства[1].
     В отличие от ОСАГО, тарифы на КАСКО в РФ не устанавливаются «Центральным банком Российской Федерации», и у каждой страховой компании есть свои программы со своими собственными базовыми тарифами и поправочными коэффициентами. Каждая компания стремится оптимизировать отношение страховых премий к страховым выплатам, для чего проводится постоянный сбор статистики страховых случаев. На основе статистики устанавливаются страховые коэффициенты, по которым вычисляется стоимость страхования КАСКО для каждого конкретного случая. Предпочтение отдается взрослым, опытным водителям, семейным автомобилям, способствующим спокойному стилю вождения. Для таких категорий меньшие риск по ущербу и, соответственно, минимальные тарифы на страхование. На стоимость (тариф) КАСКО для конкретного автомобиля существенным образом влияют статистика угонов для данной модели в данной местности, стоимость запчастей и нормо-часа на станциях технического обслуживания в данной местности, наличие или отсутствие франшизы, устойчивость данной модели к угонам и наличие специальных противоугонных устройств, опыт и страховая история водителя, объем пакета дополнительных услуг, включаемых по желанию страхователя в полис (эвакуация, сбор документов, выезд аварийного комиссара и прочее)[3].
     Зеленая карта – международный договор о взаимном признании странами-членами договора страхового полиса по страхованию ответственности владельцев средств автотранспорта и его необходимости для поездок на автомоторном транспорте на территории других стран являющихся членами этого договора [4].
     На территории РФ тарифы едины для всех компаний. Они устанавливаются «Российским союзом автостраховщиков» и согласовываются «Министерством финансов РФ» и «Центральным банком Российской Федерации», являющимся мегарегулятором рынка страхования. При расчете стоимости полиса учитывается тип транспортного средства, срок страхования (от 15 дней до 1 года) и территории его действия (на данный момент в систему «Зелёная карта» входят 48 стран) [4].
     Главная цель автострахования – оформленный страховой полис.
     Страховой полис – как правило, именной документ, подтверждающий заключение договора страхования, выдаваемый страховой компанией (страховщиком) страхователю (застрахованному). Он также содержит указание на субъектов страховых отношений и существенные условия договора страхования, например, вид, объект, начало и конец действия страхования, размер страховой суммы и премии, сведения о страхователе, страховщике и другие условия. К ценным бумагам страховой полис не относится [5].
     От уровня технической подготовленности компании зависит качество и скорость осуществления автостраховых операций. Особенно это актуально для компаний обслуживающихсотни тысяч или даже миллионы клиентов в год [6].
     Последние годы динамика в области информационных систем для автострахового бизнеса проявлялась в двух направлениях. Во-первых, в развитии учетных систем. Во-вторых, в автоматизации собственногопроцесса автострахования и общих управленческих и финансовых задач. В РФ и странах СНГ на рынке автоматизации автострахового бизнеса среди«коробочных решений» зарекомендовавших себя представлены следующие:
     * Microsoft Dynamics CRM;
     * AdactaAdInsure;
     * решения от TopS Business Integrator для автостраховых компаний;
     * Creatio;
     * решения от 1Сдля автостраховых компаний[6].
     Сравнивая системы автоматизации автострахового бизнеса необходимо исходить из того, что все они, в чуть большей или чуть меньшей степени поддерживают все основные функции, которые нужны бизнес-пользователям. На первый план выходят те характеристики систем, которые обеспечивают их соответствие текущим требованиям рынка. Желательной целью является создание и развертывание единой корпоративной информационной системы, удовлетворяющей информационные потребности всех сотрудников, служб и подразделений организации. На практике создание такой системы слишком затруднено или даже невозможно, а иногда и нецелесообразно [7].

     1.2 Формирование требований к разработке


     Информационная система разрабатывается для штатных сотрудников автостраховых компаний.
     Для реализации разработки информационной системы необходимо сформировать требования к ней.
     На основе исследований предметной области ниже перечислены требования к разработке.
     Информационная система должна предоставлять возможность: выбора, расчета стоимости, добавления, хранения, просмотра, редактирования и удаления полисов:ОСАГО, КАСКОи Зеленая карта.
     Пользовательский интерфейс должен быть простым и понятным.


     1.3 Выбор формата и средств реализации разработки


     Для реализации разработки информационной системы необходимо выбрать ее формат.
     На сегодняшний день существует три основных формата приложений:
     * настольные;
     * веб;
     * мобильные.
     Настольныеприложение –приложение реализующееся на персональных компьютерах.
     Для реализации приложения, используются языки C++, Swift, Javaи т.п.
     Преимуществаподхода:
     * частичная или полная независимость от интернет соединения;
     * высокий уровень к аппаратной и операционной платформе устройства;
     * высокая мощность устройств позволяющая реализовать объёмный функционал приложений.
Недостатки:
     * высокая стоимость разработки, обновления и поддержки за счет написания отдельного кода для каждой платформы.
     Веб-приложения–приложения реализующиеся через браузер.
     Чаще всего такие приложения имеют архитектуру клиент-сервер. В зависимости от требований к логике и хранению данных, могут распределяться между клиентом и сервером [8].
     Для реализации клиентской части приложения, используются языки:
     * HTML для разметки;
     * CSS для описания внешнего вида;
     * JavaScript для логики [8].
     Для реализации серверной части приложения, используются языки:
     * Node.js,Perl, Ruby, PHP, Python и т.п. для логики [8].
     Преимуществаподхода:
     * низкая стоимость разработки, обновления и поддержки за счет написания единого кода для каждой платформы.
Недостатки:
     * частичная или полная зависимость от интернет соединения;
     * возможность пользователя настраивать многие параметры браузера (например, размер шрифта, цвета, отключение поддержки сценариев) может препятствовать корректной работе приложения[8].
     Мобильные приложения– приложенияреализующиеся на смартфонах, планшетах и т.п. устройствах[9].
     Для реализации приложения, используются языкиSwift, Java, Kotlinи т.п.
     Преимуществаподхода:
     * частичная или полная независимость от интернет соединения.
Недостатки:
     * высокая стоимость разработки, обновления и поддержки за счет написания отдельного кода для каждой платформы;
     * низкий уровень к аппаратной и операционной платформе устройства;
     * малая мощность устройств сильно ограничивающая возможный функционал приложений.
     Для реализации разработки информационной системывыбран форматвеб-приложения за его преимущества и достоинства.
     Ниже перечислены выбранные средства реализации разработки на основе выбранного формата разработки.
     HTML –язык разметки документа(веб-страницы) просматриваемого в браузере [10].
     Язык гипертекстовой разметки HTML был разработан британским ученым Тимом Бернерсом-Ли приблизительно в 1986 году в стенах CERN. HTML создавался как язык для обмена научной и технической документацией, пригодный для использования людьми, не являющимися специалистами в области верстки. HTML успешно справлялся с проблемой сложности SGML путем определения небольшого набора структурных и семантических элементов – дескрипторов. Дескрипторы также часто называют «тегами». С помощью HTML можно легко создать относительно простой, но красиво оформленный документ. Помимо упрощения структуры документа, в HTML внесена поддержка гипертекста. Мультимедийные возможности были добавлены позже. Первым общедоступным описанием HTML был документ: «Теги HTML», впервые упомянутый в Интернете Тимом Бернерсом-Ли в конце 1991 года. В нем описываются 18 элементов, составляющих первоначальный, относительно простой дизайн HTML. За исключением тега гиперссылки, на них сильно повлиял SGML guid, внутренний формат документации, основанный на стандартном обобщенном языке разметки SGML. 11 из этих элементов все еще существуют в HTML 4. Изначально язык HTML был задуман и создан как средство структурирования и форматирования документов без их привязки к средствам воспроизведения (отображения). В идеале, текст с разметкой HTML должен был без стилистических и структурных искажений воспроизводиться на оборудовании с различной технической оснащенностью (цветной экран современного компьютера, монохромный экран органайзера, ограниченный по размерам экран мобильного телефона или устройства и программы голосового воспроизведения текстов). Однако современное применение HTML очень далеко от его изначальной задачи. С течением времени основная идея платформонезависимости языка HTML уступила современным потребностям в мультимедийном и графическом оформлении[10].
     CSS – язык описания внешнего вида документа (веб-страницы), написанного с использованием языка разметки (HTML и т.п.) [11].
     В начале 1990 года различные браузеры имели свои стили для отображения веб-страниц. Тогда стала ясна необходимость создать единые правила по которым программисты и веб-дизайнеры проектировали бы сайты.Термин «Каскадные таблицы стилей» был предложен Хоконом Ли в 1994 году. Совместно с Бертом Босом он стал развивать CSS. В отличие от многих существовавших на тот момент языков стиля, CSS использует наследование от родителя к потомку, поэтому разработчик может определить разные стили, основываясь на уже определенных ранее стилях. В декабре 1996 года «Консорциум Всемирной паутины» (W3C)была издана рекомендация CSS1[11].
     Достоинства языка:
     * дополняет возможности оформлениястраниц;
     * упрощает изменение дизайна всех страниц;
     * позволяет реализовать адаптивный дизайн страниц;
     * уменьшение времени загрузки страниц веб-ресурса за счет кэширования браузером CSSфайла [11].
     JavaScript – язык программирования.
     В 1992 году компания Nombas начала разработку встраиваемого скриптового языка Cmm, который, по замыслу разработчиков, должен был стать достаточно мощным, чтобы заменить макросы, сохраняя при этом схожесть с С, чтобы разработчикам не составляло труда изучить его. Главным отличием от С была работа с памятью. В новом языке все управление памятью осуществлялось автоматически: не было необходимости создавать буфера, объявлять переменные, осуществлять преобразование типов. В остальном языки сильно походили друг на друга: в частности, Cmm поддерживал стандартные функции и операторы С. Cmm был переименован в ScriptEase, поскольку исходное название звучало слишком негативно, а упоминание в нем С отпугивало людей. На основе этого языка был создан проприетарный продукт CEnvi. В конце ноября 1995 года Nombas разработала версию CEnvi, внедряемую в веб-страницы. Страницы, которые можно было изменять с помощью скриптового языка, получили название Espresso Pages – они демонстрировали использование скриптового языка для создания игры, проверки пользовательского ввода в формы и создания анимации. Espresso Pages позиционировались как демо версия, призванная помочь представить, что случится, если в браузер будет внедрен язык Cmm. Работали они только в 16-битовом Netscape Navigator под управлением Windows. Перед Бренданом Эйхом, нанятым в компанию Netscape 4 апреля 1995 года, была поставлена задача внедрить язык программирования Scheme или что-то похожее в браузер Netscape. Поскольку требования были размыты, Эйха перевели в группу, ответственную за серверные продукты, где он проработал месяц, занимаясь улучшением протокола HTTP. В мае разработчик был переброшен обратно, в команду, занимающуюся клиентской частью (браузером), где он немедленно начал разрабатывать концепцию нового языка программирования. Менеджмент разработки браузера, включая Тома Пакина, Михаэля Тоя, Рика Шелла, был убежден, что Netscape должен поддерживать язык программирования, встраиваемый в HTML-код страницы. Помимо Брендана Эйха, в разработке участвовали сооснователь Netscape Communications Марк Андрессен и сооснователь Sun Microsystems Билл Джой. Чтобы успеть закончить работы над языком к релизу браузера, компании заключили соглашение о сотрудничестве в разработке. Они ставили перед собой цель обеспечить «язык для склеивания» составляющих частей веб-ресурса: изображений, плагинов, Java-апплетов, который был бы удобен для веб-дизайнеров и программистов, не обладающих высокой квалификацией. Первоначально по предложению Марка Андрессена язык был назван Mocha, был реализован Бренданом Эйхом в течение десяти дней и впервые был включен в пре-альфу версию Netscape 2. Затем он был переименован в LiveScript и предназначался как для программирования на стороне клиента, так и для программирования на стороне сервера (там он должен был называться LiveWire). На синтаксис оказали влияние языки С и Java, и, поскольку Java в то время было модным словом, 4 декабря 1995 года LiveScript переименовали в JavaScript, получив соответствующую лицензию у Sun. Анонс JavaScript со стороны представителей Netscape и Sun состоялся накануне выпуска второй бета-версии Netscape Navigator [12].
     Несмотря на схожий с С синтаксис, JavaScript по сравнению с языком С имеет коренные отличия:
     * объекты с возможностью интроспекции;
     * функции как объекты первого класса;
     * автоматическое приведение типов;
     * автоматическая сборка мусора;
     * анонимные функции[12].
В языке отсутствуют такие полезные вещи, как:
     * стандартная библиотека: в частности, отсутствует интерфейс программирования приложений по работе с файловой системой, управлению потоками ввода-вывода, базовых типов для бинарных данных;
     * стандартные интерфейсы к веб-серверам и базам данных;
     * система управления пакетами, которая бы отслеживала зависимости и автоматически устанавливала их[12].

     Web Storage – DOM-хранилище, а также программные методы и протоколы веб-приложения, используемые для хранения данных в браузере[13].
     В настоящее время стандарты Web Storage разработаны и предложены «Консорциум Всемирной паутины» (W3C). Первоначально стандарты были частью спецификации HTML 5, но сейчас являются отдельной спецификацией. Его поддерживают Internet Explorer 8 и выше, Safari 4 и выше, Google Chrome5 и выше и т.п. браузеры [13].
     Web Storage попадает исключительно под компетенцию сценариев (скриптов) на стороне клиента. Его данные не передаются на сервер при каждом запросе HTTP, исервер не может напрямую записать в него данные [13].
     Программный интерфейсWeb Storageпредставляет собой ассоциативный массив структуры данных, где ключи и значения являются строками[13].
     Существуют два основных типа Web Storage: локальное хранилище (localStorage) и сессионное хранилище (sessionStorage), которые различаются по своим объёмам и времени жизни. Данные размещаются в отдельное для каждого домена локального хранилище (оно доступно для всех скриптов из домена, который первоначально добавил данные) и сохраняются после закрытия браузера. Сессия сохраняется по принципу одна страница –одно окно и ограничивается жизнью данного окна, то есть для каждого открытого окна создаётся новая сессия, которая прекращает своё существование при закрытии окна и не зависит от домена, открывшего её. Сохранение сессии предназначено для предоставления отдельных экземпляров одного и того же веб-приложения для работы в разных окнах, не мешая друг другу[13].
     Для реализации разработки выбран тип Web Storage–localStorage.
     Visual Studio Code – редактор исходного кода для кроссплатформенной разработки веби облачных приложений[14].
     Достоинства редактора:
     * имеет многоязычный интерфейс пользователя и поддерживает ряд языков программирования, подсветку синтаксиса, IntelliSense, рефакторинг, отладку, навигацию по коду, поддержку Git и Docker[14].

    2 Проектирование приложения


     2.1 Проектирование архитектуры приложения


     Для разработкиприложения необходимо спроектироватьего архитектуру.
     Архитектура приложения –совокупность важнейших решений об организации программной системы. Архитектура приложения включает:
     * выбор структурных элементов и их интерфейсов, с помощью которых составлена система, а также их поведения в рамках сотрудничества структурных элементов;
     * соединение выбранных элементов структуры и поведения во все более крупные системы [15].
     Документирование архитектуры приложения упрощает процесс коммуникации между разработчиками, позволяет зафиксировать принятые проектные решения и предоставить информацию о них эксплуатационному персоналу системы, повторно использовать компоненты и шаблоны проекта в других проектах [15].
     На основе требований к разработке должен быть реализован клиент, база данных и их взаимодействие.
     Спроектированная архитектура приложения представлена на рисунке 1.






Рисунок 1 – Архитектура приложения

     2.2 Выбор цветовой палитры приложения


     Для разработки пользовательского интерфейса приложения необходимо выбрать его цветовую палитру.
     Цветовая палитра представляет собой набор цветов, имеющий физическую или цифровую реализацию [16].
     Грамотно составленная цветовая палитра приложения помогает разделять элементы пользовательского интерфейса.
     Ниже представлена выбранная цветовая палитра приложения, отвечающая требованиям о пользовательском интерфейсе.
     Белый (RGB: 255, 255, 255) – цвет фона страниц показан на рисунке 2.



Рисунок 2 – Белый (RGB: 255, 255, 255)

     Серый (RGBA: 142, 142, 147, 0.2) – цвет элементовпользовательского интерфейса представлен на рисунке 3.



Рисунок 3 – Серый (RGBA: 142, 142, 147, 0.2)

     Серый (RGB: 142, 142, 147) – цвет текстапользовательского интерфейса представлен на рисунке 4.



Рисунок 4 – Серый (RGB: 142, 142, 147)

     2.3 Проектирование структуры базы данных приложения


     На основе спроектированной архитектурыприложения необходимо разработать егобазу данных.
     База данных – представленная в объективной форме совокупность данных, организованных в соответствии с концептуальной структурой, описывающей характеристики данных и взаимоотношения между ними [17].
     Для разработки базы данных приложениянеобходимо спроектировать ее структуру.
     Выбранному формату и средствам реализации разработки наиболее подходящей будет структура баз данных типа NoSQL использующих JSON подобный формат и состоящих из коллекций, их ключей и их значений.
     Ниже представлены коллекции определенные базе данных приложения:
     * CTP (ОСАГО);
     * hull (КАСКО);
     * greenCard (Зеленая карта).
     Общие ключи для всех коллекций базы данных представлены ниже:
     * make (Марка);
     * model (Модель);
     * number (Номер);
     * surname (Фамилия);
     * name (Имя);
     * patronymic (Отчество);
     * passport (Паспорт);
     * phone (Телефон);
     * period (Период);
     * since (с);
     * premium (Премия).

    3 Разработка и тестирование приложения


     3.1 Разработка пользовательского интерфейса приложения


     Результат создания страницы приложения, представлен на рисунке 5.


Рисунок 5 – Результат создания страницы

     Результат добавления заглавия страницы, используя тег «title» представлен на рисунке 6.


Рисунок 6 – Результат добавления заглавия

     Результат добавлениязаглавия текста на страницу, используя тег «h1» представлен на рисунке 7.


Рисунок 7 – Результат добавления заглавия текста

     Результат добавления поля ввода на страницу,используя тег «input» представлен на рисунке 8.


Рисунок 8 – Результат добавления поля ввода

     Результат добавления надписи в поле ввода,используя атрибут тега «input»–«placeholder», представлен на рисунке 9.


Рисунок 9 – Результат добавления надписи в поле ввода

     Результат добавления кнопки на страницу,используя тег «button» представлен на рисунке 10.


Рисунок 10 – Результат добавления кнопки

     Результат добавления надписи кнопки, прописывая ее в пространство между парными тегами «button», представлен на рисунке 11.


Рисунок 11 – Результат добавления надписи кнопки

     Результат добавленияправил описания внешнего видастраницы и текста представлен на рисунке 12.


Рисунок 12 – Результат добавления правил описания внешнего вида страницы и текста

     Результат добавленияправил описания внешнего видатега «body» представлен на рисунке 13.


Рисунок 13– Результат добавления правил описания внешнего вида тега «body»

     Результат добавления правил описания внешнего вида тега «input» представлен на рисунке 14.


Рисунок 14 – Результат добавления правил описания внешнего вида тега «input»

     Результат добавления правил описания внешнего вида тега «button» представлен на рисунке 15.


Рисунок 15– Результат добавления правил описания внешнего вида тега «button»


     3.2 Программирование приложения


     Файл «CTPC.html» содержит JavaScript код кнопки «Рассчитать». Код заполняет переменные из полей ввода и в зависимости от выполнения условий производит расчет и выводит результат.
     На листинге 1 представлен код кнопки «Рассчитать» страницы «ОСАГО (добавление)»файла «CTPC.html».
     
     

     Файл «CTPC.html» содержит JavaScript код кнопки «Добавить». Код заполняет переменные из полей ввода, создает новый экземпляр объекта и добавляет его в базу данных.
     На листинге 2 представлен код кнопки «Добавить» страницы «ОСАГО (добавление)»файла «CTPC.html».
     
     
     
     Файл «CTPU.html» содержит JavaScript код кнопки «Получить». Код заполняет переменную из поля ввода и использует ее для вывода записи из базы данных.
     На листинге 3 представлен код кнопки «Получить» страницы «ОСАГО (редактирование)»файла «CTPU.html».

     

     Файл «CTPU.html» содержит JavaScript код кнопки «Сохранить». Код напрямую перезаписывает выведенную запись из базы данных, данными из полей ввода.
     На листинге 4 представлен код кнопки «Сохранить» страницы «ОСАГО (редактирование)»файла «CTPU.html».
     
     
     Файл «CTPRD.html» содержит JavaScript код кнопки «Удалить». Код вызывает диалоговое окно, заполняет переменную из поля ввода и в зависимости от выполнения условия использует ее или нет для удаления записи из базы данных.
     На листинге 5 представлен код кнопки «Удалить» страницы «ОСАГО (БД)»файла «CTPRD.html».
     
    

     3.3 Тестирование приложения


     Тестирование всех функции приложения на их соответствие требованиям представлено ниже.
     Открытие главной страницы приложения представлено на рисунке 16.


Рисунок 16 – Главная страница приложения

     Открытие страницы базы данных представлено на рисунке 17.


Рисунок 17 – Страница базы данных

     Открытие страницы добавления записи представлено на рисунке 18.


Рисунок 18 – Страница добавления записи

     Ввод данных для расчета стоимости полиса представлен на рисунке 19.


Рисунок 19– Ввод данных для расчета стоимости полиса

     Результат расчета стоимости полиса представлен на рисунке 20.


Рисунок 20– Результат расчета стоимости полиса

     Ввод данных для добавления записи представлен на рисунке 21.


Рисунок 21 – Ввод данных для добавления записи

     Результат нажатия кнопки «Добавить» представлен на рисунке 22.


Рисунок 22 – Результат нажатия кнопки «Добавить»

     Результат добавления записи представлен на рисунке 23.


Рисунок 23 – Результат добавления записи

     Открытие страницы редактирования записи представлено на рисунке 24.


Рисунок 24 – Страница редактирования записи

     Ввод данных для получения записи представлен на рисунке 25.


Рисунок 25 – Ввод данных для получения записи

     Результат получения записи представлен на рисунке 26.


Рисунок 26 –Результат получения записи

     Ввод данных для редактирования записи представлен на рисунке 27.


Рисунок 27 – Ввод данных для редактирования записи

     Результат редактирования записи представлен на рисунке 28.


Рисунок 28– Результат редактирования записи

     Результат редактирования записи представлен на рисунке 29.


Рисунок 29 – Результат редактирования записи

     Открытие формы удаления записи представлено на рисунке 30.


Рисунок 30 – Форма удаления записи

     Ввод данных для удаления записи представлен на рисунке 31.


Рисунок 31 – Ввод данных для удаления записи

     Результат удаления записи представлен на рисунке 32.


Рисунок 32 – Результат удаления записи

    4 Экономическая часть


     4.1 Планирование проекта


     План проекта, составленный на основе поставленных практических задач для достижения цели в рамка выпускной квалификационной работыи с использованием сервиса управления проектами Smartsheet, представлен ниже.
     Календарь проекта, отражающий рабочие и нерабочие дни, а также рабочее время определенное проекту, представлен на рисунке 33.


Рисунок 33– Календарь проекта

     Задачи, сроки и ресурсы проекта представлены на рисунке 34.


Рисунок 34 – Задачи, сроки и ресурсы проекта

     Диаграмма Ганта, на которой изображены синим цветом задачи, их последовательность и зависимость, представлена на рисунке 35.


Рисунок 35 – Диаграмма Ганта

     Диаграмма Ганта с включенным режимом «Критический путь», которой позволяет подсветить красным ключевые задачи, выполнение которых в срок влияет на своевременное выполнение всего проекта, показана на рисунке 36.


Рисунок 36 – Диаграмма Ганта с включенным режимом «Критический путь»


    

    5 Охрана труда и окружающей среды


     5.1 Информационная безопасность


     Вторая половина 20 столетия ознаменовалась стремительным развитием телекоммуникаций, аппаратного и программного обеспечения компьютеров и шифрования данных. Появление компактного, мощного и недорогого компьютерного оборудования сделало электронную обработку данных доступной малому бизнесу и домашним пользователям. Очень быстро компьютеры были объединены Интернетом, что привело к взрывному росту электронного бизнеса. Все это, в сочетании с появлением киберпреступности и множеством случаев международного терроризма, вызвало потребность в лучших методах защиты компьютеров и информации, которую они хранят, обрабатывают и передают. Возникли научные дисциплины, такие, как, «Компьютерная безопасность» и «Методы защиты информации» и множество профессиональных организаций, преследующих общие цели обеспечения безопасности и надежности информационных систем [18].
     Информационная безопасность – практика предотвращения несанкционированного доступа, использования, раскрытия, искажения, изменения, исследования, записи или уничтожения информации. Это универсальное понятие применяется вне зависимости от формы, которую могут принимать данные (электронная или, например, физическая). Основная задача информационной безопасности – сбалансированная защита конфиденциальности, целостности и доступности данных, с учетом целесообразности применения и без какого-либо ущерба производительности организации. Это достигается, в основном, посредством многоэтапного процесса управления рисками, который позволяет идентифицировать основные средства и нематериальные активы, источники угроз, уязвимости, потенциальную степень воздействия и возможности управления рисками. Процесс сопровождается оценкой эффективности плана по управлению рисками [18].
     Для того, чтобы стандартизовать эту деятельность, научное и профессиональное сообщества находятся в постоянном сотрудничестве, направленном на выработку базовой методологии, политик и индустриальных стандартов в области технических мер защиты информации, юридической ответственности, а также стандартов обучения пользователей и администраторов. Эта стандартизация в значительной мере развивается под влиянием широкого спектра законодательных и нормативных актов, которые регулируют способы доступа, обработки, хранения и передачи данных. Однако внедрение любых стандартов и методологий в организации может иметь лишь поверхностный эффект, если культура непрерывного совершенствования не привита должным образом [18].
     В 1975 году Джерри Зальцер и Майкл Шредер в статье «Защита информации в компьютерных системах» впервые предложили разделить нарушения безопасности на три основных категории: неавторизованное раскрытие информации, неавторизованное изменение информации и неавторизованный отказ в доступе к информации. Позднее эти категории получили краткие наименования и стандартизированные определения:
     * конфиденциальность – свойство информации быть недоступной или закрытой для неавторизованных лиц, сущностей или процессов;
     * целостность – свойство сохранения правильности и полноты активов;
     * доступность – свойство информации быть доступной и готовой к использованию по запросу авторизованного субъекта, имеющего это право [18].
     Защита разработанного приложения от несанкционированного доступа может производится общими мерами, такими как: создание пароля для входа в систему и установка антивирусных программ.

     5.2 Охрана труда


     Охрана труда – система сохранения жизни и здоровья работников в процессе трудовой деятельности, включающая в себя правовые, социально-экономические, организационные, технические, санитарно-гигиенические, лечебно-профилактические, реабилитационные и иные мероприятия[19].
     В Российской Федерации вопросы, относящиеся к организации и охране труда при работе за компьютером, регулируются:
     * Трудовым кодексом;
     * «Типовой инструкцией по охране труда при работе на персональном компьютере» (ТОИ Р-45-084-01)[20].
     Ранее так же действовали «Гигиенические требования к персональным электронно-вычислительным машинам и организации работы» (СанПиН 2.2.2/2.4.1340-03), однако согласно постановлению «Правительства Российской Федерации» от 08.10.2020 N 1631 – данные требования утратили силу [20].
     Площадь рабочего места пользователя ПК с ЭЛТ-дисплеем должна составлять не менее 6 м2, для ПК с плоским дисплеем – 4,5 м2 (объемные нормы на одного человека – не менее 20 м3. В помещениях должна проводиться ежедневная влажная уборка и систематическое проветривание после каждого часа работы. Шумящее оборудование (печатающие устройства, сканеры, серверы и тому подобные), уровни шума которого превышают нормативные, должно размещаться вне рабочих мест сотрудников [20].
     Важно, чтобы офисный работник сидя за компьютером находился за хорошо освещенным рабочим столом [20].
     Рабочие столы следует размещать таким образом, чтобы мониторы были ориентированы боковой стороной к световым проемам, чтобы естественный свет падал преимущественно слева [20].
     При размещении рабочих мест расстояние между рабочими столами должно быть не менее 2,0 м, а расстояние между боковыми поверхностями видеомониторов – не менее 1,2 м [20].
     Конструкция рабочего стола должна обеспечивать оптимальное размещение на рабочей поверхности используемого оборудования. Высота рабочей поверхности стола должна составлять 725 мм, рабочая поверхность стола должна иметь ширину 800-1400 мм и глубину 800-1000 мм. Рабочий стол должен иметь пространство для ног высотой не менее 600 мм, шириной – не менее 500 мм, глубиной на уровне колен – не менее 450 мм и на уровне вытянутых ног – не менее 650 мм [20].
     Конструкция рабочего стула или кресла должна обеспечивать поддержание рациональной рабочей позы работника и позволять изменять позу с целью снижения статического напряжения мышц шейно-плечевой области и спины. Рабочий стул или кресло должны быть подъемно-поворотными, регулируемыми по высоте и углам наклона сиденья и спинки, а также расстоянию спинки от переднего края сиденья, при этом регулировка каждого параметра должна быть независимой, легко осуществляемой и иметь надежную фиксацию [20].
     Клавиатуру следует располагать на поверхности стола на расстоянии 100-300 мм от края, обращенного к пользователю, или на специальной поверхности, отделенной от основной столешницы [20].
     Экран видеомонитора должен находиться от глаз пользователя на расстоянии 600-700 мм, но не ближе 500 [20].
     Профессиональные заболевания – заболевания, возникающие в результате воздействия вредного производственного фактора. По оценкам экспертов «МОТ», в РФ ежегодно умирает порядка 190 тысяч человек из-за плохих условий труда [21].
     К профессиональным заболеваниям относят заболевания, которые встречаются только в условиях профессиональной деятельности или они распространены в данной профессии чаще, чем в целом среди населения или в других рабочих группах [21].
     В ряде стран существуют списки профессиональных заболеваний, за которые работник имеет право на получение компенсаций или пособий. За заболевания, не включенные в такой список, компенсации не предусмотрены. Поэтому для описания заболеваний профессионального происхождения, которые не включены в официальные списки, используется термин «Профессионально обусловленные заболевания». В законодательстве многих стран существует презумпция того, что конкретное заболевание вызвано тем, что рабочий находится в рабочей среде, а задача работодателя или страховщика доказать, что болезнь возникла по другой причине [21].
     В Российской Федерации постановка диагноза острого или хронического профессионального заболевания сопровождается выполнением ряда законодательно утвержденных процедур. Диагноз хронического профессионального заболевания ставится в «Центре профпатологии» [21].
     Офисный синдром – сложный комплекс симптомов, включающий в себя нарушения, которые проявляются в различных органах и системах, и развивающийся у офисных служащих в связи с воздействием на них вредных факторов окружающей рабочей среды. Важную роль в нем занимает эмоциональное выгорание [22].
     Среди болезней офисных работников можно выделить следующие клинические симптомы и группы заболеваний:
     * мышечно-скелетные боли в спине, шее, верхних конечностях;
     * головные боли, причиной которым могут быть: стрессы, длительная работа за компьютером, непроветриваемые помещения, ненормированный рабочий день, недосыпание;
     * синдром «Компьютерной мыши» (туннельный синдром) – состояние, когда в ведущей руке возникают такие симптомы, как парестезии, боль, слабость в кисти, отек кисти;
     * сердечно-сосудистые заболевания (атеросклероз, гипертоническая болезнь, аритмия и др.), причиной которых могут быть: неправильное питание, злоупотребление кофе, курение, гиподинамия, ожирение, стрессы на работе, неправильный режим дня и другое;
     * синдром «сухого глаза», включающий в себя такие симптомы, как покраснение, усталость глаз, сухость глаз, ощущение «песка» в глазах. Причины: длительная работа за компьютером, кондиционированный воздух офисных помещений, аллергены;
     * заболевания желудочно-кишечного тракта (гастрит и язва желудка, хронический колит и другое). Причины: нерегулярное, неправильное питание, злоупотребление кофе, курение, воздействие стрессовых факторов;
     * заболевания дыхательной системы: бронхиальная астма, бронхит, пневмония, простудные заболевания. Причины: кондиционированный воздух в офисных помещениях, большое скопление людей на ограниченной территории, аллергены (пластик, пыль);
     * геморрой и трещины прямой кишки, хронические воспалительные заболевания органов малого таза (хронический простатит у мужчин, хронический эндометрит, сальпингоофорит у женщин). Причины: гиподинамия, длительное сидячее положение, приводящее к застою в венах малого таза;
     * ожирение. Причины: неправильное питание, малоподвижный образ жизни, ненормированный рабочий день, корпоративное общение посредством различных мессенджеров, телефонных звонков, электронной почты;
     * варикозное расширение вен нижних конечностей, тромбофлебит. Факторы риска: малоподвижный образ жизни, неправильное положение ног при работе в офисе («нога на ногу»), курение[22].
     Как правило, развитию подобной симптоматики подвержены офисные аналитики, секретари и программисты, а также любые служащие, страдающие перфекционизмом [22].
     Искусственное освещение, длительное непрерывное сидение перед монитором даже самого высокого разрешения губительно влияют на зрительную систему человека. Кроме синдрома сухого глаза, проявляющегося гиперемией конъюнктивы, нарушением функции слезовыделения и перераздражение цилиарных и глазодвигательных мышц, может прогрессировать миопия(близорукость) или гиперметроприя (дальнозоркость) [22].
     Специалисты рекомендуют каждые 2 часа выходить со своего рабочего места на 15 минут, делать зарядку для глаз, разминать суставы рук и ног или, если позволяет время, пройтись в обеденный перерыв. Рабочий день любого служащего составляет около 9 часов, включая перерыв на обед, но высокие планки устанавливаемые руководством, а также самими сотрудниками, а также обещание бонусов заставляют сотрудников работать не разгибая спины [22].
     Что касается заболеваний органов дыхательных путей, их развитию способствует сам принцип открытого пространства, разделенного перегородками. Любая инфекция, передающаяся воздушно-капельным путем, свободно перемещается и передается от больного к здоровому при отсутствии надлежащей системы кондиционирования. Давно доказано, что патогенез развития бронхиальной астмы напрямую зависит от психо-эмоционального состояния человека и его склонности к аллергическим реакциям, а также слабый иммунитет. Размещение сотрудников таким способом лишает их личного пространства и заставляет чувствовать стресс и психологический дискомфорт [22].
     Развитию заболеваний пищеварительного тракта способствует гиподинамия (недостаточная подвижность работающего в офисе индивидуума). Длительное сидение в неудобной позе замедляет перистальтику, снижает обмен веществ. Сорокапятиминутный обед в общественной столовой не дает насладиться приемом пищи, потому что часто сотрудники устраивают обед во время которого говорят о работе, что также ведет к стрессу и хроническим неврозам [22].
     Многие европейские и транснациональные компании практикуют график работы «без временных рамок», поэтому часто можно увидеть экспата (сотрудник, поменявший место жительства на другую страну, как правило, в пределах одной организации), сидящего в офисе по выходным, потому что его семья находится далеко и друзей и близких нет рядом [22].
     При отсутствии нормального моциона происходит веностаз, лимфостаз, что ведет к ожирению, атеросклерозу, флебитам и гормональному дисбалансу. Врачи настоятельно рекомендуют выбрать время для физических упражнений в спортзале или больше проводить время на улице [22].
     Что касается курения во время рабочего дня, то следует отметить, что любой заядлый курильщик делает это чаще во время рабочего дня вследствие стресса и иллюзии свободного пространства или желания побыть наедине с собой [22].
     Отдельной строкой следует отметить программистов, специалистов ИТ и служб поддержки. Эти сотрудники наиболее подвержены развитию всех вышеуказанных синдромов, включая синдром компьютерной мыши [22].
     В ведущей руке у офисного служащего в течение длительного времени находится компьютерная мышь. Неудобное положение руки в сочетании с ее длительным изгибом в запястье и большим количеством мелких стереотипных движений приводит к стойкому напряжению мышц и нарушению кровообращения. Это влечет за собой гипоксию и отек нерва, его сдавление в канале запястья. На основании собственных исследований Лиу и соавтор утверждают, что синдром запястного канала имел место у каждого шестого обследованного ими работающего на компьютере. По их данным, большему риску подвергаются те пользователи, у которых при работе с клавиатурой кисть разогнута на 20° и более по отношению к предплечью [22].
     Синдром карпального канала проявляется болью, онемением, парестезиями и слабостью в руке, кисти. Боль и онемение распространяются на ладонную поверхность большого, указательного, среднего и 1/2 безымянного пальца, а также на тыльную поверхность указательного и среднего пальца. Вначале симптомы возникают во время работы за компьютером, а затем онемение и боль появляются и в состоянии покоя, иногда возникают ночью. В запущенных случаях симптомы могу приобретать перманентный характер, что значительно сказывается на работоспособности служащего и часто является причиной временной нетрудоспособности от нескольких месяцев до нескольких лет [22].
     В начале 1980 годах в США, Австралии и ряде европейских стран были приняты нормативные акты, устанавливавшие статус синдрома запястного канала в качестве профессиональной патологии. С этого времени стал употребляться термин – «хроническая травма от повторяющегося напряжения». С 1983 по 1986 годы была отмечена эпидемия такого заболевания. С развитием программ по улучшению эргономической ситуации рабочих мест возникла тенденция к снижению частоты встречаемости данного заболевания, однако и в настоящее время уровень заболеваемости им остается высоким [22].
     Основой профилактики и лечения синдрома компьютерной мыши является изменение привычного локомоторного стереотипа и образа жизни. Туннельные синдромы часто являются результатом не только монотонной деятельности, но и нарушения эргономики (неправильная поза, неудобное положение конечности во время работы). Разработаны специальные упражнения и рекомендации по оптимальной организации рабочего дня и рабочего места [22].
     Линкольн и соавтор в 2000 году опубликовали обзорную статью по методам первичной профилактики синдрома запястного канал. Они выделяют следующие три группы методов профилактики возникновения этого заболевания:
     * инженерные решения (альтернативные конструкции клавиатур, компьютерных мышей, подставки под запястье, системы крепления клавиатур). При работе с мышкой кисть должна быть на одной прямой линии с предплечьем, для чего используется специальный коврик для мыши с подвижной опорой на колесиках. Для купирования боли и предотвращения рецидива используются ортезы и лангеты, использующие принцип шинирования;
     * персональные решения (тренинги по эргономике, наличие упора для кисти, правильная посадка, осанка и расположение рабочего места, ношение поддерживающей шины на запястье, системы электромиографической обратной связи, упражнения во время работы);
     * многокомпонентные решения, или эргономические программы (перепланировка рабочего места, учет эргономики в рабочем процессе, периодическая смена вида деятельности в рамках должности, эргономические тренинги и ограничения нагрузок) [22].
     Методы устранения офисного синдрома:
     * изменение распорядка дня;
     * оптимизация рабочих процессов с целью создания комфортных для каждого сотрудника условий труда (работа с удаленным доступом);
     * применение лекарственных препаратов для того, чтобы прервать хронизацию процесса;
     * занятия спортом и длительные прогулки на свежем воздухе;
     * перемена работы и поля деятельности [22].
     
     
     5.3 Мероприятия по улучшению окружающей среды


     Помимо уже описанных в предыдущем подразделе мер по улучшению окружающей среды в офисе, существуют еще несколько.
     Во-первых, наличие растений, которые очищают воздух и выделяют большое количество кислорода.
     Во-вторых, энергоэффективная техника (класса A+ и выше), энергосберегающая (светодиодные лампы и т.п.) и большие окна, которые в дневное время могут полностью заменить искусственное освещение [23].

Заключение


     Таким образом, была достигнута цельвыпускнойквалификационной работы – разработка информационной системы«Страхование автомобилей».
     Выполненные практические задачи для достижения цели в рамках выпускнойквалификационной работы:
     * исследована предметная область;
     * сформированы требования к разработке;
     * выбран формат и средства реализации разработки;
     * спроектирована архитектура приложения;
     * выбрана цветовая палитра приложения;
     * спроектирована структура базы данных приложения;
     * разработан пользовательский интерфейс приложения;
     * запрограммировано приложение;
     * протестировано приложение;
     * проведено экономическое обоснование проекта;
     * рассмотрены вопросы информационной безопасности, охраны труда и окружающей среды.
     Данное приложение разработано для штатных сотрудников автостраховых компаний. Оно предоставляет возможность: выбора, расчета стоимости, добавления, хранения, просмотра, редактирования и удаления полисов:ОСАГО, КАСКОи Зеленая карта. А также обладает простым и понятным пользовательским интерфейсом.
     
     

