Введение


В современном мире любая отрасль человеческой деятельности может быть продуктивной только благодаря использованию современных технологий. Информационные системы как средство автоматизации находят свое применение в производстве, бизнесе, здравоохранении, социальной сфере. Автоматизация бизнес-процессов значительно повышает эффективность работы любой организации. Строительная отрасль не является исключением. Здесь внедрение информационной системы (ИС) заметно упрощает управление проектами и организацию логистики перевозок. Единая система помогает организовать учет продаж строительных материалов и других услуг строительной организации.
Разработка web-сервиса (приложения) для автоматизации деятельности строительной организации является особо актуальным проектом, потому что коммуникация внутри компании и взаимодействие с клиентами организации в настоящее время организуются в основном с использованием сетевых технологий. 
Целью выпускной квалификационной работы является разработка web-сервиса для автоматизации деятельности строительной организации.
Для достижения поставленной цели требуется решить следующие задачи:
	выделить основные теоретические требования к работе;
	определить программные средства для разработки web-сервиса;
	разработать макет web-приложения;
	разработать frontend и backend web-сервиса;
	произвести расчет стоимости проекта;
	рассмотреть вопросы экологичности и охраны труда.

	Основные теоретические сведения


	Виды информационных систем


Для рассмотрения различных видов информационных систем, введем основные понятия. 
Информационные системы помогают организовывать повседневную работу специалистов, помогая собирать и обрабатывать информацию, управлять различными процессами организации в удобной для пользователя форме.
Информационная система (ИС) – это система, обрабатывающая информацию с различными организационными ресурсами (ими могу являться люди, технологии, финансы и так далее) и позволяющая сохранять и распространять информацию. Информационная система обеспечивает пользователей требуемой информацией в рамках предметной области. Результатом функционирования такой системы являются выходные данные в виде готового  информационного продукта, например выборка из базы данных, документ или информационная услуга по обработке информации [1].
В данной работе предметной областью является автоматизация работы строительной организации, нуждающейся в единой  информационной системе для структурирования, организации работ, распространения информации о предоставляемых услугах и коммуникации с клиентами. Разрабатываемый сервис - не просто «вспомогательное приложение» прикладного характера, а платформа для выполнения рутинных операций, высвобождающая временные и интеллектуальные ресурсы человека.
Благодаря опытным специалистам, в настоящее время существует множество видов информационных систем, каждая из которых выполняет свою уникальную функцию в пределах заданной предметной области.
Рассмотрим различные виды информационных систем и их отличительные особенности.
Транзакционные системы (TPS или ТС). Транзакция - это операция обмена данными или средствами между участниками системы. Обычно транзакции происходят в рамках финансовых операций, таких как перевод денег, покупка товаров или услуг, оплата счетов и т. д. Транзакционные системы являются основой для обработки транзакций, делают легче выполнение операций и облегчают ведение учета различных действий. Эти системы необходимы для организаций, которые имеют особо интенсивный, огромный поток транзакций. Например, банки, интернет-магазины (интернет-сервис строительной организации). 
Системы управления базами данных (DBMS или СУБД). Такие системы позволяют эффективно хранить информацию и эффективно управлять этими данными. СУБД нужны организациям, которые работают с большим объемом информации и которым просто необходим быстрый доступ к информации.
Системы поддержки принятия решений (DSS или СППР). СППР- помогают проводить анализ данных и принимать взвешенные, оптимальные, обоснованные решения на основе анализа. Системы поддержки принятия решений особо важны для менеджеров и аналитиков, которым надо быстро анализировать поступающую из вне информации и принимать на основе этой информации решения.
Системы управления знаниями (KMS или СУЗ). Данные системы нужны для распространения знаний (баз знаний) в организации. СУЗ помогают сотрудникам организации оперативно находить необходимую информацию и распространять свои знания. Эти системы помогают улучшить коммуникацию и сотрудничество, улучшают процессы принятия решений и способствуют инновационному развитию компании.
Информационные системы планирования ресурсов предприятия (ERP или ПРП). ПРП внедряет в себя все основные бизнес-процессы организации, такие как: управление финансами, закупками, производством и т.д. Планирование ресурсов предприятия помогает организации эффективно управлять всеми аспектами своей деятельности.
Системы управления взаимоотношениями с клиентами (CRM или СУВК)- помогают организации в управлении отношениями с клиентами, помогают улучшить обслуживание клиентов и увеличить продажи организации.
Системы управления цепочками поставок (SCM или СУЦП) - комплексные системы, позволяющие управлять всеми этапами процесса поставки товаров или услуг от поставщиков до конечных потребителей. Они включают в себя планирование, контроль и координацию всех этапов цепочки поставок, от закупки и производства до хранения и доставки товаров [1].
Таким образом, разъяснено определение информационной системы, рассмотрены некоторые виды информационных систем, характерные особенности которых учтены в данной выпускной квалификационной работе. 
Существует множество других видов информационных систем, но для разрабатываемого сервиса достаточно рассмотренного разнообразия функциональных возможностей.


	Понятие Web-приложения


Рассмотрев понятие и возможный функциональный потенциал информационной системы, обозначим выбор реализации ИС. В ходе работы выполнено веб-приложение для автоматизации работы строительной организации. 
Современная эпоха во многом зависит от информационных технологий, которые играют важнейшую роль в коммерческом секторе. Важно учитывать предпочтения молодежи, горожан и людей с высоким уровнем дохода, поскольку именно они широко используют интернет и современные технологии.
Для того чтобы привлечь более широкий круг потребителей, компании могут рассмотреть возможность использования своих веб-сайтов и интернет-магазинов.
Современные технологии и интернет-сервисы открывают перед бизнесом новые возможности для расширения сферы деятельности и повышения качества обслуживания клиентов. Компании, использующие веб-сайты и интернет-магазины, могут гарантировать доступность своих товаров и услуг.
Расширение географии продаж и круглосуточная доступность – вот некоторые из преимуществ интернет-маркетинга. Кроме того, он позволяет более точно нацеливаться на аудиторию и проводить более эффективные рекламные кампании. Стоит отметить, что онлайн-покупки становятся все более популярными среди современных потребителей, что делает интернет-маркетинг необходимым инструментом для бизнеса.
В России современные интернет-ресурсы используются компаниями для развития своего бизнеса. Такой подход позволяет расширить рынки сбыта, повысить производительность труда, оптимизировать использование ресурсов, улучшить управление бизнесом и предоставлять более качественные услуги.
Сервис может предложить новые возможности для развития интернет-ресурсов.
Веб-сайт – это набор взаимосвязанных веб-страниц, доступных всем пользователям и объединенных под одним доменным именем. Важно отметить, что все общедоступные веб-сайты вместе составляют Всемирную паутину [2].
Отдельные лица, группы, предприятия или организации могут создавать и поддерживать веб-сайты для различных целей.
Для доступа к веб-сайтам используется специальный протокол передачи данных HTTP (HyperText Transfer Protocol). Страницы сайта представляют собой текстовые файлы, размеченные в HTML, которые затем загружаются браузером на компьютер.
Система обрабатывает введенные пользователем данные и выводит их на экран. HTML позволяет форматировать текст, создавать гиперссылки и вставлять мультимедийные элементы, такие как изображения и аудиофайлы. 
Изменения внешнего вида веб-страницы могут быть сделаны с помощью CSS для добавления стилей или JavaScript для создания интерактивных эффектов.
Изменения внешнего вида веб-страницы могут быть сделаны с помощью CSS для добавления стилей или JavaScript для создания интерактивных эффектов. Веб-страницы могут быть созданы в виде статических файлов или с помощью специализированных серверных программ. Параметры конфигурации могут различаться [2].
Для каждого сайта могут использоваться индивидуальные шаблоны или готовые шаблоны для определенных типов сайтов. Кроме того, на некоторых сайтах используются системы управления контентом (CMS), позволяющие владельцам гибко настраивать структуру и содержание сайта.
Рассматривая классификацию веб-сайтов, были выявлены несколько существенных характеристик, по которым можно разделить виды веб-сайтов.
Есть различные критерии разделения веб-сайтов(сервисов). Например, можно рассмотреть типы веб-сайтов по критерию доступности. На рисунке 1 представлены типы веб-сайтов разделенные по критерию доступности.

 
Рисунок 1 – Типы веб-сайтов по критерию доступности

Открытые веб-сайты – это сайты, которые абсолютно доступны для просмотра и пользования любым пользователем в интернете, здесь не нужна регистрация или авторизация для входа. Открытые веб-сайта открыты для всех пользователей в интернете. Примером открытого веб-сайта могут служить большинство информационных порталов, образовательных порталов и официальные сайты госорганизаций.
Закрытые веб-сайты – это сайты, доступ к которым ограничен путем авторизации, иначе же – входом в систему, либо путем выстраивания настроек приватности или ограничениями сети, пример этого – корпоративная сеть. Доступ к таким сайтам закрыт для всех, у кого нет специального разрешения. Также примером являются специализированные ИС и личные страницы, доступ к которым ограничен входом в аккаунт.
Полузакрытые(полуоткрытые) – это сайты, часть контента которых доступна всем пользователям в интернете без каких-либо ограничений, а другая часть требует авторизации или регистрации для получения доступа. Такие полуоткрытые веб-сайты делятся на два доступа, то есть базовый контент доступен для всех, а дополнительные функции доступны только для зарегистрированных пользователей.
Можно разделить все сайты по типу загрузки. Это показано на рисунке 2.

 
Рисунок 2 – Сайты по типу загрузки

Статический сайт отличается от динамического следующими параметрами. Статические сайты состоят из фиксированного количества веб-страниц с контентом, и он не меняется от действий пользователя. Страницы статического веб-сайта хранятся на сервере уже в таком виде, в котором они представлены пользователю. Также используются базовые технологии для разработки сайта.
Динамические же сайты создаются в реальном времени в ответ на действия(запросы) пользователя. Содержимое может меняться в зависимости от действий пользователя, а также времени или местоположения. Для разработки используются серверные языки программирования.
Как раз разрабатываемая система, подразумевает динамический веб-сайт.
Также обращая внимание на рисунок 3, можно рассмотреть подробную классификацию веб-сайтов.

 
Рисунок 3 – Классификация веб-сайтов

На рисунке присутствуют такие понятие, которые не всем могут быть понятны. Поэтому необходимо предоставить пояснение к схеме для понимания сути.
Дополнительные ресурсы в интернете, такие как сателлиты, дорвеи и лендинги, могут быть использованы для продвижения других сайтов, но не содержат полезной информации для посетителей. Сателлиты помогают увеличить посещаемость и монетизировать главные сайты. Далее можно рассмотреть понятия такие как: дорвеи и лендинги.
Дорвеи – это веб-страница или сайт, насыщенный ключевыми словами для того, чтобы появиться на первых местах в результатах поиска. Они могут быть использованы для рекламы продукции и услуг.
Лендинги – это веб-страницы, которые используются для сбора контактных данных целевой аудитории и увеличения эффективности рекламы.
Также можно выделить общие принципы разработки веб-сайтов. На рисунке 4 выделены эти принципы.

 
Рисунок 4 – Общие принципы разработки веб-сайтов

Теперь, с изученной информацией можно перейти к самой структуре веб-сайта или же веб-сервиса.
Структура сайта – это организация его страниц по категориям или разделам, которая образует его логическую карту или sitemap. Структура сайта служит навигацией для пользователей, обеспечивая путь к нужным страницам или категориям. Как для посетителей, так и для SEO структура сайта имеет огромное значение. Ни поисковые роботы, ни человек не должны тратить слишком много времени на поиск необходимой информации. Если пользователь теряет терпение, он просто покидает ресурс, а поисковые системы не могут проиндексировать все важные страницы [2].
Поисковая оптимизация (SEO) – это комплекс мер, направленных на оптимизацию внутренних и внешних факторов сайта с целью повышения его рейтинга в результатах поисковой выдачи.
Основная цель SEO – увеличение посещаемости сайта за счет улучшения его позиций в результатах поиска по определенным запросам пользователей.
Позиция сайта в результатах поиска может повлиять на количество посетителей, переходящих на него со страниц поисковых систем. При оценке эффективности поисковой оптимизации учитываются затраты на привлечение целевых посетителей, в том числе время, затраченное на достижение определенных позиций сайта, и коэффициент конверсии сайта.
Доменное имя – это адрес сайта в интернете, который используется для поиска. Как известно, каждый веб-сайт состоит из веб-страниц, содержащих различные типы контента, такие как текст, изображения и файлы.
Хранение данных ограничивается страницами и их содержимым, которые размещаются на физическом веб-сервере. Доменное имя служит идентификатором местонахождения указанных страниц.
При вводе адреса веб-сайта в адресную строку браузера он определяет местоположение нужного сервера. В прошлом для доступа к веб-сайтам использовались цифровые IP-адреса, состоящие из четырех цифр, разделенных точками. Однако при таком способе бывает сложно запомнить несколько IP-адресов. Поэтому вместо цифр используют текстовые имена для обозначения доменных имен, которые представляют собой названия и адреса сайтов в Интернете. Их принято называть «доменными именами» или «доменными адресами». Когда пользователь вводит доменное имя в адресную строку браузера, сервер определяет, какую страницу или адрес отобразить. Основное назначение доменного имени - упростить адрес веб-сайта для удобства запоминания.
При выборе домена нужно выбирать краткое и запоминающееся слово или фразу.
Хостинг – это услуга, которая позволяет пользователям хранить и иметь доступ веб-сайта в интернете. 
Специализированные компании, называемые хостерами, предоставляют эту услугу, давая в аренду место на своих серверах, где может работать веб-сайт.
Хотя для хостинга можно использовать домашний компьютер, это требует постоянной работы компьютера, бесперебойного доступа к надежному интернет-соединению и установки надежного программного обеспечения. Для обеспечения стабильности и высокой доступности веб-сайта рекомендуется использовать профессиональных хостинг-провайдеров, а не полагаться на надежное интернет-соединение и установку специальных серверных программ [2].
Теперь можно рассмотреть этапы разработки веб-сайта:
	создание макета веб-сайта;
	верстка сайта;
	программирование.
Подробное описание каждого пункта описано ниже.
Создание макета веб-сайта – это ключевая роль в разработке. Графические дизайнеры занимаются созданием шаблонов страниц сайтов для конечного пользователя. Пользовательский интерфейс, графические объекты – это все то, чем занимается веб-дизайнер. После создания макетов сайта, их передают заказчику для оценки. Чтобы сделать макеты сайта более понятными, в них вставляется примерное содержимое, по теме разработки.
После создания макета работа передается верстальщику сайтов. Он отвечает за превращение макетов веб-сайта, которые могут быть передан ему в виде простых изображений (JPEG или PNG) или в формате фтошопа PSD или AI с разделением на слои, в готовые гипертекстовые веб-страницы. Одной из сложных задач для веб-разработчика является обеспечение кроссбраузерной совместимости веб-страниц. Это означает, что различные программы, используемые для просмотра веб-страниц, могут по-разному интерпретировать элементы разметки и правила CSS, что может привести к неожиданному отображению контента для некоторых пользователей и расхождению между ожиданиями дизайнера и клиента.
После работы верстальщика, начинается работа программиста, так как нужно запрограммировать сайт для его функционирования. При помощи фреймворков программисты добавляют функциональность сайту.
Далее контент-менеджеры занимаются созданием текста для наполнения сайта. Также важно учитывать SEO-оптимизацию контента, чтобы сайт был более видимым для поисковых систем и привлекал больше трафика.
Развитие бизнеса, связанного с созданием веб-сайтов и(или) интернет-магазинов, как никогда актуальны по всему миру. Организации, обращающие внимание на эти аспекты, безусловно привлекают потребителей не только в определенном регионе, но и по всей планете, что способствует стремительному росту бизнеса.


	Анализ целевой аудитории


Должно быть очевидно, какая целевая аудитория пользователей разработки, так как сфера деятельности – это строительная фирма. Но если взглянуть глубже, то у разработки также найдутся и конкуренты, поэтому важно тщательно оценить свою целевую аудиторию для отстаивания своей выигрышной позиции на рынке.
Вообще, анализ своей целевой аудитории (ЦА) – это такой же важный шаг, как и проектирование, разработка и прочие действия при создании информационной системы.
Необходимо взглянуть на потенциального клиента, а также составить его портрет, определить целевое местоположение клиента, исходя из далее полученных данных о потенциальном клиенте.
Портрет потенциального клиента web-сервиса для автоматизации деятельности строительной организации выглядит следующим образом. Во-первых, имеется сразу два клиента с разными запросами: клиент-покупатель и клиент-заказчик. Клиент-покупатель – это обычный пользователь, который приобретает товары и услуги на сайте. Клиент-заказчик – это пользователь, но который имеет цель, развить свой бизнес, поэтому для него использование услуг будет заключаться в другом. Во-вторых, для каждого из этих клиентов имеются разные требования продаж, что повлияет на определение потенциальной целевой аудитории [3].
Клиент-покупатель: имеет возраст строго от 18 лет и до 60+, заработок составляет порядка от 30 000 рублей и выше, в основном это средняя заработная плата по своему местоположению. По-другому, можно сказать, что это совершеннолетние работоспособные граждане.
Клиент-заказчик: почти не отличается от клиента-покупателя, единственное различие – это наличие более высокой заработной платы, за счет бизнеса.
Местоположение может варьироваться от ближайшего региона, до других точек страны, так как автоматизация деятельности строительной организации также подразумевает доставку товаров и дальнейшую работу с логистикой. Но изначальным регионом взаимодействия с клиентов является Ростовская область, а в частности, Таганрог. При продаже разработки, целевым местоположением будет являться регион, где и будет выкуплена работа [3].
Также, необходимо упомянуть о еще одной характеристики целевой аудитории – это семейное положение. В данном случае, с большей вероятностью, потенциальный клиент будет состоять в браке, так как наличие брака подразумевает подготовку жилья для совместного проживания. Но по как бы очевидной статистике, не все пары подкрепляют свои отношения официально, поэтому наличие брака будет являться необязательным условием для клиента.
Теперь, когда целевая аудитория намечена, можно определить дизайн сайта и логику перемещения внутри веб-приложения под клиента.

	Анализ предметной области


2.1 Требования к разработке


Благодаря проведенному анализу в первой главе, можно выявить необходимые требования к разработке. 
Интерфейс должен быть разработан таким образом, чтобы свести к минимуму процесс обучения пользователя. Это означает, что как опытные пользователи Интернета, так и менее технически подкованные клиенты должны иметь возможность быстро освоиться с функционалом сайта. Навигация по сайту должна быть логичной и предсказуемой, с четко определенными разделами, такими как каталог продукции, информация о компании, контактная информация и служба поддержки.
На сайте должна быть предусмотрена система поиска, которая поможет пользователям легко находить товары и услуги. Оптимизация под мобильные устройства очень важна, поскольку многие пользователи выходят в интернет через смартфоны. Процесс оформления заказа или предоставления услуг должен быть упрощен, чтобы свести к минимуму количество необходимых шагов [4].
Сервис сайта должен предоставлять персонализированные рекомендации по товарам и услугам на основе предыдущих покупок или поисковых запросов пользователей. Это сделает взаимодействие с сайтом более целенаправленным и эффективным. Кроме того, необходимо разработать профили пользователей, которые позволят им сохранять историю заказов, отслеживать статус текущих заказов и управлять персональными настройками.
Система должна предоставлять клиентам функциональные возможности для управления строительными проектами, включая планирование, отслеживание хода работ и управление бюджетом. Должны быть интегрированы инструменты CRM для улучшения взаимодействия с клиентами и обеспечения более персонализированного обслуживания, включая уведомления о специальных предложениях и персонализированных скидках [4].
В будущем можно реализовать такое требование как интерфейс. Интерфейс сайта можно настроить в соответствии с индивидуальными предпочтениями пользователя, например, выбрать тему или расположение элементов управления на странице.
На сайте должен быть представлен каталог товаров и услуг, который можно удобно отфильтровать по цене, категории, рейтингу и наличию. Кроме того, необходима система управления заказами, позволяющая пользователям отслеживать статус текущих заказов и просматривать историю покупок.
После разработки будет возможность реализовать инструменты управления проектами. Клиентам также необходимы инструменты управления проектами, включающие планирование, бюджетирование, распределение ресурсов и мониторинг хода работ.
Кроме того, важна интеграция со службой поддержки клиентов. Этого можно достичь с помощью чат-ботов, что не будет реализовано на данном этапе разработки, систем обратной связи и горячих линий с администратором, которые помогут обеспечить оперативное решение вопросов и проблем клиентов.
Так, удалось выделить требования для разработки веб-приложения, описанные выше.


2.2 Выбор средств реализации


Для реализации такой системы, необходимо определить инструменты разработки, а именно средства реализации.
Средств реализации веб-приложений существует очень много, но для данной разработки, разработчиком были выбраны следующие средства: среда разработки Visual Studio Code, React, язык разметки html, javascript, css. Ниже представлено подробное описание выбранных средств разработки.
Visual Studio Code (VSCode) – бесплатная кроссплатформенная интегрированная среда разработки (IDE), разработанная компанией Microsoft. Она предназначена для программирования на различных языках, включая JavaScript, TypeScript, Python, C++, C#, Java и другие. VSCode работает под управлением операционных систем Windows, macOS и Linux.
Основные возможности программы включают поддержку IntelliSense для автоматического завершения кода на основе типов переменных, значений параметров и определений функций [5].
Встроены средства отладки кода, поддерживающие точки останова, просмотр переменных и пошаговое выполнение кода. Интерфейс IDE интегрируется с системой контроля версий Git, позволяя напрямую выполнять команды Git. Можно установить дополнительные расширения для добавления новых функций, поддержки языков программирования и интеграции с другими инструментами и сервисами. IDE отличается легкостью и высокой производительностью.
Она обеспечивает быструю загрузку и работу даже на менее мощных компьютерах.
Пользователи могут настраивать темы, шрифты, цвета и поведение редактора в соответствии со своими предпочтениями.
Visual Studio Code пользуется популярностью среди разработчиков благодаря своей гибкости, мощным функциям и простоте использования.
Django – это фреймворк для языка программирования Python, который позволяет реализовать на этом языке веб-приложения и сайты. Фреймворк означает набор готовых инструментов и различных функций для разработки.
Есть возможность разрабатывать веб-приложения на языке Python и без данного фреймворка, но при этом увеличивается работа разработчика в очень много раз.
Основные возможности фреймворка следующие:
	имеется веб-сервер для связи запросов пользователя и сервиса;
	удобные и простые шаблоны для страниц сайтов;
	готовый шаблон-механизм для авторизации;
	имеется система кеширования, чтобы увеличивать скорость для загрузки страниц с использованием браузера, внешнего клиента или приложения;
	имеются интерфейсы и адаптеры для возможности подключения базы данных разного типа.
У «Джанго» есть своя административная панель, она становится доступна автоматически, когда создается приложение. При помощи этой панели можно создавать и менять пользователя и права доступа, также можно редактировать, удалять и добавлять записи без написания кода.
В документации к «Джанго» прописано множество его функций и возможностей, который используются в настоящей разработке.
Основная работа фреймворка выглядит следующим образом. Модель MTV, то есть Model-View-Template (Модель-представление-шаблон) разделяет всю внутреннюю логику работы сайта и наружний вид страницы для пользователя. Здесь «Модель» обеспечивает внутреннюю работу сайта, то есть – это подключение к бд, форма хранения данные и так далее.
«Представление» определяет данные, которые отображаются пользователю, выполняет доставку данных туда, где они будут видны. Представление принимает запросы от пользователя и выполняет ответное действие, например может обновить страницу, после отправки информации [5].
«Шаблон» – это и есть шаблон страницы на джанго, то что видно пользователю.
У Джанго есть свои преимущества и недостатки, вот некоторые из них.
Преимущества:
	простота использования;
	функции фреймворка удобно менять и использовать под себя;
	имеется понятная документация;
	высокий уровень безопасности, так как в фреймворк встроена защита, которая дает безопасность пользователям и самой разработке;
	администрирование максимально удобно, так как графический интерфейс позволяет легко управлять бд и содержимым;
	фреймворк очень популярен, и, как следствие, имеет очень большое сообщество и туториалы, ответы всегда можно найти;
	джанго поддерживает много различных баз данных.
Недостатки:
	ограничения и строгость в разработке;
	требовательное ПО;
	если сайт маленький, то нет смысла использовать большие мощности и возможности джанго, так как проще создать без фреймворка.
Установка джанго происходит следующим образом. Для начала устанавливаются компоненты для Python, потом создается виртуальное окружение, там будет работать проект с использование джанго. После чего это виртуальное окружение активируется и происходит установка джанго с использованием Python-команд.
HTML (HyperText Markup Language) – это стандартный язык разметки, используемый для создания и структурирования веб-страниц и веб-приложений. Он определяет структуру содержимого веб-страниц с помощью различных тегов и атрибутов, таких как заголовки, абзацы, списки, ссылки, изображения и многое другое [6].
JavaScript – это интерпретируемый язык программирования высокого уровня, широко используемый в веб-разработке для создания интерактивных и динамических веб-страниц. С его помощью можно изменять содержимое HTML и CSS, реагировать на события пользовательского интерфейса, отправлять запросы на сервер, обрабатывать ответы и выполнять другие логические действия веб-приложения [7].
Каскадные таблицы стилей (CSS) – это язык стилей, используемый для определения внешнего вида и форматирования веб-страниц. CSS обеспечивает последовательный и отзывчивый дизайн веб-сайтов, гарантируя правильное отображение на различных устройствах и экранах. CSS используется для определения стилей для элементов HTML, включая цвета, шрифты, поля, границы, фоновые изображения и многое другое.
Для создания макета сайта можно использовать конструктор, который благодаря своему функционалу, выполнит всю лишнюю монотонную работу.
Nicepage – это такой инструмент, который позволяет спроектировать веб-страницу с большой возможностью кастомизации. Например, отлично подходит для создания адаптивного дизайна. Nicepage имеет такие функции как:
	drag-and-drop редактор. Такой редактор позволяет пользователю легко перемещать элементы на шаблоне;
	адаптивный дизайн. Функция предполагает автоматическую коррекцию дизайна страницы, под различные устройства (компьютеры, планшеты, телефоны);
	выбор шаблонов. Конструктор предоставляет достаточное количество шаблонов под разные нужды, их можно использовать как основы для дальнейшего дизайна;
	интеграции. Веб-сайты, созданные при помощи этого конструктора, можно экспортировать в html, а также переносить на WordPress и Joomla.
Таким образом удалось определить основные средства разработки веб-сервиса для строительной организации.


2.3 Модель информационной системы


Методология IDEF0 может использоваться для моделирования широкого круга систем, где под системой понимается любая комбинация средств аппаратного и программного обеспечения, а также людей.
При создании новых систем IDEF0 может вначале применяться для определения требований и функций, а затем для разработки системы, которая удовлетворяет этим требованиям и реализует эти функции. Для уже существующих систем IDEF0 может быть использована для анализа функций, выполняемых системой, а также для указания механизмов, посредством которых они осуществляются.
Результатом применения методологии IDEF0 является модель. Модель состоит из диаграмм, фрагментов текста и глоссария, которые имеют ссылки Друг на друга [8].
IDEF0 – это контекстная диаграмма, она представлена на рисунке 5.

 
Рисунок 5 – Контекстная диаграмма

Диаграммы – главные компоненты модели. На диаграммах все функции производственной системы и интерфейсы представлены как блоки (функции) и стрелки(интерфейсы).
Место соединения стрелки с блоком определяет тип интерфейса. Управляющие производством данные входят в блок сверху, в то время как материалы или информация, которые подвергаются производственной операции, показаны с левой стороны блока; результаты выхода показаны с правой стороны. Механизм (человек или автоматизированная система), который осуществляет операцию, представляется стрелкой, входящей в блок снизу.
Входящие стрелки обозначают поступающую информацию в систему строительной организации, в данном случае – это информация о товарах в строительной организации, ее вносит администратор сайта, а при регистрации поступает информация о зарегистрированном клиенте.
На выходе из системы имеются внесенные данные о товарах администратором, а также выбор услуг, которые может снести администратор вместе с данными о товарах.
Стрелки, действующие на систему сверху, это то, чему подчиняется система, то есть система работает по законам РФ и подчиняется уставу предприятия, в котором эта система действует.
Снизу, стрелки обозначают исполнителей. Таким образом, работу в системе выполняет клиент и администратор, они взаимодействуют с системой, выполняя какие-то функции, которые расписаны далее в диаграмме декомпозиции.
Построение IDEF0-модели начинается с представления всей системы в виде простейшей компоненты – одного блока и стрелок, изображающих интерфейсы с функциями вне системы. Поскольку единственный блок представляет всю систему как единое целое, имя, указанное в блоке, является общим. Затем блок, который представляет систему в качестве единого модуля, детализируется на другой диаграмме с помощью нескольких блоков, соединенных интерфейсными стрелками. Эти блоки представляют основные подфункции (подмодули) единого исходного модуля. Данная декомпозиция выявляет полный набор подмодулей, каждый из которых представлен как блок, границы которого определены интерфейсными дугами. Каждый из этих подмодулей может быть декомпозирован подобным же образом для более детального представления [8].
Диаграмма декомпозиции первого уровня, то есть IDEF0 показана на рисунке 6. Она как бы декомпозирует контекстную диаграмму.

 
Рисунок 6 – Диаграмма декомпозиции первого уровня

На данной диаграмме более подробно раскрыты функции, выполняемые объектами. В данном случае, администратор, используя входящие данные о товарах и услугах выполняет администрирование сайта, а также контролирует процесс регистрации нового пользователя. Пользователь, в свою очередь, используя свою информацию регистрируется на сайте, а также может выбирать услуги и товары.
Все эти действия подчинены законам и уставу компании.
Под бизнес-моделью можно понимать структурированное описание сети процессов и/или функций/операций, связанных с данными, документами, организационными единицами и прочими объектами, отражающими существующую или предполагаемую деятельность организации.
Модель предприятия и бизнес-процессов, сориентированных на конкретную цель, предоставляет возможность его совершенствования. Моделирование бизнес-процессов с максимальной приближенностью к действительности позволяет выбрать и проверить пути улучшения, без необходимости проведения реальных экспериментов с предприятием.
Бизнес-моделирование – деятельность по выявлению и описанию существующих бизнес-процессов (анализ бизнес-процессов), а также проектированию новых (проектирование бизнес-процессов).
Моделирование бизнес-процессов позволяет проанализировать не только, как работает предприятие в целом, как оно взаимодействует с внешними организациями, заказчиками и поставщиками, но и как организована деятельность на каждом отдельно взятом рабочем месте.
В общем случае модель бизнес-процесса должна давать ответы на следующие вопросы:
	какие процедуры (функции, работы) необходимо выполнить для получения заданного конечного результата;
	в какой последовательности выполняются эти процедуры;
	какие механизмы контроля и управления существуют в рамках рассматриваемого бизнес-процесса;
	кто выполняет процедуры процесса;
	какие входящие документы/информацию использует каждая процедура процесса;
	какие исходящие документы/информацию генерирует процедура процесса;
	какие ресурсы необходимы для выполнения каждой процедуры процесса;
	какая документация/условия регламентирует выполнение процедуры;
	какие параметры характеризуют выполнение процедур и процесса в целом.
Таким образом, модель позволяет провести всесторонний анализ, взглянуть со всех точек зрения, увидеть то, что, возможно, не видят все работники предприятия, в том числе и руководство.
На рисунке 7 представлена модель бизнес-процессов строительной организации.

 
Рисунок 7 – Модель бизнес-процессов

Исходя из диаграммы, видно, что администратор выполняет администрирование сайта и отвечает за регистрацию нового пользователя. Клиент пользуется услугами, предоставляемыми после администрирования сайта администратором и выполняет регистрацию.
Таким образом, были спроектированы такие диаграммы как контекстная, диаграмма декомпозиции первого уровня и модель бизнес-процессов.?
	Разработка Web-приложения


3.1 Создание макета сайта


Для создания макета сайта используется Nicepage. В Nicepage Desktop довольно удобно создавать макет сайта и затем одновременно превращать его в настоящий сайт, непосредственно в html и css-код. Но весь код нужно переводить для фреймворка, потому что классический html в конструкторе не подходит для реализации разработки с использованием фреймворка.
На рисунке 8 представлен макет главной(домашней) страницы.

 
Рисунок 8 – Макет главной страницы сайта

На рисунке 9 далее представлен макет страницы с профилем. В эту форму в поля вводится имя пользователя, фамилия, дата рождения, номер телефона, некнейм на сайте, адрес электронной почты, можно также изменить пароль на новый. Кнопка сохранения реализует запись новых данных в базу данных.

 
Рисунок 9 – Макет страницы профиля

На рисунке 10 изображен макет страницы для избранного.

 
Рисунок 10 – Макет страницы для избранного

В избранное можно добавлять товары из списка категорий, а затем из списка товаров. Также при добавлении в избранное происходит запись в БД, а при удалении из избранного, происходит удаление их базы данных.
В корзине реализуется калькулятор, который позволяет подсчитывать всю сумму товаров. Товары в корзину добавляются по нажатию на соответствующую кнопку на карточке товара. При оформлении заказа, отправляется заявка в базу данных администратору, администратор работает с данными и может уточнить статус заказа, он отобразится на странице заказов.
На рисунке 11 показан макет страницы корзины.

 
Рисунок 11 – Макет страницы корзины

Из главной или любой другой страницы имеется возможность посетить страницу заказов. Здесь реализуется список заказов, после оформления их в корзине. На эту страницу можно перейти посредством нажатия на кнопки-ссылки на страницах. Они имеются в футере-шаблоне сайта и в шапке сайта.
На рисунке 12 показан макет страницы заказов.

 
Рисунок 12 – Макет страницы заказов

Таким образом, был составлен визуальный интерфейс веб-приложения.


3.2 Frontend и Backend -части разработки


Как уже удалось обозначить из второй главы о средствах разработки, для разработки используется фреймворк(библиотека) Django. Первое, что нужно сделать после создание макета, это создание проекта на Django с использованием python. Для этого нужно перейти в среду разработки. В данном случае выбрана среда разработки VSCode.
При помощи определенных команд, описанных в разделе про инструменты разработки создается пустой проект на джанго, в котором как раз и необходимо продолжить создание веб-приложения.
На рисунке 13 показана предварительная структура веб-приложения, созданная непосредственно в проекте.

 
Рисунок 13 – Структура проекта

На рисунке обозначены основные папки и файлы проекта. Внутренняя папка hardware_shop содержит в себе настройки самого проекта джанго, включая конфигурации. Папка product – это модуль джанго, отвечающий за управление товарами в проекте, в нем определены модели, шаблоны и конфигурация администратора для управления продуктами. Папка templates содержит html-шаблоны проекта, структуру веб-страниц, которые видит пользователь. Папка static – это директория, в которой хранятся статические файлы, такие как изображения, css и javascript. Папка venv – это папка виртуальной среду python, в ней устанавливаются все зависимости проекта, чтобы они не находились вместе с другими библиотеками и другими проектами.
Backend-часть разработки происходит следующим образом.
Для начала происходит настройка проекта джанго, то есть создается новый проект и в файле «settings.py» происходит настройка базовых параметров для управления конфигурацией проекта [9].
Описание моделей данных, которые используются в веб-приложении представлено в листинге 1, это и есть база данных, листинг вынесен в приложение.
Для осуществления администрирования происходит настройка администрирующего интерфейса джанго для того, чтобы управлять содержимым строительной компании, а именно товаров. На рисунке 14 представлена среда интерфейса для администратора в джанго и структура бд всего приложения.

 
Рисунок 14 – Администрирование в джанго

В файле «admin.py» происходит настройка отображения полей, фильтров и поиска [10].

Для реализации бизнес-логики происходит разработка представлений, то есть «views» и контроллеров для обработки этой самой бизнес-логики. Бизнес-логика в данном случае – это, например добавление товаров в корзину и оформление заказов.
Так как реализация бизнес-логики довольно объемный процесс и содержание кода также велико, для примера в листинге 3 представлена функция context-form, которая нужна для создания контекста данных, которые будут переданы в шаблон при рендеринге страницы. В данном случае реализуется поиск по товарам. Эта функция позволяет использовать имеющиеся данные для передачи в шаблон, чтобы на каждой странице был доступен поиск и список категорий.


Frontend часть разработки подразумевает составление структуры проекта, включая шаблоны, стили и скрипты. В этой же части разработки происходит написание пользовательского интерфейса. Здесь создаются HTML- шаблоны для каждой страницы интерфейса с использованием системы шаблонов джанго. Применяются CSS для стилизации всех элементов интерфейса, а также адаптивный дизайн с помощью медиа-запросов.
Использование JavaScript нужно для создания интерактивных элементов страниц, а именно для управления элементами корзины.
Взаимодействие с бекендом происходит через формы и AJAX-запросы для отправки данных и получения данных. Также для этого используются шаблонные теги джанго и фильтры для динамического отображения содержимого в шаблонах.


	Тестирование разработки


Чтобы убедиться в правильном функционировании разработки важно проводить тестирования на различных этапах работы. В данном случае проводится тестирование выполненной разработки, а результаты представляются в формате скринов. Необходимо проверить качество работы веб-сервиса на различных устройствах.
На рисунке 15 представлено добавление нового товара в одну из созданных категорий. Такую настройку может выполнить только администратор, при помощи создания супер-пользователя в настройках веб-приложения через командную строку.

 
Рисунок 15 – Добавление товара

Результат создания товара представлен на рисунке 16.

 
Рисунок 16 – Результат создания

На рисунке 17 показан процесс удаления товара, посредством нажатия на соответствующий инструмент в администрируемом окне.

 
Рисунок 17 – Процесс удаления товара

На рисунке 18 показано результат удаления.

 
Рисунок 128 – Результат удаления

На рисунке 19 показано добавление товара в корзину и подсчет стоимости товаров для оплаты и заказа.

 
Рисунок 19 – Результат работы корзины

На рисунке 20 показан результат работы добавления товаров в избранное.

 
Рисунок 20 – Результат работы избранного

На рисунке 21 показан результат работы сделанного заказа.

 
Рисунок 213 – Результат работы заказов

Далее нужно проверить работу панели поиска. Для примера вводится слово «ковер», результат работы поиска представлен на рисунке 22.

 
Рисунок 22 – Результат работы поиска

На рисунке 23 показано тестирование сортировки. Для примера берется раздел «стены» и выбирается сортировка по алфавиту.

 
Рисунок 23 – Результат работы сортировки по алфавиту

На рисунке 24 представлен результат работы сортировки по цене «Дороже».

 
Рисунок 24 – Результат работы сортировки по цене «Дороже»

На рисунке 25 представлен результат работы сортировки по цене «Дешевле».

 
Рисунок 25 – Результат работы сортировки по цене «Дешевле»

На рисунке 26 представлен результат работы сортировки по популярности.

 
Рисунок 26 – Результат работы сортировки по популярности

Сейчас, без заказов статистика по популярности не носит верный характер, но как только осуществятся заказы, сортировка будет выполнена верна.
На рисунке 27 представлен результат работы поиска по цене от и до.

 
Рисунок 27 – Результат работы поиска по цене

Таким образом, проведено тестирование разработки на различные действия, что показало хорошую и правильную работу сайта в различных ситуациях.

4 Экономическое обоснование работы


4.1 Планирование работы


Для того, чтобы выполнить планирование работы, используется программа ProjectLibre. Это программа для управления проектами. Список работ со сроками выполнения показан на рисунке 28. Работа начинается с начала проекта, то есть составления технического задания и заканчивается окончанием проекта, то есть тестированием разработки.

 
Рисунок 28 – Список работ со сроками

Сетевой график отражает технологическую зависимость и последовательность выполнения работ.
На рисунке 29 показан сетевой график, который отображает все этапы проекта, длительность и связь.

 
Рисунок 29 – Сетевой график

На рисунке 30 показана диаграмма Ганта. Диаграмма Ганта – это вид диаграмм, который сконцентрирован на использовании для отображения планов, графика работ по проекту.

 
Рисунок 30 – Диаграмма Ганта

Таким образом, выполнено планирование работы.

5 Безопасность и экологичность работы


5.1 Информационная безопасность


Защита данных клиентов и внутренней информации организации веб-приложения – это один из важнейших этапов разработки. Для обеспечения защиты и конфиденциальности данных существуют различные методы защиты информации. Обычно, предпринимаются следующие меры:
	использование шифрования в передаче данных и при хранении данных;
	применение политики конфиденциальности для ограничения доступа к очень важной информации.
Шифрование данных – это процесс, когда информация преобразуется в форму, которую нельзя распознать без знания уникального ключа шифрования, то есть шифра. Этот ключ используется для шифрования и расшифровки данных. Целью шифрования является обеспечение конфиденциальности данных, которые передаются или хранятся, тем самым, шифрование делает данные недоступными для несанкционированного доступа [11].
В веб-приложениях шифрование применяется на стороне сервера и в процессе передачи данных. На стороне сервера, перед хранением, информацию в базе данных можно зашифровать, чтобы сохранить данные при утечке.
В процессе передачи данных в качестве шифрования используются протоколы, такие как HTTPS, которые включают шифрование SSL/TLS для защиты данных, которые передаются от клиента к серверу и наоборот. Таким образом, предотвращается перехват данных третьими лицами.
Существуют множество угроз, с которыми нужно бороться и вести постоянный контроль для предотвращения взломов и утечки информации. И для того, чтобы избавиться от распространенных угроз веб-приложений (например, XSS – cross-site scripting, sql injection, CSRF – cross-site request forgery и т.д.), существуют такие меры, как:
	тестирование. Следует регулярно проводить тестирование на «дыры» в системе, куда может проникнуть злоумышленник, а также регулярно проводить аудит безопасности кода;
	безопасное программирование и фреймворки. Нужно применять безопасные методы программирования и использовать безопасные фреймворки, которые предусматривают защиту от атак.
Как показывает многолетняя практика, подобные сбои безопасности все же случаются, это, безусловно, приносит значительный ущерб, но после атаки или сбоя можно практически все восстановить. Существуют различные стратегии для резервного копирования и восстановления, которые позволяют гарантированно восстановить данные в сложившейся ситуации. Ниже представлены варианты восстановления:
	автоматическое резервное копирование критических данных на облачные хранилища или внешние записывающие устройства;
	план восстановления после сбоя. Такой план обеспечит минимальное время простоя.
Еще одним важным этапом сохранения информационной безопасности является обучение сотрудников и работников.
Необходимо и важно проводить обучение информационной безопасности сотрудников, так как именно из-за неосведомленности работника может произойти утечка крайне важных данных. Нужно посвящать сотрудников в такие темы как: фишинговые атаки, мошенничество и другие угрозы.
Методы обучения сотрудников:
	регулярные тренинги и семинары;
	ввод политика безопасности. Также необходимо регулярно ее обновлять.
Конечно, только безопасностью от угроз не ограничивается информационная безопасность, также важно соблюдать законодательные требования страны. Необходимо проверять все технологии и процессы, происходящие в разработке на соответствование требованиям законодательства.
Для обеспечение информационной безопасности разработки, используется авторизированный доступ к сайту, что не позволяет осуществлять несанкционированный доступ к личным данным клиентов и организации, с целью кражи данных или любой другой вредоносной деятельности [11].
Авторизированный доступ, как средство защиты информации, довольно распространенный и действенный вариант. Этим пользуется любое как веб-приложение, так и любое десктопное, в зависимости от назначения и важности сохранения данных.


5.2 Охрана труда


Охрана труда подразумевает как физическую, так и психологическую безопасность.
К физической безопасности относят: безопасность рабочего места(эргономика) и соблюдение норм безопасности при взаимодействии с оборудованием.
Эргономическое оформление мест подразумевает предоставление регулируемых по высоте стульев и столов, они должны поддерживать правильную осанку и снижать риск возникновения заболеваний, связанных с опорно-двигательной системой.
Освещение должно быть адекватным и достаточным для рабочих зон, чтобы предотвращать усталость глаз и повысить общую продуктивность.
Для поддержания качественного климат-контроля необходимо наличие установленной сплит-системы и вентиляции, так поддерживается комфортная температура и свежий воздух по стандартам санпина.
Использование шумоизолирующих материалов в помещениях, где необходимо соблюсти уровень шума, предотвращает наличие посторонних и шумов серверов и другого оборудования.
Соблюдение норм безопасности при взаимодействии с оборудованием сопровождается следующим описанием. Для соблюдения норм безопасности нужно проводить и проходить регулярные инструктажи для сотрудников, которые обслуживают техническое оборудование, о правилах безопасной работы с оборудованием. К обучению и инструктажу также можно отнести разработку и распространение бумажных и электронных руководств по соблюдению безопасности, их сотрудники могут посмотреть в любое время [12].
Необходимо использовать средства индивидуальной защиты, то есть СИЗ. К этим средствам относят защитные очки, перчатки, антистатические браслеты, специальная обувь с электроизоляцией и с защитой от механических повреждений.
И конечно, важно регулярно контролировать состояние и наличие средств индивидуальной защиты на рабочих местах.
Важно проводить техническое обслуживание за определенный период времени. Также внедрение системы быстрого реагирования предотвратит аварии в случае поломки или неисправности оборудования.
Психологическая безопасность играет не менее важную роль, что некоторые могу, к сожалению, упускать. Необходимо предотвращать профессиональное выгорание и стрессы. Важен гибкий или удобный график работы, который не превышает норму длительности рабочего дня. Наличие психологической помощи даст возможность получить расслабление и отдых от выгорания или стресса [12].
Создание дружественной и приятной атмосферы положительно скажется на состоянии сотрудников и работников. Это позволяет чувствовать себя открыто, что в следствии дает безопасность в коллективе. Рассмотрение вопросов требований к помещению подразумевает учет ряда критериев, которые способствуют не только экологической устойчивости, но и создают оптимальные условия для работы персонала.
Необходимо устанавливать современные системы вентиляции и кондиционирования, которые будут обеспечивать постоянный приток свежего воздуха и отвод переработанного. Такие системы должны быть оснащены фильтрами для очистки воздуха от пыли и различных аллергенов, это соответственно улучшает качество рабочей среды.
Полезным и важным пунктом является установка датчиков качества воздуха для постоянного мониторинга уровня углекислого газа и других загрязнителей. Это позволит оперативно реагировать на любые отклонения от нормы.
Помещение должно иметь правильное освещение. Помещение должно быть спроектировано так, чтобы максимально использовать естественный свет, что не только снижает потребление электричества, но и положительно влияет на здоровье сотрудников и их продуктивность.
Мебель и отделочные материалы следует выбирать по критерию производства. То есть мебель лучше выбирать из переработанных или устойчиво добытых материалов, использовать безвредные краски и покрытия для отделки, которые не выделяют токсичные вещества.
Эргономика рабочих мест играет ключевую роль в обеспечении безопасности и здоровья сотрудников, а также влияет на их продуктивность и самочувствие. Эргономика рабочего пространства включает в себя ряд конкретных мер и решений. Мебель должна быть эргономичной, необходимо выбирать офисные кресла с возможностью регулирования высоты, угла наклона спинки и подлокотников, чтобы поддерживать правильную осанку (положение спины) и уменьшить нагрузку на позвоночник. Рабочие столы должны иметь возможность регулирования по высоте.
Оборудование должно располагаться соответствующим образом. Мониторы должны быть на уровне глаз, на расстоянии примерно в один метр от лица, чтобы избежать напряжения глаз и шеи. Клавиатура и мышь должны располагаться так, чтобы руки находились в естественном положении, предпочтительно на уровне локтей, чтобы минимизировать напряжение в запястьях и предплечьях.
Необходимо обеспечить, чтобы на мониторах не было отражений и бликов, которые могут вызвать напряжение глаз. Рабочие места должны иметь достаточное освещение, желательно с использованием дневного света, при этом искусственное освещение должно быть достаточно ярким, чтобы избежать усталости и перенапряжения глаз.
Для обеспечения пожарной безопасности в офисах и рабочих пространствах, где проводится разработка и поддержка веб-сервисов, необходимо внедрить комплексные меры, обеспечивающие не только предотвращение возникновения пожаров, но и эффективное реагирование в случае их возникновения.
В каждом офисе должны быть установлены огнетушители соответствующих типов для различных классов пожаров, включая электрические пожары. Огнетушители должны быть в легкодоступных местах и регулярно обслуживаться. В критических зонах, таких как серверные, рекомендуется установка систем автоматического пожаротушения, которые могут быстро потушить пожар до прибытия пожарной службы.
Также для каждого этажа и здания должны быть разработаны планы эвакуации, которые четко показывают маршруты и выходы для быстрой и безопасной эвакуации. Эти планы должны быть размещены в видимых местах. Все аварийные выходы должны быть освобождены от препятствий, четко обозначены и легко открываться с внутренней стороны без ключей.
Данные меры помогут создать и поддерживать безопасную и здоровую рабочую среду для работников и пользователей.




5.3 Экологичность работы


Экологичность работы подразумевает описание положительных и отрицательных аспектов, влияющих на экологию и как разработанный сервис поддерживает практику экологичности.
Имеются важные аспекты экологичности такие как:
	минимально использование бумаги;
	оптимизация ресурсов логистики;
	повышение эффективности использования ресурсов;
	появление новых практик в экологии;
	обучение и осознанность.
Теперь следует подробнее разобрать каждый аспект.
Первое, самое явное, что можно выделить – это минимальное использование бумаги. Это один из ключевых экологических аспектов перехода на цифровые технологии, а именно снижение необходимости использовать бумагу. То, что традиционно требовало использования больших объемов бумаг, теперь имеет возможность вести внутренние документообороты, планирования и другие процессы в цифровом и электронном формате.
Второе – это оптимизация ресурсов логистики. То есть, веб-сервис может включать в себя функционал для оптимизации использования материалов и планирования логистики. Это помогает уменьшить количество отходов и выбросы углекислого газа, а также сократить, бесконечно растущую энтропию, за счет более эффективной организации доставки материалов.
Третье – это повышение эффективности использования ресурсов. Предоставление информации в цифровом виде позволяет точнее рассчитывать необходимые объемы материалов, предотвращая излишек и приводя к минимуму отходы на строительных площадках и в деятельности строительства.
Четвертое – появление новых практик в экологии. Использование веб-сервиса определенно может поспособствовать внедрению экологически устойчивых практик, например, использование экологичных материалов и технологий, и снижение общего воздействия строительства на природу.
Пятое, что было упомянуто – это обучение о осознанность. Также веб-сервис может служить платформой для обучения работников и подрядчиков принципам экологической ответственности.
На сегодня, экологичность – это далеко не тренд, это скорее даже необходимость, и эта необходимость требует к себе внимания в любом проекте и бизнесе, включая, конечно, и строительство.
Следует изложить вопрос утилизации электронных отходов, расходных материалов и цифровых данных. Сбор и переработка включает в себя организацию отдельных пунктов сбора устаревшего или вышедшего из строя прибора, таких как компьютеры, мониторы и другие периферийные устройства. Правильную обработку и переработку компонентов, содержащих вредные вещества позволяет поддерживать сотрудничество с лицензированными агентствами, которые специализируются на переработке электроники. Верным действием является изучение возможности повторного использования того или иного компонент электроники, это позволяет снизить потребность в новых ресурсах, а также сокращает объем отходов [13].
Для переработки расходных материалов правильным действием является разработка программ по сбору и переработке использованных расходных материалов. Этими расходными материалами являются картриджи для принтеров и батарейки. Такие действия дают возможность возврата использованных картриджей производителю или специализированным пунктам переработки. Также следует отдавать предпочтение поставщикам, которые предлагают экологически чистые и легко перерабатываемые расходные материалы [13].
Что касается управления цифровыми данными, важно оптимизировать использование цифровых ресурсов, путем уменьшения объема неиспользуемых данных, следует регулярно производить очистку ненужных файлов и серверов, это приведет к сокращению энергопотребления на центры обработки данных. 
Заключение


В ходе выпускной квалификационной работы поставлена цель – разработать веб-сервис для автоматизации деятельности строительной организации.
Чтобы достичь эту цель выделены задачи, с которыми удалось успешно справиться:
	выделение основных теоретических требований работы;
	определение программных средств для разработки web-сервиса;
	создание макета web-приложения;
	разработка frontend и backend частей приложения;
	работа с экономическими расчетами;
	рассмотрение вопросов безопасности в работе.
Благодаря выполнению поставленных задач, деятельность строительной организации удалось автоматизировать при помощи создания веб-сервиса.
В ходе работы удалось не только поработать с информацией, но и применять на практике полученные навыки, что удачно поспособствовало выполнению разработки.
В итоге, можно сказать, что выпускная квалификационная работа нацелена на практическое применение полученных ранее способностей и знаний в области разработки веб-сервисов, а также в проектировании информационных систем, а следовательно, это считается довольно важным пунктом в автоматизации различных информационных задач.


