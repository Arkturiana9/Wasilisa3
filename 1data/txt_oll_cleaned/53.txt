 Введение
     

     Тема выпускной квалификационной работы - «разработка информационной системы для сети ресторанов быстрого питания».
     В последние десятилетия технологии играют все более значимую роль в индустрии быстрого питания, улучшая процессы и повышая удовлетворенность клиентов. Создание информационной системы для быстрого питания становится необходимым шагом для современных предприятий данной отрасли. 
     Цель ВКР - разработка и реализация информационной системы для фаст-фуд заведения. Эта система будет включать в себя функционал для онлайн-заказов, систему аккаунтов и административную панель для редактирования содержимого и мониторинга заказов в ИС.
     Для достижения цели были поставлены следующие задачи:
     * разработка технического задания на программный продукт;
     * проведение анализа предметной области;
     * проектирование структуры базы данных ИС и архитектуры приложения;
     * определение целей и задач проекта;
     * описание деятельности в рамках проекта, определение этапов и сроков выполнения;
     * определение ресурсных потребностей проекта;
     * определение стоимости проекта;
     * разработка интерфейса и проведение внутреннего тестирования ИС.
     Подобная информационная система поможет сократить время обслуживания клиентов, улучшить качество обслуживания и решить множество операционных задач, с которыми сталкиваются предприятия быстрого питания. 
     В рамках проекта будет проведен анализ существующих информационных систем в сфере быстрого питания, разработаны требования к новой системе, спроектирована ее архитектура и реализован прототип. 
     Ожидается, что внедрение разработанной ИС для быстрого питания приведет к улучшению эффективности работы предприятия, снижению издержек и увеличению конкурентоспособности на рынке.
     Для разработки были использованы языки программирования JavaScript и Python. 
     В первом разделе, рассмотрены главные понятия, цели данной системы и ее аналоги.
     Во втором разделе рассматривается предметная область, объясняется создание ИС и выбранные средства реализации.
     В третьем разделе рассмотрено создание БД, визуального интерфейса и проведено внутреннее тестирование.
     В четвертом разделе рассмотрен экономический аспект разработки.
     В пятом разделе описывается безопасность и охрана труда.


     1 Теоретический раздел
     
     
     1.1 Понятие ИС, классификация ИС
     
     
     ИС, или информационная система, это совокупность взаимосвязанных элементов, включающих в себя людей, процессы, данные и технологии, которые совместно работают для сбора, хранения, обработки, передачи и использования информации с целью достижения определенных задач и целей организации. Информационные системы могут быть разнообразными, включая управленческие системы, системы поддержки принятия решений, системы автоматизации бизнес-процессов, системы управления базами данных, и многие другие.
     Компоненты ИС включают в себя аппаратное обеспечение (компьютеры, серверы, сетевое оборудование), программное обеспечение (приложения, операционные системы, СУБД), данные (информация, которую обрабатывает и хранит система), процессы (последовательность действий, выполняемых системой для достижения определенных целей) и людей (пользователей, администраторов, разработчиков).
     Цели ИС могут варьироваться в зависимости от организации и контекста, но обычно включают автоматизацию бизнес-процессов, улучшение доступа к информации, повышение производительности и эффективности, улучшение принятия решений, обеспечение безопасности информации и др.
     Существует множество различных типов информационных систем, включая управленческие информационные системы (МИС), системы поддержки принятия решений (СППР), системы управления базами данных (СУБД), системы автоматизации бизнес-процессов (САП), системы поддержки клиентов (CRM), системы управления контентом (CMS) и многие другие.
     Жизненный цикл ИС -  последовательность этапов, через которые проходит информационная система, начиная с ее концепции и заканчивая выходом из эксплуатации. Этапы включают анализ, проектирование, разработку, реализацию, внедрение, тестирование, эксплуатацию и поддержку, а также снятие с эксплуатации.
     Информационные системы являются критическими для практически всех сфер деятельности, включая бизнес, образование, здравоохранение и государственное управление. Они обеспечивают поток информации, оптимизируют процессы и способствуют инновациям.
     Классификация информационных систем может осуществляться по различным критериям, таким как функциональное назначение, уровень управления, специализация по отрасли и другие. Вот основные типы классификации информационных систем.
     По функциональному назначению:
     * управленческие информационные системы (МИС) направлены на поддержку оперативного и стратегического управления в организации;
     * системы поддержки принятия решений (СППР) предназначены для анализа данных и помощи в принятии сложных решений;
     * системы обработки транзакций (СОТ) используются для обработки повседневных операций, таких как покупки и продажи;
     * системы поддержки знаний (СПЗ) способствуют созданию, хранению и передаче знаний в организации;
     * системы автоматизации бизнес-процессов (САП) оптимизируют и автоматизируют рабочие процессы.
     По уровню управления:
     * оперативные информационные системы предназначены для управления текущими операциями в организации;
     * тактические информационные системы обеспечивают информацию для принятия решений менеджерами среднего звена;
     * стратегические информационные системы предназначены для поддержки планирования высшего руководства.
     
     По специализации по отрасли:
     * финансовые информационные системы направлены на управление финансовыми операциями и анализ финансовых показателей;
     * медицинские информационные системы используются для управления медицинскими записями, данными пациентов и процессами здравоохранения;
     * образовательные информационные системы предназначены для автоматизации учебных процессов и управления учебными ресурсами.
     По типу данных:
     * системы управления базами данных (СУБД) осуществляют хранение, организацию и управление данными в базах данных;
     * системы обработки текста предназначены для создания, редактирования и форматирования текстовой информации;
     * системы управления документами обеспечивают хранение, поиск и управление документами в цифровом формате.
     
     
     1.2 Автоматизация компаний по доставке еды
     
     
     Цель таких ИС для сети ресторанов быстрого питания заключается в создании и улучшении информационной системы, которая будет помогать управлять всеми аспектами бизнеса ресторана, включая управление запасами, заказами, финансами и кадрами. Цель также может включать в себя повышение эффективности и улучшение обслуживания клиентов.
     Развитие информационных систем для сети ресторанов быстрого питания играет ключевую роль в оптимизации бизнес-процессов, увеличении эффективности и улучшении обслуживания клиентов. С развитием технологий и внедрением современных информационных решений, компании в сфере общественного питания имеют возможность автоматизировать и оптимизировать многие аспекты своей деятельности.
     Одной из основных целей проекта информационной системы для сети ресторанов быстрого питания является улучшение управления процессами, сокращение времени на обработку заявок и заказов, управления запасами и контроля за финансами. Разработка онлайн-системы заказов позволит клиентам быстро и удобно выбирать блюда, делать заказы и производить оплату, что повысит их удовлетворенность и вероятность посещения ресторана снова.
     Внедрение системы управления кадрами поможет оптимизировать процесс найма сотрудников, обеспечить их обучение и мотивацию, что в конечном итоге повысит качество обслуживания и уровень работы персонала. А внедрение системы отчетности и аналитики поможет руководству принимать обоснованные решения на основе данных, а также отслеживать финансовое состояние компании и эффективность бизнес-процессов.
     Таким образом, проект развития информационной системы для сети ресторанов быстрого питания имеет большое значение для повышения конкурентоспособности компании, улучшения обслуживания клиентов и оптимизации бизнес-процессов. Внедрение современных технологий и систем управления помогает сетевым ресторанам стать более эффективными, привлекательными для клиентов и устойчивыми к конкуренции на рынке быстрого питания.
     Задачи проекта ИС для сети ресторанов быстрого питания включают:
     –	разработка удобного и интуитивно понятного интерфейса для пользователей [1];
     –	создание функционала для выбора и оплаты товаров, выбора способа доставки и оплаты;
     –	интеграция с платежными системами для безопасной оплаты заказов;
     –	разработка системы управления заказами и их обработки для оперативной передачи информации на кухню и курьерам;
     –	создание системы управления меню и ценами для оперативного внесения изменений;
     –	организация работы по расширению клиентской базы и продвижению сервиса через маркетинговые кампании и социальные сети;
     –	обеспечение безопасности данных пользователей и конфиденциальности информации о заказах;
     –	проведение тестирования и отладки системы перед запуском, а также обеспечение поддержки и обновлений после внедрения;
     –	оценка эффективности веб-сервиса через мониторинг ключевых показателей производительности и удовлетворенности клиентов.
     
     
     1.3 Обзор сайтов аналогов
     
     
     С марта 2020 года популярность онлайн-заказов еды возросла из-за пандемии в несколько раз. Пользователи все чаще стали использовать онлайн ресурсы для доставки еды на дом и в наше время фирменный сайт стал неотъемлемой частью любого кафе или ресторана.
     Собранная статистика ресторанной отрасли от Square сообщает, что 67% потребителей предпочитают пользоваться фирменным сайтом или приложением ресторана, а не сторонним ресурсом. По этой причине создание собственного сайта – это шаг в правильном направлении.
     В своей работе я провел анализ информационных систем кафе и ресторанов и выделил их сильные стороны.
     Папа Джонс  
     Очень удобный сайт для заказа еды на дом. В навигационном баре выделяется кнопка для оформления заказа. В самом окошке заказа можно выбрать доставку на дом или самовывоз. Также хорошей практикой является добавление интерактивной карты. Форма заказа показана на рисунке 1. 
     Также из преимуществ сайта можно выделить удобное меню заказов и функциональные карточки продукта. Пиццу можно сортировать по содержимому, а на карточках можно выбирать размер и состав пиццы. 
     Отдельно можно выделить корзину, которая «следует» за пользователем по сайту и показывает заказанный продукт. Карточка товара и корзина показаны на рисунке 2.
   

Рисунок 1 – форма заказа


Рисунок 2 – карточка продукта и корзина
     Quay
     Quay – красивый сайт с современным дизайном. У сайта хорошая оптимизация и удобный функционал. В навигационной панели сразу можно зарезервировать столик. Эта функция представлена в виде формы с выбором даты резервации, количества человек и времени. Форма сайта показана на рисунке 3. 
   

Рисунок 3 – форма резервации Quay.
     
     Добавление такой формы в свое web-приложение является отличным решением, так как большинство пользователей предпочтут заказать столик, не посещая само заведение. 
     После проведенных исследований были выделены основные аспекты, которые должны сделать Ваш сайт удобным в использовании:
     * создание профиля. Профиль сохранит адреса доставки пользователей и даст возможность персонализировать их опыт. При этом должна быть возможность делать заказы без регистрации;
     * меню. Все блюда и рестораны должны быть отфильтрованы по типам, иметь подробное описание и сопровождаться красивыми изображениями;
     * призыв к действию. Самый распространенный призыв к действию — «Добавить в корзину»;
     * удобная корзина. Покупатель должен иметь четкое представление о том, что он добавил в корзину, сколько он собирается заплатить и где найти форму заказа для ввода необходимых данных;
* онлайн-платежи должны быть простыми и удобными для клиентов. Веб-сайт для заказа еды должен принимать электронные платежи через банковские карты. Наиболее важным показателем онлайн-платежей является его безопасность, поэтому этому пункту следует уделить особое внимание;
     * контакты и социальные сети. У клиента должна быть возможность связаться с вами; 
     * мобильная оптимизация. Все больше и больше людей используют мобильные устройства для выполнения задач, включая заказ еды [2]; 
     * красивые изображения. Заказывая через сайт большую часть выводов о блюде человек делает через изображение, поэтому фотографии еды должны быть визуально привлекательными. Профессиональная фуд-фотография поможет установить эмоциональную связь с клиентами и завоевать их доверие;
     * уведомления о заказах. Клиенты могут получать уведомления о статусе своих заказов, когда они приняты, в пути, опоздали или доставлены;
     * рейтинги и обзоры. Эта функция приносит пользу клиентам, платформам и ресторанам из-за чувства доверия, которое она дает. 




     2 Аналитический раздел
     
     
     2.1 Анализ предметной области
     
     
     Предметная область ресторанов быстрого питания представляет собой широкий спектр аспектов, которые включают в себя различные операционные процессы, маркетинговые стратегии и взаимодействие с клиентами. Вот некоторые из ключевых элементов предметной области:
     * бизнес-модель. Рестораны быстрого питания часто работают по модели быстрого обслуживания, что подразумевает высокую скорость обслуживания клиентов, ориентацию на большие объемы продаж и оптимизацию процессов;
     * операционные процессы. Важными элементами являются процессы приготовления пищи, управления запасами, обслуживания клиентов и управления персоналом. Оптимизация этих процессов играет ключевую роль в обеспечении высокой эффективности и качества обслуживания;
     * меню и ингредиенты. Рестораны быстрого питания должны разрабатывать разнообразное меню, учитывая предпочтения и потребности клиентов. Кроме того, важно обеспечивать качество и свежесть используемых ингредиентов;
     * маркетинг и реклама. Привлечение клиентов и удержание лояльной аудитории играют важную роль в успехе ресторана быстрого питания. Эффективные маркетинговые стратегии включают в себя использование социальных сетей, акций, рекламы и программ лояльности;
     * технологии и инновации. Развитие цифровых технологий предоставляет новые возможности для оптимизации бизнеса ресторанов быстрого питания. Внедрение мобильных приложений, систем самообслуживания, автоматизированных заказов и доставки помогает улучшить обслуживание и удовлетворить потребности клиентов;
     * управление качеством и безопасностью. Обеспечение высоких стандартов качества и безопасности пищевых продуктов играет решающую роль в сохранении репутации и доверия клиентов. Рестораны быстрого питания должны соблюдать строгие стандарты санитарии и гигиены, а также контролировать качество используемых продуктов;
     * конкурентная среда. Рынок быстрого питания характеризуется высокой конкуренцией, что требует от предприятий постоянного анализа конкурентов, разработки уникальных предложений и стратегий;
     * управление персоналом. Эффективное управление персоналом играет одну из ключевых ролей в обеспечении качественного обслуживания и удовлетворения клиентов. Это включает найм, обучение, мотивацию и оценку производительности сотрудников. Рестораны быстрого питания должны разрабатывать программы обучения и мотивации, а также строить эффективные системы коммуникации и обратной связи;
     * финансовый учет и управление затратами. В условиях высокой конкуренции и увеличения затрат на продукты, труд и аренду помещений, управление финансами становится важным аспектом успешного бизнеса. Рестораны быстрого питания должны вести точный финансовый учет, анализировать свои расходы и доходы, и оптимизировать свои бюджеты;
     * адаптация к законодательству и регулятивным требованиям. Рестораны быстрого питания должны следить за изменениями в законодательстве, связанными с пищевой безопасностью, налогообложением, трудовыми отношениями и другими аспектами деятельности. Соблюдение нормативных требований и стандартов помогает избежать рисков и штрафов;
     * управление рисками и кризисное управление. Рестораны быстрого питания подвержены различным рискам, таким как потери из-за неудачных маркетинговых кампаний, проблемы с поставками продуктов, чрезвычайные ситуации и другие. Управление рисками включает в себя разработку планов контингенции, страхование и управление репутацией бренда;
     * исследование и развитие. В условиях быстро меняющихся предпочтений потребителей и технологических инноваций, исследование и развитие играют важную роль в успехе ресторанов быстрого питания. Это включает в себя постоянное исследование рынка, тестирование новых концепций и продуктов, и инвестиции в инновационные технологии и процессы;
     * клиентский сервис и удовлетворение потребностей. Успешные рестораны быстрого питания стремятся к постоянному улучшению клиентского сервиса и удовлетворению потребностей клиентов. Это включает в себя быстрое и дружелюбное обслуживание, реагирование на обратную связь клиентов, решение проблем и создание уютной атмосферы для посетителей.
     Все эти аспекты предметной области ресторанов быстрого питания взаимосвязаны и влияют на успех и процветание бизнеса в этой сфере. Оптимизация всех элементов этой предметной области позволяет ресторанам быстрого питания оставаться конкурентоспособными и привлекательными для современных потребителей.
     Техническое задание для разработки ИС для ресторана быстрого состоит из:
       – разработки удобного и интуитивно понятного интерфейса для пользователей [1];
       – создание функционала для выбора и оплаты товаров, выбора способа доставки и оплаты;
       – разработка системы управления заказами и их обработки для оперативной передачи информации на кухню и курьерам;
       – создание системы управления меню и ценами для оперативного внесения изменений;
       – проведение тестирования и отладки системы перед запуском, а также обеспечение поддержки и обновлений после внедрения.


     2.2 Проектирование ИС
     
     
      Проектирование базы данных играет ключевую роль в разработке информационных систем и приложений, поскольку оно определяет структуру данных, их организацию и взаимосвязи. 
     Правильно спроектированная база данных позволяет эффективно хранить и организовывать данные, обеспечивая быстрый доступ к нужной информации, а также обеспечивает целостность данных, способствует оптимизации запросов и операций, что повышает производительность системы, упрощает процесс разработки приложений, поскольку разработчики могут легко работать с четко определенными данными, помогает обеспечить безопасность данных, контролируя доступ к ним и предотвращая утечки информации.
     На рисунке 4 изображена первая модель. 
     

Рисунок 4 – таблица product.

	Где id - идентификатор продукта, name – название продукта, description – описание продукта, cost – стоимость продукта, image – изображение продукта, buyed – хранит состояние продукта (true – куплен, false – не куплен), categoryId – внешний ключ к таблице category, buyerId – внешний ключ к таблице buys.
	На рисунке 5 показана вторая модель users.

Рисунок 5 – таблица users.

     Где id - идентификатор пользователя, name – имя пользователя, surname – фамилия пользователя, number – номер телефона пользователя, email – электронная почта пользователя, password – пароль, isAdmin – наличие прав администратора.
     На рисунке 6 изображена третья модель – buys.
     

Рисунок 6 – таблица buys.
     
     В которой id – идентификатор покупок, buyerId – внешний ключ к таблице users, buysId – внешний ключ к таблице products.
     На рисунке 7 изображена четвертая модель – category.
     

Рисунок 7 – таблица category.
     
     В которой id – идентификатор категории, name – название категории, description – описание.
     ER-диаграмма представляет собой физическую модель взаимосвязей между объектами. Она позволяет визуализировать то, как объекты связаны друг с другом, как работают эти связи и какие аспекты этих связей могут быть улучшены.
     ER-диаграммы помогают разбить сложные системы и базы данных на более простые элементы. Они позволяют увидеть, как соединяются и перекрываются взаимосвязанные объекты, чтобы лучше понять функционирование системы.
     На рисунке 8 изображена ER-диаграмма ИС для ресторана быстрого питания со всеми взаимосвязями.
     

Рисунок 8 – ER-диаграмма.
     
     Диаграмма IDEF0 (Integrated DEFinition for Function Modeling) - это методология и инструмент системного анализа, который помогает моделировать и описывать функциональные аспекты системы. Диаграмма IDEF0 включает в себя графическое представление функций системы, их взаимосвязей и входящих в них элементов.
     На рисунке 9 представлена диаграмма IDEF0 для «ИС для сети ресторанов быстрого питания».
     

Рисунок 9 - диаграмма IDEF0.

     На рисунке 10 представлена диаграмма IDEF0 с декомпозицией основных бизнес-процессов для «ИС для сети ресторанов быстрого питания».
     

Рисунок 10 - диаграмма IDEF0 с декомпозицией основных бизнес-процессов
     Диаграмма прецедентов, в контексте разработки программного обеспечения, представляет собой графическое представление функциональных возможностей системы или приложения. Она используется для идентификации основных действий, которые пользователи могут выполнять в системе, а также их взаимосвязей. Диаграмма прецедентов изображена на рисунке 11.
     

Рисунок 11 – диаграмма прецедентов
     

     2.3 Выбор и обоснование программных средств
     
     
	В качестве среды разработки был выбран VS Code.
     Visual Studio Code (VS Code) - это бесплатный и мощный текстовый редактор, разработанный компанией Microsoft. Он предназначен для работы с различными языками программирования и поддерживает широкий спектр функций, делая его популярным среди разработчиков.
     VS Code поддерживает большое количество языков программирования, включая JavaScript, TypeScript, Python, Java, C++, PHP, и многие другие. Это делает его универсальным инструментом для разработки приложений на различных платформах.
     Одна из главных особенностей VS Code — это возможность расширения его функциональности с помощью установки дополнений из магазина расширений. Существует огромное количество расширений, которые добавляют новые функции, интеграции с различными сервисами и инструментами, улучшают работу с конкретными языками программирования и фреймворками.
     VS Code предоставляет широкий набор инструментов для разработки, таких как подсветка синтаксиса, автодополнение кода, быстрая навигация по проекту, интегрированная система контроля версий, отладка кода и другие. Все эти функции способствуют повышению производительности разработчика.
     В отличие от некоторых других интегрированных сред разработки, VS Code известен своей отзывчивостью и быстродействием. Он имеет небольшой размер, что позволяет быстро запускаться и работать на различных типах компьютеров.
     Также Visual Studio Code имеет активное сообщество пользователей и разработчиков, что способствует быстрому решению проблем и распространению полезной информации через форумы, блоги и другие ресурсы.
     Для создания дизайна использована Figma.
     Figma - это веб-приложение для дизайна интерфейсов, которое позволяет дизайнерам, разработчикам и другим участникам команды создавать, прототипировать и совместно работать над дизайном пользовательского интерфейса (UI) и пользовательского опыта (UX).
     Figma полностью основан на веб-технологиях, что позволяет пользователям работать над проектами из любого места, где есть доступ в Интернет. Нет необходимости устанавливать дополнительное программное обеспечение, достаточно просто открыть браузер.
     Одна из ключевых особенностей Figma - это возможность совместной работы над проектом в реальном времени. Пользователи могут видеть изменения, вносимые другими участниками команды, синхронно работать над одним и тем же проектом и обмениваться комментариями.
     Интерфейс Figma дружественен к пользователю и интуитивно понятен. Инструменты находятся на панели слева, а холст, на котором пользователь создает дизайн, находится в центре. Все основные функции легко доступны через понятные меню и инструменты.
     Figma предоставляет широкий спектр инструментов для создания дизайна, включая векторные инструменты, возможности для создания макетов, прототипирования, редактирования текста, создания стилей, экспорта графики и многое другое. Это делает Figma универсальным инструментом для разработки различных видов дизайна интерфейсов.
     Figma поддерживает создание адаптивных дизайнов, что позволяет разработчикам и дизайнерам создавать интерфейсы, которые могут автоматически адаптироваться под различные разрешения экранов и устройств.
     Для создания главной визуальной части интерфейса использованы HTML, CSS, а для создания интерактивности использован JavaScript.
     HTML (HyperText Markup Language) - это стандартный язык разметки, используемый для создания структуры веб-страниц. Он состоит из различных элементов и тегов, которые определяют содержимое страницы, такие как заголовки, параграфы, изображения, ссылки и формы [3].
     CSS (Cascading Style Sheets) - это язык стилей, который определяет внешний вид и оформление веб-страниц. С помощью CSS можно задавать цвета, шрифты, размеры, отступы, рамки и другие стилизующие свойства для элементов HTML [4].
     JavaScript - это интерпретируемый язык программирования, который добавляет интерактивность на веб-страницы. Он позволяет создавать динамические элементы, обрабатывать события пользователя, изменять содержимое страницы, отправлять запросы на сервер и многое другое. JavaScript выполняется в браузере пользователя и может взаимодействовать с HTML и CSS для создания полноценных веб-приложений [5].
	Для стандартизации и придания структуры коду использован React.
     React - это JavaScript библиотека для разработки пользовательских интерфейсов, созданная компанией Facebook. Она позволяет разработчикам строить мощные, эффективные и масштабируемые веб-приложения с помощью компонентного подхода.
     React основан на компонентном подходе, что означает разделение пользовательского интерфейса на независимые компоненты. Каждый компонент представляет собой небольшую часть пользовательского интерфейса, которая может быть многократно использована в различных частях приложения.
     React использует виртуальный DOM (Document Object Model) для оптимизации производительности. Он создает виртуальное представление дерева DOM и сравнивает его с реальным DOM, чтобы минимизировать количество манипуляций с DOM и обеспечить быструю отрисовку изменений.
     Для написания бэкенда использован Python.
     Python - это высокоуровневый интерпретируемый язык программирования, который известен своей простотой, чистотой и читаемостью кода. Он широко используется для разработки веб-приложений, научных вычислений, автоматизации задач, обработки данных и многого другого. Python имеет простой и понятный синтаксис, который делает его легким в изучении и использовании.
     Для создания серверной части использован Flask.
     Flask - это легкий и гибкий веб-фреймворк для Python, который используется для создания веб-приложений. Он разработан с акцентом на простоту и минимализм. Flask включает в себя встроенный веб-сервер, что позволяет запускать веб-приложения без необходимости установки дополнительных компонентов или настройки веб-сервера.
	Для взаимодействия с базой данных использован SQL_alchemy.
     SQLAlchemy - это библиотека для работы с базами данных в языке Python. Она обеспечивает удобный и высокоуровневый способ взаимодействия с различными системами управления базами данных (СУБД), такими как PostgreSQL, MySQL, SQLite, Oracle и другими. Также SQLAlchemy предоставляет ORM, которая позволяет работать с данными в базе данных, представляя их в виде объектов Python. Это упрощает и ускоряет процесс работы с данными и обеспечивает более высокий уровень абстракции.

     3 Разработка информационной системы
     
     
     3.1 Создание базы данных
     
     
     В современном информационном мире базы данных играют ключевую роль в организации, хранении и управлении данными организации. В контексте быстро развивающихся технологий и растущей потребности в эффективном управлении информацией, создание базы данных становится важным этапом в развитии любого бизнеса. 
     
      
	 CREATE TABLE buys создает таблицу с именем «buys». Все операции с таблицей будут выполняться в контексте этой команды. «id INTEGER NOT NULL» - определяет столбец «id» типа INTEGER, который не может принимать значение NULL (то есть он обязательно должен быть заполнен); «buyerId INTEGER» определяет столбец «buyerId» типа INTEGER, который будет хранить идентификатор покупателя; «buysId INTEGER» определяет столбец «buysId» типа INTEGER, который будет хранить идентификатор покупки; «PRIMARY KEY(id)» определяет первичный ключ таблицы, который гарантирует уникальность каждой записи в столбце «id»; «CONSTRAINT products_buys FOREIGN KEY (buysId) REFERENCES products (id) ON DELETE No action ON UPDATE No action» -  определение внешнего ключа «buysId», который ссылается на столбец «id» таблицы «products». Когда запись в таблице «products» удаляется или обновляется, никаких действий не выполняется с записями в таблице «buys» (No action); «CONSTRAINT users_buys FOREIGN KEY (buyerId) REFERENCES users (id) ON DELETE No action ON UPDATE No action» - определяет внешний ключ «buyerId», который ссылается на столбец «id» таблицы «users». При удалении или обновлении записей в таблице «users», никаких действий не выполняется с записями в таблице «buys».
     
	 
     Этот SQL-запрос создает таблицу под названием «category» с тремя столбцами «id», «name» и «description»; «id INTEGER NOT NULL» - столбец «id» определяется как тип INTEGER и не позволяет хранить в нем значение NULL, также он выступает в роли первичного ключа таблицы, обеспечивая уникальность каждой записи в таблице; «name VARCHAR» - столбец «name» определен как тип VARCHAR, что позволяет хранить строковые значения переменной длины. Он предназначен для хранения наименований категорий; «description VARCHAR» - столбец «description» также определен как тип VARCHAR и может хранить текстовые значения переменной длины. Он предназначен для хранения описаний категорий. Ограничение PRIMARY KEY(id) устанавливает столбец «id» в качестве первичного ключа таблицы, обеспечивая уникальность каждой записи. При удалении данных из таблицы «category», любые записи, содержащиеся в таблице, будут удалены. Если столбец «id» используется как внешний ключ в других таблицах, удаление строк из таблицы «category» может привести к недопустимым ссылкам в других таблицах. Обновление значения в столбце «id» может повлиять на целостность ссылок на этот идентификатор в других таблицах.
      
     
     Этот SQL-запрос создает таблицу с названием «products» с несколькими колонками и ограничениями. «id INTEGER NOT NULL» - столбец «id» определен как целочисленный тип и не допускает значений NULL. Он используется в качестве первичного ключа таблицы, обеспечивая уникальность каждой записи; «name VARCHAR» - столбец «name» определен как строковый тип VARCHAR и используется для хранения названия продукта; «description VARCHAR» - столбец «description» также определен как строковый тип VARCHAR и используется для хранения описания продукта; «cost INTEGER» - столбец «cost» определен как целочисленный тип INTEGER и используется для хранения стоимости продукта; «image VARCHAR» - столбец «image» также определен как строковый тип VARCHAR и используется для хранения пути к изображению продукта; «buyed BOOLEAN» - столбец «buyed» определен как булев тип BOOLEAN и используется для указания, был ли продукт куплен (true) или нет (false); «categoryId INTEGER» -столбец «categoryId» определен как целочисленный тип INTEGER и используется для хранения идентификатора категории, к которой относится продукт; «buyerId INTEGER» - столбец «buyerId» также определен как целочисленный тип INTEGER и используется для хранения идентификатора пользователя, который купил продукт. Ограничение FOREIGN KEY связывает столбец «buyerId» с таблицей «users» по столбцу «id» и столбец «categoryId» с таблицей «category» по столбцу «id». Ограничение устанавливает, что при удалении или обновлении записи из таблицы «users» или «category», соответствующие записи в таблице «products» не будут изменены (ON DELETE No action, ON UPDATE No action). При удалении данных из таблицы «users» или «category» не приведет к автоматическому удалению или обновлению связанных записей в таблице «products». Изменения в родительской таблице не приведут к автоматическому обновлению связанных записей в таблице «products».
    

     Этот SQL-запрос создает таблицу с именем «users», которая содержит информацию о пользователях; «id INTEGER NOT NULL» - столбец «id» определен как целочисленный тип и не допускает значений NULL. Он используется в качестве первичного ключа таблицы, гарантируя уникальность каждого пользователя; «name VARCHAR» - столбец «name» определен как строковый тип VARCHAR и используется для хранения имени пользователя; «surname VARCHAR» - столбец «surname» также определен как строковый тип VARCHAR и используется для хранения фамилии пользователя; «number VARCHAR» - столбец «number» определен как строковый тип VARCHAR и используется для хранения номера телефона пользователя; «email VARCHAR» - столбец «email» также определен как строковый тип VARCHAR и используется для хранения адреса электронной почты пользователя. «password VARCHAR» - столбец «password» также определен как строковый тип VARCHAR и используется для хранения пароля пользователя; «isAdmin BOOLEAN» - столбец «isAdmin» определен как булев тип BOOLEAN и используется для указания, является ли пользователь администратором (true) или нет (false). Ограничение PRIMARY KEY(id) устанавливает столбец «id» в качестве первичного ключа таблицы и обеспечивает уникальность каждой записи. Удаление данных из таблицы «users» не повлияет на другие таблицы.
     
     
     Скрипт получает данные пользователя из запроса, выполняет запрос к базе данных для проверки соответствия этих данных с записями в базе данных. Если пользователь найден и является администратором, возвращается его ID, электронный адрес, пароль и флаг администратора. В противном случае возвращается только ID, электронный адрес и пароль пользователя. Если пользователь не найден, возвращается сообщение об ошибке [6].
      
     
     Этот код представляет собой обработчик POST-запроса по адресу '/product'. При получении запроса, код извлекает данные о новом продукте, затем проверяется наличие всех обязательных полей в полученных данных. Если все необходимые поля присутствуют, создается новая запись о продукте в базе данных, используя полученные данные. После этого изменения сохраняются в базе данных. В случае успешного добавления продукта возвращается JSON-ответ с сообщением об успешном добавлении. Если какое-то из обязательных полей отсутствует, возвращается JSON-ответ с сообщением об ошибке [7].
     
     
     При получении запроса, код извлекает данные о продукте из JSON-тела запроса и ищет продукт в базе данных по указанному ID. Если продукт найден, его данные обновляются согласно полученным данным. Затем изменения сохраняются в базе данных [8]. 
     
     Этот код представляет собой обработчик DELETE-запроса. При получении запроса, код выполняет поиск продукта в базе данных по указанному идентификатору, если продукт найден, он удаляется из базы данных, а затем изменения сохраняются. В случае успешного удаления продукта возвращается JSON-ответ с сообщением об успешном удалении. Если продукт с указанным идентификатором не найден, возвращается JSON-ответ с сообщением об ошибке.
     
     
     3.2 Разработка web-интерфейса
     
     
     Создание визуального интерфейса является важным аспектом развития ресторанов быстрого питания. В современном мире, где скорость обслуживания и комфорт клиентов становятся приоритетом, качественный интерфейс играет решающую роль в формировании уникального опыта посетителей. В этом контексте, разработка визуального интерфейса становится неотъемлемой частью стратегии заведения по привлечению и удержанию клиентов.
     
     
     
     
     Этот код описывает компонент, отвечающий за отображение страницы "Мои покупки" в веб-приложении. При загрузке страницы он отправляет запрос на сервер для получения списка продуктов, а затем фильтрует их, чтобы найти покупки, принадлежащие текущему пользователю. В конце он отображает общую стоимость найденных покупок [10]. 
     
     
     3.3 Результаты разработки, тестирование, откладка и внедрение


     Окно регистрации представлено на рисунке 12.
     

Рисунок 12 – окно регистрации.
     
     Окно авторизации показано на рисунке 13.
     

Рисунок 13 – окно авторизации. 
     
     При попытке зайти с незарегистрированного аккаунта пользователю буде выводится уведомление об ошибке. Окно ошибки показано на рисунке 14. 
     

Рисунок 14 – ошибка авторизации. 
     
     Каталог продуктов с возможностью добавить и редактировать товар изображено на рисунке 15.
     

Рисунок 15 – каталог продуктов в admin – панели.
     
     В admin-панели появляется дополнительная вкладка dashboard в которой можно редактировать фильтры товара и сам товар.  Вкладка dashboard изображена на рисунке 16.  
     

Рисунок 16 – вкладка dashboard. 
     Чтобы добавить продукт в меню нужно ввести данные в соответствующие поля формы и нажать кнопку «Добавить продукт». Процесс заполнения формы показан на рисунке 17.
     

Рисунок 17 – заполненная форма.
     
     Добавленный продукт изображен на рисунке 18.
     

Рисунок 18 – новый продукт в списке.
	Также на сайт можно зайти со стороны клиента. Тогда пользователю не будет доступна вкладка dashboard, но можно будет выбрать продукт, который отправится в корзину. На рисунке 19 изображено главное меню со стороны пользователя.


Рисунок 19 – главная страница пользователя.
     
     Рабочая корзина с добавленными товарами показана на рисунке 20.

Рисунок 20 – корзина.

     На рисунке 21 изображен выбор типа заказа с возможностью выбрать столик.
     

Рисунок 21 – тип доставки.

	На рисунке 22 показано отображение заказа в админ–панели.


Рисунок 22 – отображение заказа.


     4 Экономическое обоснование работы
     
     
     4.1	Планирование работы 


     ProjectLibre – кроссплатформенное программное обеспечение для управления проектами. Прогрaммa включaет все нужные функции: диaгрaммa Гaнтa, сетевой трафик, распределение ресурсов, доклады.
     Планирование этапов разработки системы играет ключевую роль в обеспечении успешного завершения проекта. На рисунке 23 представлены этапы, продолжительность и последовательность выполнения.


      Рисунок 23 – плaнировaние этапов работ.

     На рисунке 24 изображен диаграмма Ганта.


      Рисунок 24 – график планирование этапов работ.
     На рисунке 25 представлен сетевой график, который отражает зависимости между различными этапами разработки системы и планируемые сроки их выполнения.


Рисунок 25 – сетевой график.

     На рисунке 26 изображены ресурсы, которые были затрачены на разработку системы.


Рисунок 26 – ресурсы проекта.

     На рисунке 27 изображены объемы и распределение затраченных ресурсов.  


Рисунок 27 – лист ресурсов.

     На рисунке 28 изображен RBS. Здесь показана суммарная стоимость каждого ресурса, что упрощает последующие расчеты и анализ затрат


Рисунок 28 – RBS
     


     5 Безопасность и экологичность работы

     
     5.1 Охрана труда
     
     
     Система обеспечения безопасности и защиты здоровья работников на рабочем месте является важным аспектом управления персоналом в любой организации. Эта система включает в себя не только соблюдение законодательства, но и применение передовых методов и практик, направленных на минимизацию рисков для здоровья и обеспечение безопасной и комфортной среды труда
     В современном мире технологический прогресс и развитие информационных технологий играют ключевую роль в организации труда. Работа с компьютером стала неотъемлемой частью повседневной деятельности многих сотрудников. Однако использование компьютеров может повлечь за собой определенные риски для здоровья, такие как напряжение глаз, боли в спине и шеи, а также другие проблемы, связанные с длительным сидением за монитором.
     Поэтому важно не только предоставить сотрудникам доступ к современным технологиям, но и обеспечить им правильные условия работы с компьютером. Это включает в себя подготовку рабочего места с учетом эргономических принципов, настройку освещения и монитора, а также регулярные перерывы для отдыха и физических упражнений.
     Пожаробезопасность является важным аспектом, как при разработке, так и при эксплуатации информационных систем. Пожар может причинить серьезный ущерб, как материальным ресурсам, так и данным, хранящимся в этих системах.
     Первоочередным шагом в обеспечении пожаробезопасности является проведение анализа рисков, чтобы выявить потенциальные источники возгорания или иные пожароопасные ситуации в системе. При проведении анализа рисков и уязвимостей необходимо учитывать различные факторы, которые могут способствовать возникновению пожара или его распространению в информационной системе. Это могут быть неисправности электропитания, перегрев компонентов оборудования, неправильное хранение или использование легковоспламеняющихся материалов, а также человеческий фактор, например, неправильное обращение с электронным оборудованием. 
     При разработке информационных систем необходимо учесть меры пожаробезопасности на всех этапах проектирования. Это может включать в себя разработку систем детекции пожара, которые могут автоматически обнаруживать и сообщать о возгорании, установку систем автоматического пожаротушения, таких как системы распыления воды или газа, и выбор материалов, обладающих пониженной горючестью и высокой стойкостью к огню.
     Не менее важным является обучение персонала по действиям в случае пожара и разработка плана эвакуации. Это включает в себя обучение сотрудников по использованию пожаротушащего оборудования, а также предоставление им информации о том, как сообщить о пожаре, куда эвакуироваться и как действовать в случае возникновения чрезвычайной ситуации.
     Также системы пожаробезопасности должны регулярно проверяться и обслуживаться для обеспечения их надежной работы. Это включает в себя регулярные проверки систем детекции пожара, испытания автоматических систем пожаротушения и обучение персонала по обслуживанию и эксплуатации этого оборудования.
     При разработке информационной системы помещение, в котором будет размещаться оборудование и работать персонал, играет важную роль в обеспечении эффективной работы всей системы. Помещение должно быть спланировано таким образом, чтобы соответствовать всем техническим требованиям к ИС, а также обеспечивать безопасность данных и оборудования.	Важным аспектом является обеспечение необходимой инфраструктуры в помещении, включающей в себя электроснабжение, вентиляцию и кондиционирование воздуха. Устойчивое электроснабжение особенно важно для непрерывной работы ИС, поэтому необходимо предусмотреть резервное питание или другие меры для предотвращения сбоев в энергоснабжении.
     Для обеспечения безопасности данных и оборудования следует установить системы контроля доступа и видеонаблюдения, а также принять меры по защите от физических и кибератак. Резервное копирование данных, пожаротушение и другие профилактические меры должны быть частью общей стратегии безопасности.
     Более того, комфортное и эргономичное рабочее пространство имеет значение для продуктивности сотрудников, занимающихся поддержкой и обслуживанием ИС. Рабочие места должны быть оборудованы эргономичной мебелью, чтобы снизить риск повреждений опорно-двигательного аппарата и усталости сотрудников.
     Правильное сидение за компьютером важно для предотвращения различных проблем со здоровьем, таких как боли в спине, шее и руках. Рабочее место должно быть организовано таким образом, чтобы монитор находился на уровне глаз, а сидение было удобным и поддерживало правильную осанку. Также рекомендуется делать перерывы и заниматься физическими упражнениями, чтобы снизить напряжение и усталость.
     Когда речь идет о безопасности электрооборудования, необходимо следить за тем, чтобы все электрические провода были защищены от повреждений и не создавали риска поражения электрическим током. Это может включать в себя правильную установку заземления и применение предохранительных устройств.
     Защита от шума также крайне важна для эффективной работы персонала. Шум от оборудования или внешних источников может вызвать стресс и снизить производительность. Поэтому рекомендуется использовать звукоизоляционные материалы или шумопоглощающие конструкции в помещениях с ИС.
     Пыль является потенциальной угрозой для электроники, поскольку она может накапливаться внутри компьютеров и другого оборудования, приводя к перегреву и сбоям. Поэтому необходимо регулярно чистить помещение, оборудование и вентиляционные системы, чтобы минимизировать накопление пыли.
     В целом, обеспечение правильного помещения для информационной системы позволит снизить риски непредвиденных ситуаций, повысить эффективность работы и обеспечить безопасность информации и оборудования. Все данные меры направлены на создание стабильной и надежной среды для функционирования ИС.


     5.2 Экологичность работы
     
     
     Система охраны труда также включает в себя меры по управлению устаревшей компьютерной техникой. Помимо того, что устаревшие компьютеры могут представлять опасность для здоровья из-за их устаревших компонентов и возможных проблем с безопасностью данных, их утилизация может также иметь негативное воздействие на окружающую среду, если не соблюдаются соответствующие экологические стандарты.
     Поэтому руководству организации необходимо разработать стратегию управления устаревшей компьютерной техникой, которая включает в себя не только безопасное удаление конфиденциальной информации, но и правильную утилизацию устаревших устройств с учетом законодательства и экологических норм.
     Существует несколько способов управления устаревшей компьютерной техникой. Один из способов - переустановка оборудования в других отделах или филиалах организации, где оно может быть еще полезным. Другой вариант - продажа устройств или их дарение благотворительным организациям или школам, которые могут воспользоваться этой техникой. Кроме того, возможно разбирательство устройств на запчасти для их дальнейшего использования или утилизация через специализированные компании, имеющие соответствующие лицензии и сертификаты на обработку и утилизацию отходов.
     Необходимо отметить, что утилизация устаревшей компьютерной техники подпадает под различные законодательные нормы и требования. Нарушение этих норм может повлечь за собой административные штрафы и другие санкции. Поэтому важно, чтобы организации соблюдали соответствующие правила и процедуры при утилизации устаревших устройств.
     В целом, система обеспечения безопасности и охраны здоровья работников включает в себя меры по предотвращению рисков, связанных с работой с компьютером, а также стратегии управления устаревшей компьютерной техникой с учетом законодательства и экологических стандартов.?
     
     


Заключение
     
     Результатом ВКР является информационная система для сети ресторанов быстрого питания.
     Цель данного проекта - разработка и реализация информационной системы для фаст-фуд заведения. Эта система будет включать в себя функционал для онлайн-заказов, систему аккаунтов и административную панель для редактирования содержимого и мониторинга заказов в ИС.
     Для достижения цели были поставлены и выполнены следующие задачи:
     * разработка технического задания на программный продукт;
     * проведение анализа предметной области;
     * проектирование структуры базы данных ИС и архитектуры приложения;
     * определение целей и задач проекта;
     * описание деятельности в рамках проекта, определение этапов и сроков выполнения;
     * определение ресурсных потребностей проекта;
     * определение стоимости проекта;
     Развитие информационных технологий и их внедрение в сферу общественного питания являются актуальными и перспективными направлениями современного бизнеса. Создание информационной системы для сети ресторанов быстрого питания позволяет значительно оптимизировать процессы управления и обслуживания, повысить качество обслуживания клиентов, а также улучшить управленческое принятие решений.
     В ходе исследования была разработана и успешно внедрена информационная система. Реализация этой системы позволит сети ресторанов значительно улучшить операционную эффективность, сократить издержки и повысить уровень обслуживания.
     Для дальнейшего успешного развития системы необходимо уделять внимание ее поддержке и развитию, а также адаптации к изменяющимся потребностям и технологическим трендам. Требуется проведение регулярных обновлений и модернизации системы, а также обучение персонала для максимальной эффективности ее использования.
     Создание информационной системы для сети ресторанов быстрого питания представляет собой важный шаг в совершенствовании бизнес-процессов и повышении конкурентоспособности компании. 


    