     Бизнес нуждается в системах для мониторинга ИТ-инфраструктуры, чтобы обеспечить запуск и последующую работу необходимых ему сетевых систем и сервисов. Корпоративные компьютерные сети представляют собой неотъемлемую часть современного мира. Используя возможности таких сетей можно своевременно, безопасно и оперативно выполнять задачи по передаче и получению информации.
     
Целью выпускной квалификационной работыявляется создание информационной системы мониторинга работоспособности компьютерной сети. 
     Для достижения цели были поставлены следующие задачи:
     * рассмотреть теоретические аспекты создания и работы компьютерных сетей;
     * провести анализ требований к разрабатываемой системе;
     * провести выбор средств реализации;
     * разработать систему мониторинга работоспособности компьютерной сети;
     * провести экономическую часть;
     * рассмотреть вопросы охраны труда и окружающей среды.
    
 Мониторинг является одной из самых важных задач, необходимых для организации полноценного управления вычислительной сетью. Процесс выявления самих неисправностей и формирования комплекса мероприятий может занять значительное время и существенно повлиять на функционирование системы автоматизации предприятия в целом.

     Компьютерная сеть — это объединение компьютеров, линий связи между ними и программ, обеспечивающих обмен информацией. При физическом соединении двух или более компьютеров образуется компьютерная сеть. Для создания сетей необходимо специальное оборудование и программные средства. Простейшее соединение двух компьютеров для обмена данными называется прямым соединением. Все компьютерные сети имеют одно назначение — обеспечение совместного доступа к общим ресурсам: аппаратным, программным, информационным.
     
В зависимости от удаленности компьютеров, объединенных в сеть, в качестве линий связи могут использоваться кабели, телефонные линии, радиосвязь, в том числе через спутники, а также оптоволоконные линии, в которых информация передается с помощью света. Для подсоединения линий связи к компьютерам применяются специальные электронные устройства — сетевые платы, сетевые адаптеры, модемы и т. д. Назначение этих устройств состоит в преобразовании информации, поступающей от компьютера, в электрический, радио- или световой сигнал для передачи по линии связи и обратно. Все линии связи различаются по скорости передачи информации; самые медленные — это телефонные линии, но они и самые дешевые. Так как при наборе телефонного номера для установки связи двух абонентов на автоматической телефонной станции происходит переключение или, другими словами, коммутация, то телефонные линии часто называют коммутируемыми. С помощью коммутируемых линий связь устанавливается только на время, необходимое для передачи информации. 

В отличие от коммутируемых линий так называемые выделенные линии связывают компьютеры постоянно, круглый год, 24 ч в сутки. Выделенные линии могут быть созданы с помощью кабелей или радиосвязи и позволяют обмениваться информацией с огромными скоростями.
     
Компьютерные сети бывают локальными и распределенными[1]. Локальной называется компьютерная сеть, объединяющая компьютеры, расположенные в одном или в соседних зданиях. Если же соединенные компьютеры находятся в разных частях города, в разных городах и странах, то такие сети называются распределенными.
     
В Интернете используются два основных понятия: «адрес» и «протокол». Свой уникальный адрес имеет каждый компьютер, подключенный к Интернету. В любой момент времени все компьютеры, подключенные к Интернету, имеют разные адреса.
     
В общем случае протокол — это правила взаимодействия. Сетевой протокол предписывает правила работы компьютерам, которые подключены к сети. Стандартные протоколы заставляют разные компьютеры «говорить на одном языке», что дает возможность подключения к Интернету разнотипных компьютеров, работающих под управлением различных операционных систем.
     
В Интернете имеется несколько уровней протоколов, которые взаимодействуют друг с другом. На нижнем уровне используются два основных протокола: IP — Internet Protocol (интернет-протокол) и TCP — Transmission Control Protocol (протокол управления передачей). Протокол TCP определяет порядок разделения данных на дискретные пакеты и контролирует передачу (доставку) и целостность передаваемых данных. Протокол IP описывает формат пакета данных, передаваемых в сети, а также порядок присвоения и поддержки адресов абонентов сети. Так как эти два протокола тесно взаимосвязаны, то часто их объединяют и считают, что базовым протоколом является интеграция протоколов TCP/IP.
     
Рассмотрим основные протоколы Интернета. Сервис FTP — File Transfer Protocol (протокол передачи файлов) позволяет получать и передавать файлы. Протокол HTTP — HyperText
     Transfer Protocol (протокол передачи гипертекста) осуществляет работу с гипертекстовыми документами. Протокол SMTP — Simple Mail Transfer Protocol (протокол передачи почты) применяется службой E-mail для пересылки исходящих почтовых отправлений. Протокол POP3 — Post Office Protocol version 3 (протокол почтового отделения) применяется службой E-mail для доставки входящих почтовых отправлений. Протокол NNTP — Network News Transfer Protocol (сетевой протокол передачи новостей) используется службой телеконференций для пересылки сообщений между подписчиками [2].
     
Основными задачами, решаемыми при создании компьютерных сетей, являются обеспечение совместимости оборудования по электрическим и механическим характеристикам и обеспечение совместимости информационного обеспечения (программ и данных) по системе кодирования и формату данных. Решение этих задач относится к области стандартизации и основано на так называемой модели OS1 — Model of Open System Interconnection (модели взаимодействия открытых систем). Она создана на базе технических предложений Международного института стандартов ISO — International Standards Organization.
     
Согласно модели ISO/OSI архитектуру компьютерных сетей следует рассматривать на разных уровнях. Различают семь уровней архитектуры Интернета:
     1. Прикладной. Пользователь создает сообщение, документ, письмо;
     2. Представления. Операционная система фиксирует, где находятся данные: в оперативной памяти, в файле на жестком диске, и обеспечивает взаимодействие со следующим уровнем;
     3. Сеансовый. Протоколы этого уровня проверяют права пользователя;
     4. Транспортный. Документ преобразуется в форму, необходимую для передачи данных в сети;
     5. Сетевой. Определяет маршрут движения данных в сети;
     6. Соединения. Для модуляции сигналов, циркулирующих на физическом уровне, в соответствии с данными, полученными с сетевого уровня;
     7. Физический. Происходит реальная передача данных в виде битов — самых элементарных единиц представления данных[3].
     
Для обеспечения необходимой совместимости на каждом из семи уровней архитектуры компьютерной сети действуют специальные стандарты — протоколы:
* аппаратные — для взаимодействия аппаратных компонентов сети;
* программные — для взаимодействия программ и данных;
* аппаратно-программные — для взаимодействия программного и аппаратного обеспечения.
     
Физически функции поддержки протоколов исполняют аппаратные устройства (интерфейсы) и программные средства (программы поддержки протоколов). В соответствии с используемыми протоколами компьютерные сети принято разделять на локальные LAN (Local Area Network) и глобальные сети WAN (Wide Area Network).
     
Глобальные сети WAN, которые называют также территориальными компьютерными сетями, служат для того, чтобы предоставлять свои услуги большому количеству конечных абонентов. Крупные компьютеры класса мэйнфреймов обычно обеспечивают доступ к корпоративным данным, тогда как персональные компьютеры используются для доступа к корпоративным данным и публичным данным Интернета.
     
Глобальные сети чаще всего создаются крупными телекоммуникационными компаниями для оказания платных услуг абонентам. Такие сети называют общественными (публичными). Компанию, осуществляющую поддержку нормального функционирования сети, называют оператором сети, компанию, оказывающую платные услуги абонентам сети, — провайдером, поставщиком услуг (service provider).

      Компьютерная сеть — это система программных и аппаратныхкомпонентов, тесно взаимосвязанных друг с другом. Разумеется, компьютернаясеть может состоять и из двух компьютеров, но, как правило, их число в сетисущественно больше. При этом компьютерная сеть не является простымобъединением компьютеров, а представляет собой достаточно сложную систему.
     
     Все устройства, работающие в сети, протоколы, сама сеть образуют сложнейшую систему, которая требует постоянного мониторинга и контроля в силу важности выполняемых функций. Как хорошо бы не была настроена компьютерная сеть, и насколько бы надежное программное обеспечение не было установлено на серверном оборудовании и компьютерах - полагаться только на системного администратора в данном вопросе крайне нерационально. Нужны средства контроля состояния сети, которые работают в автоматическом режиме и действуют непрерывно, сообщая своевременно о потенциальных аварийных ситуациях. 
     
Термином мониторинг сети называют работу системы, которая выполняет постоянное наблюдение за компьютерной сетью в поисках медленных или неисправных систем, и которая при обнаружении сбоев сообщает о них сетевому администратору с помощью почты, телефона или других средств оповещения. Эти задачи являются подмножеством задач управления сетью [4].
     Система мониторинга сети выполняет наблюдение за сетью в поисках проблем, вызванных перегруженными и/или отказавшими серверами, другими устройствами или сетевыми соединениями. Неудавшиеся запросы (например, в том случае, когда соединение не может быть установлено или, когда сообщение не было доставлено) обычно вызывают реакцию со стороны системы мониторинга. В качестве реакции может быть: - отправлен сигнал тревоги системному администратору; - автоматически активирована система защиты от сбоев, которая временно выведет проблемный сервер из эксплуатации, до тех пор, пока проблема не будет решена, и так далее [5].
      
Постоянный мониторинг системы дает возможность обнаружения "узких мест" в сети, локализации ошибок и своевременного исправления ситуации. Мониторинг состояния компьютерной сети, как правило, осуществляется одной или несколькими рабочими станциями или серверами. Существует два вида мониторинга: - активный мониторинг, предполагающий опрос устройств с определённой периодичностью для определения доступности самих устройств и сервисов, которые они предоставляют, а также проверки состояния устройств в настоящий момент, например, процент загрузки процессора, дисков, температуры и других; - пассивный мониторинг, предполагающий ожидание от устройств сообщений о событиях, происходящих в системе. 
     
Чаще всего такие сообщения присылаются устройствами посредством простого протокола сетевого 8 управления (SNMP). Это протокол прикладного уровня, который является составной частью протокола TCP/IP и позволяет администраторам руководить производительностью сети, находить и устранять сетевые проблемы. Обычно на практике в системах мониторинга данные виды комбинируются.

     Моделирование вычислительной системы позволяет произвести более точный, по сравнению с экспертными оценками, расчет необходимой производительности отдельных компонентов и всей системы в целом, в том числе системного и прикладного программного обеспечения.. При этом появляется возможность использовать не максимальные значения характеристик используемого вычислительного оборудования, а характеристики, учитывающие, специфику использования этого оборудования в конкретном учреждении. 
     
Основу моделирования составляют модели оборудования и процессов (технологий, программного обеспечения), используемых при работе интересующего объекта. При моделировании на компьютере воспроизводятся реальные процессы в обследуемом объекте, исследуются особые случаи, воспроизводятся реальные и гипотетические критические ситуации. Основным достоинством моделирования является возможность проведения разнообразных экспериментов с исследуемым объектом, не прибегая к физической реализации, что позволяет предсказать и предотвратить большое число неожиданных ситуаций в процессе эксплуатации, которые могли бы привести к неоправданным затратам, а может, и к порче оборудования. 
     
В случае моделирования вычислительных систем таким объектом является информационная система, определяющая способы получения, хранения, обработки и использования различной корпоративной и внешней информации. 
     
В процессе моделирования возможно следующее: 
     * определение минимально необходимого, но обеспечивающего потребности передачи, обработки и хранения информации оборудования (даже не имеющего реальных аналогов) в настоящее время; 
     * оценка необходимого запаса производительности оборудования, обеспечивающего возможное увеличение производственных потребностей в ближайшее время (один-два года); 
     * выбор нескольких вариантов оборудования с учетом текущих потребностей, перспективы развития на основании критерия стоимости оборудования; 
     * проведение проверки работы вычислительной системы, составленной из рекомендованного оборудования.
     
Использование моделирования для оптимизации производительности сети
     
Анализаторы протоколов незаменимы для исследования реальных сетей, но они не позволяют получать количественные оценки характеристик для еще не существующих сетей, находящихся в стадии проектирования. В этих случаях проектировщики могут использовать средства моделирования, с помощью которых разрабатываются модели, воссоздающие информационные процессы, протекающие в сетях. 
     
Моделирование представляет собой мощный метод научного познания, при использовании которого исследуемый объект заменяется более простым объектом, называемым моделью. Основными разновидностями процесса моделирования можно считать два его вида - математическое и физическое моделирование. При физическом (натурном) моделировании исследуемая система заменяется соответствующей ей другой материальной системой, которая воспроизводит свойства изучаемой системы с сохранением их физической природы. Примером этого вида моделирования может служить пилотная сеть, с помощью которой изучается принципиальная возможность построения сети на основе тех или иных компьютеров, коммуникационных устройств, операционных систем и приложений [6]. 
     
Возможности физического моделирования довольно ограничены. Оно позволяет решать отдельные задачи при задании небольшого количества сочетаний исследуемых параметров системы. Действительно, при натурном моделировании вычислительной сети практически невозможно проверить ее работу для вариантов с использованием различных типов коммуникационных устройств - маршрутизаторов, коммутаторов и т.п. Проверка на практике около десятка разных типов маршрутизаторов связана не только с большими усилиями и временными затратами, но и с немалыми материальными затратами. 
     
Но даже и в тех случаях, когда при оптимизации сети изменяются не типы устройств и операционных систем, а только их параметры, проведение экспериментов в реальном масштабе времени для огромного количества всевозможных сочетаний этих параметров практически невозможно за обозримое время. Даже простое изменение максимального размера пакета в каком-либо протоколе требует переконфигурирования операционной системы в сотнях компьютеров сети, что требует от администратора сети проведения очень большой работы. 
    
 Поэтому, при оптимизации сетей во многих случаях предпочтительным оказывается использование математического моделирования. Математическая модель представляет собой совокупность соотношений (формул, уравнений, неравенств, логических условий), определяющих процесс изменения состояния системы в зависимости от ее параметров, входных сигналов, начальных условий и времени. 
     
Особым классом математических моделей являются имитационные модели. Такие модели представляют собой компьютерную программу, которая шаг за шагом воспроизводит события, происходящие в реальной системе. Применительно к вычислительным сетям их имитационные модели воспроизводят процессы генерации сообщений приложениями, разбиение сообщений на пакеты и кадры определенных протоколов, задержки, связанные с обработкой сообщений, пакетов и кадров внутри операционной системы, процесс получения доступа компьютером к разделяемой сетевой среде, процесс обработки поступающих пакетов маршрутизатором и т.д. При имитационном моделировании сети не требуется приобретать дорогостоящее оборудование - его работы имитируется программами, достаточно точно воспроизводящими все основные особенности и параметры такого оборудования. 
     
Преимуществом имитационных моделей является возможность подмены процесса смены событий в исследуемой системе в реальном масштабе времени на ускоренный процесс смены событий в темпе работы программы. В результате за несколько минут можно воспроизвести работу сети в течение нескольких дней, что дает возможность оценить работу сети в широком диапазоне варьируемых параметров. 
     
Результатом работы имитационной модели являются собранные в ходе наблюдения за протекающими событиями статистические данные о наиболее важных характеристиках сети: временах реакции, коэффициентах использования каналов и узлов, вероятности потерь пакетов и т.п. 
     
Существуют специальные языки имитационного моделирования, которые облегчают процесс создания программной модели по сравнению с использованием универсальных языков программирования. Примерами языков имитационного моделирования могут служить такие языки, как SIMULA, GPSS, SIMDIS.Существуют также системы имитационного моделирования, которые ориентируются на узкий класс изучаемых систем и позволяют строить модели без программирования.
     
Используемые в настоящее время в локальных сетях протоколы канального уровня используют методы доступа к среде, основанные на ее совместном использовании несколькими узлами за счет разделения во времени.

      Рассматриваемая сеть передачи данных создается между отдельными городами. Каждый город генерирует некоторый внешний трафик, значение которого определяется условно числом жителей. Например, если число жителей в городе N 100 тысяч человек, то сетевой трафик принимается равным 100 кбит/сек. 
     
При этом размер этого трафика (число передаваемых пакетов в секунду) и размер отдельных пакетов распределены по экспоненциальному закону с заданными средними.
     Между городами существуют различные каналы передачи данных, отличающиеся пропускной способностью. Значение пропускной способности определяется из величины расстояния между городами. Например, если расстояние между городами 100 км, то пропускная способность канала связи выбирается равной 100 пакетов/сек. 
     
Внешний трафик каждого города равномерно распределяется между смежными с ним городами и выходом сети (поглощение пакетов). 
     Программа должна позволять сформировать сеть, содержащую не менее 10 населенных пунктов с расстоянием от 50 до 500 км.
     Составив таблицы трафиков сети, должна быть реализована возможность определить время задержки по множеству маршрутов и выбрать оптимальный вариант маршрута. 
     
     Для формализации описанной выше сети удобно выбрать математический аппарат теории графов, а именно – ориентированный мультиграф со взвешенными вершинами и ребрами.
     Каждый город будет представлен вершиной с заданной характеристикой – числом генерируемых пакетов. Каждый канал передачи данных будет представлен ребром с заданной пропускной способностью. Именно такой граф необходимо задать в качестве исходных данных моделирования.
     
Для расчетов временных характеристик удобно рассматривать каждый канал передачи данных (каждое ребро графа) в виде некой системы массового обслуживания. Данная система будет иметь один канал обслуживания со средним временем обслуживания, равным пропускной способности канала. Число заявок на обслуживание, поступающее в канал, будет определяться собственным трафиком города, находящегося у начала ребра, а также числом пакетов, поступающих от других городов (вершин графа).
     
Таким образом, можно построить еще одну сеть – сеть систем массового обслуживания. Расчет характеристик данной сети можно произвести с использованием математического аппарата теории массового обслуживания.
     Задание графа исходных данных в виде матрицы весов – очень трудоемкий процесс, требующий кропотливой и точной работы.
     
Для облегчения работы по заданию графа целесообразно создать программную среду, позволяющую задать граф исходных данных при помощи графического интерфейса. Созданный граф можно сохранить для последующего использования.
     
В результате расчета характеристик сети передачи данных программой должны быть получены следующие данные: метки всех вершин графа, матрица весов ребер графа, интенсивности прихода заявок в каждом узле. Вся информация может быть предоставлена в отдельном окне программы в текстовом виде.
 
    Delphi — среда программирования на основе языка Object Pascal. Он считается наследником Turbo Pascal, а тот — «чистого» Pascal Никлауса Вирта, созданного в 1970 году.
    
Изначальный Pascal обладал наиболее быстрым компилятором, но его IDE работала только на базе DOS. Когда появилась Windows, возникла потребность создания среды программирования для этой платформы. Раньше чтобы создать элементарную программу, разработчикам приходилось писать несколько страниц кода. В компании Borland понимали, что нужно как-то облегчить их жизнь, поэтому решили доработать Pascal, который к тому моменту уже почти не использовался.
    
Но изменения оказались настолько серьёзными, что в результате появился новый язык программирования — Delphi. В России он начал применяться в конце 1993 году и сразу обрёл большую популярность.
    
Delphi — язык программирования, который используется для разработки прикладного программного обеспечения [7]. Программисты любят его, потому что это объектно-ориентированное программирование, которое даёт высокую скорость разработки, сокращает количество возможных ошибок и обеспечивает эффективную работу полученного приложения.
    
Когда стоит задача разработать приложение под Windows, Delphi — вне конкуренции. В нём есть много готовых компонентов, эффективный код и быстрая компиляция. А синтаксис менее запутан, чем, например, у C++.
    
    В сравнении с другими языками программирования у него есть несколько важных преимуществ.
    Высокая скорость компиляции. Чтобы скомпилировать небольшое приложение в MSVC++ вам потребуется около 10 минут, в Delphi — пара секунд. Такая скорость достигается за счёт того, что Delphi раз и навсегда компилирует все модули, из которых строятся приложения, а потом просто подключает их к вашей программе. То есть, не нужно постоянно ждать пока перекомпилируются используемые библиотеки [8].
    
Система компонентов. Компоненты — шаблоны, из которых можно строить программы. С их помощью вы можете создать довольно сложное программное обеспечение, не написав ни строчки кода. Предположим, вы хотите сделать текстовый редактор вроде Word. Это несложно в реализации, потому что все его «детали» по отдельности уже есть в палитре компонентов.Также вы можете интегрировать в среду Delphi подпрограммы-эксперты. Например, Expert Interface позволяет встраивать пункты меню и диалоговые окна.
    
Оптимизирующий 32-битовый компилятор. У Delphi есть быстрый компилятор, который не только сообщает об ошибках, но и предупреждает о них, отправляет подсказки. Это помогает создать более ясный код. Если ошибок несколько, Delphi укажет на все сразу, что ускорит процесс исправления.
   
 Визуальный конструктор программ. В Delphi вам не нужно отвлекаться на выяснение всех деталей Win API и работать над логикой программы, если захотите программировать под MS Windows.
    
Меньше возможных ошибок. В C-подобных языках присваивание — лишь выражение возвращающее значение переменной слева, и новички часто ошибаются. В Delphi такая ошибка исключена, так как присваивание — операция, не возвращающая значения.
   
 Возможность создания программ для любых операционных систем и платформ. Этим Delphi выгодно отличается от более популярного C#, который используется только для программирования на платформах .NET и Mono.
    
Отдельно стоит упомянуть ещё одно важное применение delphi перед остальными языками — он отлично подходит для обучения программированию. Его часто рекомендуют в качестве первого языка для тех, кто только собирается стать программистом.
    
Наиболее широкое применение delphi получил в разработке прикладного программного обеспечения.
    
Веб-сервисы и мобильные приложения. Delphi — кроссплатформенная среда разработки. На нём до сих пор создают веб-сервисы и мобильные приложения, программы для разных операционных систем: iOS, Android, Linux, Windows. Тот код, который написал программист, компилируется в промежуточный, а затем переводится в соответствующий компилятор в зависимости от выбранной платформы [9].
    Г
осучреждения. Сегодня он активно используется в государственных учреждениях и на предприятиях. Руководство подобных организаций не всегда признаёт переход на новые языки и технологии. Если на металлофабрике используется какая-то утилита на Delphi, нет смысла переписывать её на Python, потому что её влияние и вклад в общий процесс производства несущественны.
    
Enterprise-сегмент. Delphi используют банки и крупные предприятия. Это объясняется исторически сложившейся ситуацией: когда такие организации развивались, на пике популярности был язык Delphi. Они выбрали его тогда и продолжают использовать в настоящее время.
     
     Приложение в среде DELPHI состоит из файлов с исходным текстом (расширение pas), файлов форм (расширение dfm) и файла проекта (расширение .dpr), который связывает вместе все файлы проекта.
     
В файле проекта находится информация о модулях, составляющих данный проект. Файл проекта автоматически создается и редактируется средой DELPHI и не предназначен для редактирования.
     
Файл исходного текста– программный модуль (Unit) предназначен для размещения текстов программ. В этом файле программист размещает текст программы, написанный на языке PASCAL.
     
     В разделе объявлений описываются типы, переменные, заголовки процедур и функций, которые могут быть использованы другими модулями, через операторы подключения библиотек (Uses). В разделе реализации располагаются тела процедур и функций, описанных в разделе объявлений, а также типы переменных, процедуры и функции, которые будут функционировать только в пределах данного модуля. Раздел инициализации используется редко и его можно пропустить.
     
При компиляции программы DELPHI создает файл с расширением dcu, содержащий в себе результат перевода в машинные коды содержимого файлов с расширениями pas и dfm. Компоновщик преобразует файлы с расширением dcu в единый загружаемый файл с расширением exe. В файлах, имеющих расширения ~df, ~dp, ~pa, хранятся резервные копии файлов с образом формы, проекта и исходного текста соответственно.
     
Модуль кода (unit) делится на две части - интерфейс (interface) и реализацию (implementation).
     Раздел interface:
     * uses: подключаемые модули, в которых содержатся используемые процедуры, функции, классы и т.п. Их список формируется автоматически в зависимости от добавленных в форму компонентов.
     * type: описания типов. Автоматически в этом разделе описан класс вашей формы.
     * var: описание глобальных переменных. Автоматически тут описана переменная типа описанного класса формы. В этой переменной во время работы программы хранится указатель на экземпляр формы.
     * const: описание констант. Этот раздел автоматически не создается, однако может быть легко добавлен.
     
Раздел implementation:
     Здесь также можно добавить uses.
     
С помощью {$R} подключаются файлы ресурсов. Автоматически подключен файл dfm, имеющий то же имя, что и файл модуля и потому подключаемый как *.dfm. В этом файле хранится информация о форме - расположение и настройки компонентов, помещенных в форму, и т.п.
     
Раздел содержит описание реализаций процедур и функций. Автоматически тут создаются обработчики событий. Здесь описывается реализация необходимых в программе процедур, функций и методов классов.
     
Все то, что касается объявления доступных из других модулей переменных, констант, процедур, типов, классов и т. п., должно быть описано в разделе interface. В этой части программы, которая создается автоматически, в разделе uses перечисляются используемые модули, в разделе type описывается класс формы - потомок класса TForm, а в разделе var описывается глобальная переменная, в которой будет храниться указатель на объект-экземпляр формы. Соответственно, если надо подключить какой-то свой модуль, то необходимо добавить его в раздел uses. При описани нового типа его добавляют в раздел type до или после класса формы. Если нужно описать глобальную переменную, то ее добавляют в раздел var, а если нужна константа - создается дополнительно раздел const. В свою очередь, в разделе implementation сначала указывается ссылка на файлы ресурсов, а затем описываются реализации процедур и функций - как создаваемых автоматически обработчиков событий, так и добавляемых по необходимости. Вначале эта часть пуста, но она будет заполняться во время написания программы.
     
При добавлении компонента в форму автоматически модифицируется код модуля - в описании класса формы появляется переменная, хранящая ссылку на добавленный компонент.
     
При создании обработчика события (при нажатии на компонент, помещенный в форму, создается обработчик основного события, а остальные создаются с помощью Инспектора Объектов) в коде происходят следующие изменения:
     * в разделе implementation создается пустой обработчик, который вы потом заполняете;
     * в классе вашей формы создается описание этого метода (обработчики событий являются методами);
     * если не создавать обработчик через страницу Events Инспектора Объектов (или двойным щелчком по компоненту), а просто написать в коде процедуру-обработчик, то он не будет должным образом связан с компонентом, и событие не сработает. Если изменить имя компонента, то изменятся имена и обработчиков событий, которые с ним связаны.
     
     Если необходимо изменить название обработчика, то надо воспользоваться Инспектором Объектов. Переименовывая здесь имя процедуры обработчика, корректно автоматически изменяются также и ссылки на эту процедуру.
     
Если необходимо удалить какой-то обработчик, то удалите весь код внутри процедуры. При следующем запуске программы все пустые процедуры автоматически корректно удаляются. Компилятор автоматически удаляет пустые процедуры при запуске. При удалении всей процедуры описание и ссылки на нее останутся, а удаление их всех требует времени и аккуратности.
     
При удалении компонента не удаляются процедуры-обработчики его событий. Это связано с тем, что один и тот же обработчик может использоваться для разных компонентов.
     В случае, если нужно удалить эти оставшиеся обработчики, удалите код внутри них и запустите программу.
     
Проблема обеспечения гарантированного выполнения некоторых действий решается наличием специального события OnCreate. Это событие формы. Оно возникает тогда, когда форма создается, а поскольку главная форма создается в самом начале работы приложения, то и код, описанный в обработчике данного события, выполнится один раз и в самом начале. В обработчике события OnCreate можно описать процедуры и функции инициализации, присваивать нужные значения глобальным переменным и т.п.
     
Раздел implementation предназначен не только для обработчиков событий. В этот раздел добавлять в него свои собственные функции и процедуры. Необходимо помнить, что они должны идти раньше процедур и обработчиков, из которых вызываются, или объявить их в разделе interface. В последнем случае эти функции и процедуры будут доступны для вызова из других модулей.
     
Существует также важная тонкость использования собственных функций: все обработчики событий имеют в своем названии имя формы: proc?dure TForm1.FormCreate(Sender: TObject);
     
Это указывает на то, что работают с классом формы TForml и описывают методы для нее. Из обработчика просто обращаются к компонентам формы (класс формы "знает" о наличии компонентов на ней и имеет к ним непосредственный доступ), например: MyGrid.RowCount := Num;
     Когда описывается собственная процедура, то она "ничего не знает" о компонентах формы, и поэтому нужно обращаться к компонентам через форму, а, не минуя ее.
   
     Основные команды приложения лучше всего сделать доступными через пункты меню главного окна программы. Назначение пунктов меню можно пояснить в строке состояния главного окна. 
     
Также необходимо обеспечить выполнение следующих команд:
     Команда «Построение – Добавить город»
     
Данная команда приводит приложение в режим добавления городов сети. Город устанавливается левой кнопкой мыши в активном окне. После добавления города режим остается активным, поэтому можно добавлять узлы дальше, не выбирая явным образом команду меню.
     
Команда «Построение – Удалить город»
     Левой кнопкой мыши выбрать нужный город – он будет удален без запроса подтверждения. Если к данному городу были прикреплены дуги, то они также удаляются.
     Команда «Построение – Выделить узел»
     Данная команда позволяет выделять города. 
     
Команда «Построение – Построить канал передачи данных»
     Команда включает режим добавления связей между городами сети. Для добавления |канала передачи данных, соединяющей два города, необходимо выбрать сначала начальный город канала передачи данных, затем конечный. Канала передачи данных будет добавлен и прорисовано на графе.
     Команда «Построение – Удалить канал передачи данных»
     
Команда включает режим удаления канала передачи данных между двумя городами. Сначала выбирается начальный город, затем конечный. Канал передачи данных будет удалено без запроса подтверждения.
     Команда «Построение – Выделить канал передачи данных »
     
Команда позволяет задавать параметры для каждого канала передачи данных. Левой кнопкой мыши сначала указывается начальный город, затем конечный – выводится окно параметров канала передачи данных. Должно быть введено значение от 1 до 10000.
     Команда «Расчеты – Подсчет параметров»
     
Данная команда рассчитывает матрицу вероятностей переходов графа, проверяет каждый канал на стационарность (в случае нестационарности, соответствующая дуга может быть выделена цветом и выдавать предупреждение о неверности заданного параметра), а также рассчитывает веса существующих каналов. Результат на экране можно не отображать.
     Команда «Расчеты – Сделать первой»
     При этом режиме можно выбрать город, которая в дальнейшем будет использоваться как начальная во всех расчетах.
     
Команда «Расчеты – Сделать последней»
     Левой кнопкой мыши указывается необходимый город, который в дальнейших расчетах будет использоваться как конечный.
     Команда «Расчеты – Кратчайший путь»
     
По данной команде программа вычисляет оптимальный путь между 0-м и последним городом при всех рассчитанных параметрах графа. Оптимальный путь целесообразно выделить на графе цветом.
     Команда «Расчеты – Отчет»
     Выводит на экран модальное окно, содержащее в себе отчет по рассчитанным параметрам модели в текстовом виде (время задержки в каждо канале, интенсивность прихода заявок в каждый город, а также метки городов).
     
Команда «Файл – Новый»
     Создание нового пустого документа модели сети передачи данных.
     Команда «Файл – Открыть»
     Команда выводит форму для выбора файла, который необходимо открыть. Содержимое файла будет отражено в главном окне приложения в виде графа.
     Команда «Файл – Сохранить» и «Файл – Сохранить как…» 
     Сохраняет файл с заданным в диалоге именем.
     Команда «Выход»
     
     Программа содержит вкладки:
     * файл - позволяет создать новый файл, открыть уже имеющийся, сохранить файл и сохранить его в нужном формате;
     * построение-позволяет добавить, выделить и удалить город и канал передачи данных;
     * расчеты- позволяет произвести расчет параметров, подсчитать кратчайший путь и сформировать отчет;
     * помощь.

  
     
     Для планирования времени работ была использована бесплатная программа OpenProject.
     Данное кроссплатформенное программное обеспечение предназначена для планирования проектов и является очень хорошей заменой платного ПО. Программа включает все необходимые функции: диаграмма Ганта, сетевой трафик, распределение ресурсов, отчёты, кроме того поддерживает импорт/экспорт документов Microsoft Project.
     Этапы работ по разработке системы мониторингапредставлены на рисунке 13. 
     
     Подчас работодатели уделяют недостаточно внимания вопросам безопасности сотрудников, которые работают с офисной техникой и компьютерами. Некоторые из них считают, что в такой работе практически полностью отсутствую факторы риска, которые способны оказать негативное влияние на здоровье работников. Однако это не совсем так: труд с использованием этого типа оборудования также требует выполнения правил, которые устанавливает техника безопасности на рабочем месте за компьютером [13].
     Признаком того, что сотрудникам необходимо соблюдать правила техники безопасности при использовании компьютера, становится то, что эти вопросы зафиксированы и в действующем законодательстве. Основными нормативными документами, которые содержат обязательные требования, можно считать:
     Основными факторами влияющими на здоровье человека является 
     Использование персонального компьютера совсем не так безопасно, как можно подумать. Это убедительно подтверждается информацией, содержащейся в стандарте ГОСТ 12.0.003-2015, описывающем основные вредные и опасные факторы такого трудового процесса. В их список входят:
     * высокая температура, характерная для отдельных элементов компьютерной техники и создающая общий повышенный температурный фон в рабочем помещениипри котором необходимо проветривать рабочее место;
     * высокая степень монотонности рабочего процесса;
     * значительный уровень зрительный нагрузок, испытываемых работником;
     * при использовании электроприборовриск поражения статическим электричествомслучайном контакте и так же причиной поражения человека электротоком является прикосновение его к неизолированным электропроводам;
     * недостаточная освещенность рабочей зоны –освещенность на поверхности стола в зоне размещения рабочего документа должна быть равна 300 — 500 лк;
     * повышенный уровень напряженности электрического и магнитного поля, генерируемых работающей техникой;
     * высокий уровень блесткасти и контрастности рабочего экрана, негативно влияющий на зрение работника в длительной перспективе;
     * другие факторы.
     Гигиенические требования
     В связи с наличием воздействия большого списка вредоносных факторов на работника, требования техники безопасности при работе с компьютером охватывают не только сам процесс труда, но и сопровождающие его обстоятельства, которые также влияют на работоспособность и сохранность здоровья сотрудника на длинных временных горизонтах. Соответствующие правила организации рабочего процесса приведены в СанПиН 2.2.2/2.4.1340-03. Они включают ряд нормативов, которые касаются следующих моментов:
     * общие правила организации работы с использованием компьютерной и офисной техники;
     * требования к персональному компьютеру, используемому для постоянной работы сотрудника;
     * требования к помещениям, в которых выполняется работа с применением офисной техники;
     * требования к микроклимату для соответствующих рабочих мест, включая содержание в воздухе рабочей зоны аэроионов и вредных химикатов;
     * допустимый уровень шума, генерируемого рабочим оборудованием;
     * правила организации освещения рабочей зоны;
     * разрешенные нормативы в отношении параметров электромагнитных полей на рабочих местах;
     * техника безопасности при пользовании компьютером, которая связана с организацией рабочих мест сотрудников;
     * медицинский контроль за здоровьем персонала;
     * порядок организации государственного санитарно-эпидемиологического надзора и выполнения производственного контроля.
     В приложении к интересующему нас нормативному документу в табличном виде приводится список максимально допустимых значений по каждому из перечисленных параметров [14].
     Инструктаж по технике безопасности за компьютером
     Чтобы донести до работника требования, которые устанавливает техника безопасности при использовании компьютера, работодатель обязан организовать инструктаж. Он проводится на основании специально составленной инструкции, которую обычно разрабатывает специалист по охране труда или непосредственный руководитель работника. Проведение инструктажа нужно организовать до начала самостоятельной работы: специалист допускается к работе только после его прохождения. Это значит, до него донесены правила техники безопасности при работе с компьютером. Инструкция-памятка по технике безопасности за компьютером должна быть выдана каждому работнику в бумажном или электронном виде. Ей можно дать вид легкочитаемой инфографики – например, 10 правил техники безопасности за компьютером.
     Меры безопасности перед началом работы
     В рамках проведения инструктажа до работника доводятся сведения о необходимых действиях, выполняемых на каждом этапе рабочего процесса. Техника безопасности в начале работы на компьютере требует выполнения следующих операций:
     * проверить исправность элементов электросистемы, обеспечивающей питание компьютера, включая электропроводку, выключатели, вилки и розетки, при помощи которых аппаратура подключается к сети;
     * проконтролировать заземление компьютера;
     * проверить его работоспособность.
     Техника безопасности возле компьютера в процессе работы
     При выполнении работ нужно соблюдать следующие правила:
     * запрещается класть на корпус и дисплей компьютера посторонние предметы, прикасаться к элементам аппаратуры мокрыми руками, производить чистку корпуса оборудования, находящегося под напряжением, располагать технику близко к жилищно-коммунальным инженерным системам;
     * в случае обнаружения неисправности компьютера немедленно прекратить работу и сообщить об этом непосредственному руководителю;
     * эксплуатировать компьютер только с соблюдением инструкции, установленной производителем;
     * избегать частого и необоснованного включения и выключения компьютера во время работы.
     Техника безопасности по окончанию работы за компьютером
     После завершения работы сотруднику нужно выполнить следующие действия:
     * выключить компьютер с использованием алгоритма, установленного производителем;
     * обесточить периферийное оборудование;
     * убедиться в отключении техники;
     * выполнить очистку рабочих поверхностей влажной тканью.
     Правильное расположение за компьютером
     Требования к расположению работника за компьютером нацелены на обеспечение его комфорта в течение всей рабочей смены и отсутствие негативных следствий длительной работы. Они действуют для любых рабочих мест, будь то бухгалтерия, обучающий класс или кабинет информатики. Они включают следующие правила:
     * полная опора ступнями на пол при посадке;
     * использование компьютерной мебели, отвечающей нормам СанПиН 2.2.2/2.4.1340-03;
     * отказ от скрещивания конечностей, способного затруднить кровообращение;
     * соблюдение расстояние до монитора компьютера не меньше 45 сантиметров;
     * правильная установка освещения, которое не должно светить в глаза и оставлять блики на рабочем мониторе.
     Для облегчения длительной работы эксперты рекомендуют использовать вспомогательное оборудование, например, особые очки, антибликовые мониторы, коврики для мыши и проч. Нарушения техники безопасности при работе на компьютере способны вызвать стойкие расстройства здоровья, которые потом будет трудно ликвидировать.
     Режим труда и отдыха
     Длительность непрерывного труда и отдыха для сотрудников, постоянно работающих за персональной офисной техникой, регламентирована на законодательном уровне. Соответствующие нормы приводятся в СанПиН 2.2.2/2.4.1340-03, который устанавливает обязательную продолжительность перерывов в такой работе. Они зависят от длины рабочей смены сотрудника и определяются так:
     * при 8-часовой рабочей смене в зависимости от тяжести и напряженности труда работника общая продолжительность перерывов за рабочий день должна составлять от 50 до 90 минут;
     * при 12-часовой рабочей смене – от 80 до 140 минут.
     Проводить такие перерывы за монитором, тратя их на чтение новостей или онлайн-игры, нельзя. Работнику нужно посвятить их физическим упражнениям, короткой прогулке, гимнастике для глаз и другой активности [14].
     Продолжительность указанных перерывов согласно действующему Трудовому кодексу включается в общую длительность рабочего времени: рабочий день сотрудника не продлевается за счет таких периодов отдыха. Также в этом время сотрудник не может привлекаться к другой работе. В дополнение к этим перерывам ему предоставляется стандартное время для обеда.
     
     
     
     
     
     
     5.2 Информационная безопасность
     
     
     Научно-технический прогресс превратил информацию в продукт, который можно купить, продать, обменять. Нередко стоимость данных в несколько раз превышает цену всей технической системы, которая хранит и обрабатывает информацию.
     Качество коммерческой информации обеспечивает необходимый экономический эффект для компании, поэтому важно охранять критически важные данные от неправомерных действий. Это позволит компании успешно конкурировать на рынке.
     Определение информационной безопасности
     Информационная безопасность (ИБ) – это состояние информационной системы, при котором она наименее восприимчива к вмешательству и нанесению ущерба со стороны третьих лиц. Безопасность данных также подразумевает управление рисками, которые связаны с разглашением информации или влиянием на аппаратные и программные модули защиты [15].
     Безопасность информации, которая обрабатывается в организации, – это комплекс действий, направленных на решение проблемы защиты информационной среды в рамках компании. При этом информация не должна быть ограничена в использовании и динамичном развитии для уполномоченных лиц.
     Требования к системе защиты ИБ
     Защита информационных ресурсов должна быть:
     1. Постоянной. Злоумышленник в любой момент может попытаться обойти модули защиты данных, которые его интересуют.
     
     2. Целевой. Информация должна защищаться в рамках определенной цели, которую ставит организация или собственник данных.
     3. Плановой. Все методы защиты должны соответствовать государственным стандартам, законам и подзаконным актам, которые регулируют вопросы защиты конфиденциальных данных.
     4. Активной. Мероприятия для поддержки работы и совершенствования системы защиты должны проводиться регулярно.
     5. Комплексной. Использование только отдельных модулей защиты или технических средств недопустимо. Необходимо применять все виды защиты в полной мере, иначе разработанная система будет лишена смысла и экономического основания.
     6. Универсальной. Средства защиты должны быть выбраны в соответствии с существующими в компании каналами утечки.
     7. Надежной. Все приемы защиты должны надежно перекрывать возможные пути к охраняемой информации со стороны злоумышленника, независимо от формы представления данных.
     Информация считается защищенной, если соблюдаются три главных свойства.
     Первое – целостность – предполагает обеспечение достоверности и корректного отображения охраняемых данных, независимо от того, какие системы безопасности и приемы защиты используются в компании. Обработка данных не должна нарушаться, а пользователи системы, которые работают с защищаемыми файлами, не должны сталкиваться с несанкционированной модификацией или уничтожением ресурсов, сбоями в работе ПО.
     Второе – конфиденциальность – означает, что доступ к просмотру и редактированию данных предоставляется исключительно авторизованным пользователям системы защиты.
     Третье – доступность – подразумевает, что все авторизованные пользователи должны иметь доступ к конфиденциальной информации.
     Достаточно нарушить одно из свойств защищенной информации, чтобы использование системы стало бессмысленным [15].
     Этапы создания и обеспечения системы защиты информации
     На практике создание системы защиты информации осуществляется в три этапа.
     Создание системы защиты информации
     На первом этапе разрабатывается базовая модель системы, которая будет функционировать в компании. Для этого необходимо проанализировать все виды данных, которые циркулируют в фирме и которые нужно защитить от посягательств со стороны третьих лиц. Планом работы на начальном этапе являются четыре вопроса:
     Какие источники информации следует защитить?
     Какова цель получения доступа к защищаемой информации?
     Целью может быть ознакомление, изменение, модификация или уничтожение данных. Каждое действие является противоправным, если его выполняет злоумышленник. Ознакомление не приводит к разрушению структуры данных, а модификация и уничтожение приводят к частичной или полной потере информации.
     Что является источником конфиденциальной информации?
     Источники в данном случае это люди и информационные ресурсы: документы, флеш-носители, публикации, продукция, компьютерные системы, средства обеспечения трудовой деятельности.
     Способы получения доступа, и как защититься от несанкционированных попыток воздействия на систему?
     Различают следующие способы получения доступа:
     Несанкционированный доступ – незаконное использование данных;
     Утечка – неконтролируемое распространение информации за пределы корпоративной сети. Утечка возникает из-за недочетов, слабых сторон технического канала системы безопасности;
     Разглашение – следствие воздействия человеческого фактора. Санкционированные пользователи могут разглашать информацию, чтобы передать конкурентам, или по неосторожности.
     Второй этап включает разработку системы защиты. Это означает реализовать все выбранные способы, средства и направления защиты данных.
     Система строится сразу по нескольким направлениям защиты, на нескольких уровнях, которые взаимодействуют друг с другом для обеспечения надежного контроля информации.
     Правовой уровень обеспечивает соответствие государственным стандартам в сфере защиты информации и включает авторское право, указы, патенты и должностные инструкции. Грамотно выстроенная система защиты не нарушает права пользователей и нормы обработки данных.
     Организационный уровень позволяет создать регламент работы пользователей с конфиденциальной информацией, подобрать кадры, организовать работу с документацией и физическими носителями данных.
     Регламент работы пользователей с конфиденциальной информацией называют правилами разграничения доступа. Правила устанавливаются руководством компании совместно со службой безопасности и поставщиком, который внедряет систему безопасности. Цель – создать условия доступа к информационным ресурсам для каждого пользователя, к примеру, право на чтение, редактирование, передачу конфиденциального документа. Правила разграничения доступа разрабатываются на организационном уровне и внедряются на этапе работ с технической составляющей системы.
     Технический уровень условно разделяют на физический, аппаратный, программный и математический подуровни.
     физический – создание преград вокруг защищаемого объекта: охранные системы, зашумление, укрепление архитектурных конструкций;
     аппаратный – установка технических средств: специальные компьютеры, системы контроля сотрудников, защиты серверов и корпоративных сетей;
     программный – установка программной оболочки системы защиты, внедрение правила разграничения доступа и тестирование работы;
     математический – внедрение криптографических и стенографических методов защиты данных для безопасной передачи по корпоративной или глобальной сети.
     Третий, завершающий этап – это поддержка работоспособности системы, регулярный контроль и управление рисками. Важно, чтобы модуль защиты отличался гибкостью и позволял администратору безопасности быстро совершенствовать систему при обнаружении новых потенциальных угроз.
     Виды конфиденциальных данных
     Конфиденциальные данные – это информация, доступ к которой ограничен в соответствии с законами государства и нормами, которые компании устанавливаются самостоятельно [16].
     Личные конфиденциальные данные: персональные данные граждан, право на личную жизнь, переписку, сокрытие личности. Исключением является только информация, которая распространяется в СМИ.
     Служебные конфиденциальные данные: информация, доступ к которой может ограничить только государство (органы государственной власти).
     Судебные конфиденциальные данные: тайна следствия и судопроизводства.
     Коммерческие конфиденциальные данные: все виды информации, которая связана с коммерцией (прибылью) и доступ к которой ограничивается законом или предприятием (секретные разработки, технологии производства и т.д.).
     Профессиональные конфиденциальные данные: данные, связанные с деятельностью граждан, например, врачебная, нотариальная или адвокатская тайна, разглашение которой преследуется по закону.
     Угрозы конфиденциальности информационных ресурсов
     Угроза – это возможные или действительные попытки завладеть защищаемыми информационными ресурсами.
     Источниками угрозы сохранности конфиденциальных данных являются компании-конкуренты, злоумышленники, органы управления. Цель любой угрозы заключается в том, чтобы повлиять на целостность, полноту и доступность данных.
     Угрозы бывают внутренними или внешними. Внешние угрозы представляют собой попытки получить доступ к данным извне и сопровождаются взломом серверов, сетей, аккаунтов работников и считыванием информации из технических каналов утечки (акустическое считывание с помощью жучков, камер, наводки на аппаратные средства, получение виброакустической информации из окон и архитектурных конструкций).
     Внутренние угрозы подразумевают неправомерные действия персонала, рабочего отдела или управления фирмы. В результате пользователь системы, который работает с конфиденциальной информацией, может выдать информацию посторонним. На практике такая угроза встречается чаще остальных. Работник может годами «сливать» конкурентам секретные данные. Это легко реализуется, ведь действия авторизованного пользователя администратор безопасности не квалифицирует как угрозу [16].
     Поскольку внутренние ИБ-угрозы связаны с человеческим фактором, отслеживать их и управлять ими сложнее. Предупреждать инциденты можно с помощью деления сотрудников на группы риска. С этой задачей справится «СёрчИнформ ProfileCenter» – автоматизированный модуль для составления психологических профилей.      
     Попытка несанкционированного доступа может происходить несколькими путями:
     через сотрудников, которые могут передавать конфиденциальные данные посторонним, забирать физические носители или получать доступ к охраняемой информации через печатные документы;
     с помощью программного обеспечения злоумышленники осуществляют атаки, которые направлены на кражу пар «логин-пароль», перехват криптографических ключей для расшифровки данных, несанкционированного копирования информации.
     с помощью аппаратных компонентов автоматизированной системы, например, внедрение прослушивающих устройств или применение аппаратных технологий считывания информации на расстоянии (вне контролируемой зоны).
     Зависимость количества внутренних угроз от бизнес-процессов
     Аппаратная и программная ИБ
     Все современные операционные системы оснащены встроенными модулями защиты данных на программном уровне. MAC OS, Windows, Linux, iOS отлично справляются с задачей шифрования данных на диске и в процессе передачи на другие устройства. Однако для создания эффективной работы с конфиденциальной информацией важно использовать дополнительные модули защиты.
     Пользовательские ОС не защищают данные в момент передачи по сети, а системы защиты позволяют контролировать информационные потоки, которые циркулируют по корпоративной сети, и хранение данных на северах.
     Аппаратно-программный модуль защиты принято разделять на группы, каждая из которых выполняет функцию защиты чувствительной информации:
     Уровень идентификации – это комплексная система распознавания пользователей, которая может использовать стандартную или многоуровневую аутентификацию, биометрию (распознавание лица, сканирование отпечатка пальца, запись голоса и прочие приемы) [17].
     Уровень шифрования обеспечивает обмен ключами между отправителем и получателем и шифрует/дешифрует все данные системы.
     Правовая защита информации
     Правовую основу информационной безопасности обеспечивает государство. Защита информации регулируется международными конвенциями, Конституцией, федеральными законами и подзаконными актами.
     Государство также определят меру ответственности за нарушение положений законодательства в сфере ИБ. Например, глава 28 «Преступления в сфере компьютерной информации» в Уголовном кодексе Российской Федерации, включает три статьи:
     Статья 272 «Неправомерный доступ к компьютерной информации»;
     Статья 273 «Создание, использование и распространение вредоносных компьютерных программ»;
     Статья 274 «Нарушение правил эксплуатации средств хранения, обработки или передачи компьютерной информации и информационно-телекоммуникационных сетей».
    
    
     
     Решения для мониторинга и диагностики производительности сети получили активное развитие по мере ускорения сетей передачи данных и появления новых сложных корпоративных приложений и сервисов.
     В результате выполнения выпускной квалификационной работы была созданаинформационная система мониторинга работоспособности компьютерной сети. 
     В ходе достижения цели были решены следующие задачи:
     * рассмотрены теоретические аспекты создания и работы компьютерных сетей;
     * проведен анализ требований к разрабатываемой системе;
     * проведен выбор средств реализации;
     * разработана система мониторинга работоспособности компьютерной сети;
     * проведена экономическая часть;
     * рассмотрены вопросы охраны труда и окружающей среды.
     В целом, работу можно считать успешно выполненной. 


