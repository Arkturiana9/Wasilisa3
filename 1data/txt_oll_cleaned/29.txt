  
     ВВЕДЕНИЕ
      	
     Бюро находок – организация, занимающаяся каталогизацией, хранением и возвратом утерянных вещей[10].
     Заданием на курсовое проектирование является разработка web-ресурса для бюро находок. 
     Актуальность сайта для представленного проекта состоит в необходимости обнаружения потерянных вещей или сдачи найденных.Сайт поможет проинформировать пользователей о найденных вещах и облегчить работу пользователей в поиске вещей [10].
     Целью работы является создание сайта бюро находок и приобретение практических навыков по проектированию структуры, разработки и реализации информационной системы.
     Для реализации поставленной цели были сформированы и решены следующие задачи:
     * Рассмотреть список литературы по теме;
     * обозначить аудиторию сайта;
     * разработать макет сайта;
     * выбрать программные средства для реализации;
     * разработать полноценный сайт;
     * наполнить сайт информацией по теме.
                Объект исследования –web-сайт «Бюро находок».
                Предмет исследования – технологии и языки программирования используемые при создании сайта.
     Объем работы составляет 30 страниц. Работа состоит из введения, трех разделов, заключения и списка литературы из 10 источников.
     

     1 Анализ предметной области
     
     1.1 Характеристика организации
     
     Разрабатываемый проект предназначен для предметной области бюро находок.
     Обычно бюро находок представляют собой муниципальную организацию. На некоторых больших предприятиях, а также в общественных местах с большим потоком посетителей (вокзалы, аэропорты, библиотеки, супермаркеты, выставки, ярмарки) организуются автономные бюро находок, которые самостоятельно финансируются предприятием, на территории которого они расположены [7].
     После попадания утерянной вещи в бюро находок, бюро находок регистрирует эту вещь и пытается по внешним признакам установить её владельца. Если это невозможно, утерянная вещь остаётся в хранилище бюро находок на определённое время, по истечение которого она либо уничтожается, либо переходит в муниципальную собственность. Вещи, перешедшие в муниципальную собственность, продаются на специальном аукционе, выручка от которого поступает в городскую казну. Найденные наличные деньги передаются на временное хранение в банк. Утерянные документы — в полицию. Утерянные иностранные паспорта направляются в консульство страны владельца паспорта.
     При обращении за утерянной вещью в бюро находок, владелец должен доказать принадлежность ему найденной вещи. При выдаче утерянной вещи, бюро находок удерживает с владельца заранее установленную плату за регистрацию и хранение этой вещи.
     
     
     
     
     1.2 Целевая аудитория
     
     Целью создания web–сайта для бюро находок является автоматизация основных процессов, происходящих в бюро. Пользователями данной разработки будут являться пользователи сайта, а также разработчики. 
Поэтому данными для проекта должна быть следующая информация:
* информация о потерянных вещах: адрес, описание, фото, номер или электронный адрес;
* информация о найденных вещах: адрес, описание, фото, номер или электронный адрес.
     В разработке должен быть обеспечен ввод и хранение информации о бюро и обо всех потерянных вещах [7]. 
     
     1.3 Требования к разработке	
     
     Среди требований к разработке сайта стоит выделить следующие:
* дизайн должен быть простым, ненавязчивым, но оригинальным;
* грамотный пользовательский интерфейс, максимально удобный, ориентированный на целевую аудиторию;
* на сайте должен присутствовать качественный контент;
* сайт должен быть совместим со всеми браузерами и платформами, с которыми работают пользователи сайта [2].
              Главная задача сайта – дать пользователю необходимую ему информацию, по интересующей его тематике.
     
     1.4 Выбор средств реализации
     
     Сайт невозможно создать без программного обеспечения, а точнее – средств, которые помогут разработать его.
     Для написания программного кода и придания сайту красивого внешнего вида использовалисьHTML и CSS. 
     HTML — стандартизированный язык разметки документов во Всемирной паутине. Большинство веб-страниц содержат описание разметки на языке HTML (или XHTML). Язык HTML интерпретируется браузерами; полученный в результате интерпретации форматированный текст отображается на экране монитора компьютера или мобильного устройства.
     Язык HTML до 5-й версии определялся как приложение SGML(стандартного обобщённого языка разметки по стандарту ISO 8879). Спецификации HTML5 формулируются в терминах DOM (объектной модели документа) [1].
     Notepad++ - это текстовый редактор. Он содержит открытый исходный код для Windows, подсветку синтаксиса множества языков программирования и поддерживает открытие более ста форматов [5].
     CSS  — формальный язык описания внешнего вида документа, написанного с использованием языка разметки.
     Преимущественно используется как средство описания, оформления внешнего вида веб-страниц, написанных с помощью языков разметки HTML и XHTML, но может также применяться к любым XML-документам, например, к SVGили XUL [3].
     Для того, чтобы сайт имел не совсем примитивный функционал и имел много возможностей, я решил использовать язык JavaScript и библиотеку JQuery.
     JavaScript— мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией языка ECMAScript. JS обычно используется как встраиваемый язык для программного доступа к объектам приложений.
     jQuery — библиотека JavaScript, фокусирующаяся на взаимодействии JavaScript и HTML. Библиотека jQuery помогает легко получать доступ к любому элементу DOM, обращаться к атрибутам и содержимому элементов DOM, манипулировать ими. Также библиотека jQuery предоставляет удобный API для работы с AJAX. Но даже с использованием этих средств, сайт не будет работать полноценно, отвечающий за серверную часть – PHP [7].
     PHP — это скриптовый язык общего назначения, интенсивно применяемый для разработки веб-приложений. В настоящее время поддерживается подавляющим большинством хостинг-провайдеров и является одним из лидеров среди языков, применяющихся для создания динамических веб-сайтов [9].
     Язык PHP не несет смысла в его использовании без такого средства реализации, как Denwer. Сегодня Denwer (от сокр. Д.н.w.р или ДНВР — джентльменский набор web-разработчика) — набор дистрибутивов (локальный сервер WAMP) и программная оболочка, предназначенные для создания и отладки сайтов (web-приложений, прочего динамического содержимого интернет-страниц) на локальном ПК (без необходимости подключения к сети Интернет) под управлением ОС Windows [6].
     
     1.5 Требования к программному обеспечению
     
     Сайт должен обеспечивать корректное отображение данных в следующих браузерах: 
     * Google Chrome (версия 49.0 и выше); 
     * Opera (версия 12.0 и выше); 
     * Mozilla Firefox (версия 40.0 и выше); 
     * операционная система Windows 7, Windows 8 и Windows 10; 
     * место на диске 50 Мбайт.
     Требования к аппаратному обеспечению сервера хостинга: 
     * процессор семейства x86_64; 
     * оперативной памяти не менее 1 Gb; 
     * место на диске не менее 5.8 Mb; 
     Требования к программному обеспечению сервера хостинга: 
     * операционная система Windows / Linux; 
     * сервер Apache; 
     * язык PHP не ниже 5-ой версии; 
     * система управления сервером cPanel. 
     При соблюдении этих требований сайт будет работать корректно.
     
     
    
     
     
     
     2 Разработка web-документа, его схемы и структуры
     
     2.1 Основная концепция проекта
     
     Поставленная задача: разработать web-ресурс для бюро находок.
     Ресурс направлен на посетителей сайта, которые ищут свои вещи, или выкладывают посты о находках. Целью создания является оптимизация поиска вещей, а также, как дополнительный источник связи потребителя с производителем. Контент сайта несет в себе информативный характер.
     
     2.2 Структураweb-документа
     
     Макет является самым первым этапом в создании сайта.
     На рисунке 1 представлен общий вид сайта. 
       
      Рисунок 1 – Макет домашней страницы
      
     На рисунке 2 показана структура меню сайта.
     
       
     	Рисунок 2 – Структура меню сайта
      
     На данном этапе можно увидеть примерный вид сайта.
     Следующим этапом в разработке сайта – выбор цветовой схемы.
     
     2.3 Выбор цветовой схемы
     
     С помощью цветов можно создать определенное настроение сайта, привлечь внимание или сделать заявление. Цвета могут возбуждать либо, наоборот, охлаждать. Выбирая правильную цветовую схему, важно создать атмосферу элегантности, теплого колорита или же безмятежности, либо создать игривый образ молодости. Цвет - это наиболее мощный элемент дизайна [4].
     На рисунке 3 представлена цветовая схема сайта.
     
       
      Рисунок 3 – Цветовая схема сайта
     
     Самый важный этап в разработке сайта – цветовое решение. Этот элемент разработки очень влияет на покупательскую способность. 
     
     2.4 Разработка меню	
     
     Меню сайта — это сгруппированный набор ссылок с названиями разделов, облегчающий переход на другие страницы [7].На сайте представлено горизонтальное и вертикальное меню. Для создания меню было использовано HTML иCSS.
     Горизонтальное меню состоит из четырех основных пунктов. 
     Для того, чтобы вместить больше информации существует вертикальное меню, которое на всех страницах одинаковое.
     Ниже представлен код меню в HTML и его функционирующий вид. 
     
     На рисунке 5 представлено вертикальное меню сайта.
      
       
      Рисунок 5 – Вертикальное меню сайта
     
     На рисунке 6 представлена главная страница сайта.
     
     
       
      Рисунок 6 – Главная страница сайта
     
     
     2.5 Форма обратной связи
     
     На сайте присутствует форма обратной связи, для того, чтобы пользователь мог в любой момент связаться с руководством, отправив сообщение на указанный электронный адрес. Форма обратной связи разработана с помощью скрипта PHP.
     Ниже представлен код, который делает форму рабочей.
      Листинг 3 – Форма обратной связи
      
     
     
     На сайте присутствует гостевая книга, которая привязана к сайту отдельной самостоятельной страницей, на ней опубликованы отзывы гостей и форма отправки отзыва. Работа гостевой книги происходит с помощью PHPи MySQL.
     
     2.6 Разработка блоков сайта
     
     На сайте все страницы созданы с помощьюdiv – блоков, в которых находятся фото, ссылки и описания.
     На рисунке 7 представлены блоки сайта.
       
       
      Рисунок 7 – Блоки объектов
      
     Блоки обьектов выполнены с помощьюHTMLи CSS. Ниже представлен листинг данного блока.
      
      
     При разработке сайта использовалась блочная верстка, имеющая преимущество в том, что независимо от того какой браузер использует пользователь, сайт выглядит корректно при любом разрешении.

     3 Тестирование
      
     3.1 Общие понятия тестирования
     
     Все виды тестирования программного обеспечения, в зависимости от преследуемых целей, можно условно разделить на следующие группы:
     * функциональные
     * нефункциональные
     * связанные с изменениями
     Далее, мы постараемся более подробно рассказать о каждом отдельном виде тестирования, его назначении и использовании при тестировании программного обеспечения [8].
     Функциональные виды тестирования
     Функциональные тесты базируются на функциях и особенностях, а также взаимодействии с другими системами, и могут быть представлены на всех уровнях тестирования: компонентном или модульном (Component/Unit testing), интеграционном (Integration testing), системном (System testing) и приемочном (Acceptance testing). Функциональные виды тестирования рассматривают внешнее поведение системы. Далее перечислены одни из самых распространенных видов функциональных тестов:
* функциональное тестирование (Functional testing)
* тестированиебезопасности (Security and Access Control Testing)
* тестирование взаимодействия (Interoperability Testing)[8].
     Нефункциональные виды тестирования
     Нефункциональное тестирование описывает тесты, необходимые для определения характеристик программного обеспечения, которые могут быть измерены различными величинами. В целом, это тестирование того, "Как" система работает.
Все виды тестирования производительности:
     * нагрузочноетестирование (Performance and Load Testing)
     * стрессовое тестирование (Stress Testing)
     * тестирование стабильности или надежности (Stability / Reliability Testing)
     * объемное тестирование (Volume Testing)
       * тестирование установки (Installation testing)
       * тестирование удобства пользования (Usability Testing)
       * тестирование на отказ и восстановление (Failover and Recovery Testing)
       * конфигурационное тестирование (Configuration Testing)[8].
     Связанные с изменениями виды тестирования
     После проведения необходимых изменений, таких как исправление бага/дефекта, программное обеспечение должно быть пере тестировано для подтверждения того факта, что проблема была действительно решена. Ниже перечислены виды тестирования, которые необходимо проводить после установки программного обеспечения, для подтверждения работоспособности приложения или правильности осуществленного исправления дефекта:
       * дымовое тестирование (Smoke Testing)
       * регрессионное тестирование (Regression Testing)
       * тестированиесборки (Build Verification Test)
       * санитарное тестирование или проверка согласованности/исправности (Sanity Testing)
Порядок тестирования сайта:
     * проверка гиперссылок, поиск нерабочих ссылок;
     * тестирование верстки (изменение масштаба отображения);
     * тестирование верстки сайта в режиме отключенной графики;
     * тестирование верстки в режиме изменения размера шрифта;
     * тестирование php- скриптов;
     * тестирование javascript;
     * тестирование кроссбраузерности 
     Таким образом, тест –Один из важных этапов, после которого, представляется заказчику готовый проект без ошибок .
     
     3.2 Результаты тестирования
     
     Проверка гиперссылок, поиск нерабочих ссылок
     На рисунке 8 представлен вид страниц, которые отображаются при переходе по гиперссылкам.
     
       
      Рисунок 8 – Валидность гиперссылок
      
     В ходе тестирования выявлено, что все страницы отображаются корректно, все ссылки в меню ведут на указанные страницы.
     Тестирование верстки (изменение масштаба отображения)
     На рисунке 9 представлена главная страница с масштабом 100 %. 
       
      Рисунок 9 – Стандартный масштаб 100%
      
     На рисунке 10 показана та же страница, но с масштабом 80%.
     
       
      Рисунок 10 – Масштаб 80%
      
     В ходе тестирования сделан вывод, что сайт остается дееспособным при изменении масштаба. Все элементы остаются на месте, меняется только размер.
     На рисунке 11 – вид сайта при увеличенном 120% масштабе.
      
       
      Рисунок 11 – Масштаб 120%
      
     При измении масштаба все остается фиксированным, текст никуда не смещается,изображения отображаются как и при стандартном масштабе, никак не влияя на функционал всего сайта.
     На рисунке 12 представленотестированние верстки сайта в режиме отключенной графики.

Рисунок 12 – Отключение графики
      
     После отключение графики оставляет сайт остается не действующим. На рисунке 13 представлено тестирование верстки в режиме изменения размера шрифта
     
      
      Рисунок 13 – Изменение шрифта

     Верстка сайта – жесткая, шрифт остается без изменений.
     Тестирование кроссбраузерности
     На рисунках 14,15 и 16 представлен общий вид сайта в разных браузерах.
     
       
      Рисунок 14 – Отображение сайта в браузере GoogleChrome
      
       
      Рисунок 15 – Отображение сайта в браузере MozillaFirefox
      
      
       
      Рисунок 16 – Отображение сайта в браузере Opera
      
                Сайт прошёл тестирование на кроссбраузерность, во всех браузерах он выглядит корректно и остаётся действующим.

     ЗАКЛЮЧЕНИЕ
     
     В результате курсового проекта был создан сайтбюро находок «Маленький шерлок». В ходе реализации проекта была изучена предметная область. 
     При разработке web-ресурса были реализованы следующие задачи:
     * проанализированы опции существующих сайтов;
     * обозначена аудитория сайта;
     * разработана структура сайта;
     * разработан макет сайта;
     * разработан дизайн сайта;
     * создан сайт бюро находок «Маленький шерлок».
     Результатом проделанной работы стал готовый к работе сайт, содержащий 25 страниц.
     Сайт содержит такие страницы как: «Главная», «Архив», «Контакты», «Прочее», «Карта сайта», «Связаться с нами», а также «Личный кабинет».Сайт позволяет ознакомиться с информацией по категориям: «Животные», «Транспорт», «Ключи», «Документы», «Прочее».
     Сайт позволяет воспользоваться: гостевой книгой, чтобы оставить комментарий, обратной связью, чтобы связаться с администрацией, а также существует возможность регистрации и авторизации.
     

     