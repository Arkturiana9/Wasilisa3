
Введение
     
     
     Тема выпускной квалификационной работы – разработка приложения для переадресации сообщений в мессенджерах и социальных сетях. 
     Разработка приложения для переадресации сообщений в настоящее время является актуальной, потому что порой пользователю бывает сложно уследить за всеми нужными событиями и мероприятиями так как зачастую информация поступает в различные мессенджеры и социальные сети. 
     В наши дни существует много различных приложений для обмена сообщениями, файлами, видеофайлами, аудиофайлами и новостями, поэтому пользователям часто приходится использовать несколько таких приложений. В пример можно привести ситуацию, когда учителю удобно писать информацию в одном мессенджере, студенту уже в другом, и для того, чтобы не упустить важную информацию по учебе, очень полезным может оказаться приложение, которое позволяет переадресовывать сообщения.
     Целью выпускной квалификационной работы является разработка приложения для переадресации сообщений в мессенджерах и социальных сетях, которое будет давать возможность пользователям не переключаться между мессенджерами и социальными сетями, а получать информацию в одном приложении.
     Для достижения поставленной цели были поставлены следующие задачи:
     * изучить литературу, посвященную платформе «Telegram»;
     * изучить литературу, посвященную языку программирования Python;
     * изучить литературу, посвященную компьютерным сетям и сетевым подключениям;
     * разработать приложение на базе платформы «Telegram»;
     * провести тестирование разработанного приложения.
     В процессе разработки приложения были использованы: платформа для разработки приложения Telegram, среда разработки Visual Studio Code и язык программирования Python. 
     В первом разделе пояснительной записки выполнен анализ предметной области и определены основные понятия средств разработки приложения.
     Второй раздел посвящен разработке приложения на базе платформы Telegram. Также в нем содержится описание понятия тестирования и приведены результаты тестирования. 
     Третий раздел посвящен планированию работы и расчету сметы затрат на разработку.
     В четвертом разделе рассматривается охрана труда и окружающей среды.
       
	1 Анализ предметной области
     
     
1.1 Исследование предметной области

     
     Приложением называют часть программного обеспечения, которая работает как единая программа на компьютере, мобильном девайсе или через браузер. 
     	Telegram – кроссплатформенная система мгновенного обмена сообщениями с функциями VoIP, позволяющая обмениваться текстовыми, голосовыми и видео-сообщениями, стикерами и фотографиями, файлами многих форматов [1].
     	VoIP (Voice over Internet Protocol) или IP-телефония – это голосовая связь через интернет (в отличии от традиционной телефонной связи, которая происходит через телефонные линии или мобильную GSM/3G сеть) [2].
     	Боты – это специальные программы, выполняющие различные функции и упрощающие жизнь их пользователей. Написанные для платформы Telegram, они предназначены для выполнения самых разных функций: от получения новостей до поиска информации и даже торговли акциями. Главное задачей бота является автоматический ответ после введенной ему пользователем команды. При этом, работая непосредственно через интерфейс Telegram, программа имитирует действия живого «юзера», за счет чего пользование таким ботом гораздо удобнее и понятнее.
     	BotFather – самый простой способ для регистрации, настройки и управления другими telegram-ботами. Работа с ним проста и не требует специфических навыков. С помощью BotFather можно зарегистрировать неограниченное количество новых ботов.
     	API-токен – это уникальный ключ, который используется для быстрой авторизации в приложениях на стороне сервера. Следует запомнить API-токен и использовать его для более быстрой и удобной авторизации в Личном кабинете если это сайт, или базе данных если это приложение [3].
     	Туннелирование в компьютерных сетях – процесс, в ходе которого создаётся логическое соединение между двумя конечными точками посредством инкапсуляции различных протоколов. Туннелирование представляет собой метод построения сетей, при котором один сетевой протокол инкапсулируется в другой.
     	Межсетевой экран, сетевой экран – программный или программно-аппаратный элемент компьютерной сети, осуществляющий контроль и фильтрацию проходящего через него сетевого трафика в соответствии с заданными правилами [4]. Другие названия: Брандмауэр – заимствованный из немецкого языка термин;
     	Ретрансляция данных – это пересылка данных, поступающих от трекеров, с сервера на указанные пользователем сторонние серверы. Например, это могут быть серверы надзорных ведомств (Ространснадзор) или логистические IT-системы [5].
     	Прокси-сервер – промежуточный сервер в компьютерных сетях, выполняющий роль посредника между пользователем и целевым сервером, позволяющий клиентам как выполнять косвенные запросы к другим сетевым службам, так и получать ответы [6].
     	API ВКонтакте – это интерфейс, который позволяет получать информацию из базы данных vk.com с помощью http-запросов к специальному серверу. Пользователю не нужно знать в подробностях, как устроена база, из каких таблиц и полей каких типов она состоит – достаточно того, что API-запрос об этом знает.
     	Telebot – (pyTelegramBotAPI) хорошая и «лёгкая» библиотека для создания бота на python для Telegram.
     	Visual Studio Code – редактор исходного кода, разработанный Microsoft для Windows, Linux и macOS. Позиционируется как «лёгкий» редактор кода для кроссплатформенной разработки веб- и облачных приложений.
     
1.2 Основные понятия и средства создания бота
     
     
     В разработке данного проекта были использованы следующие средства.
     Ретрансляция – практически идентичная с автоматическим запросом повторной передачи (ARQ), является повторной передачей пакетов, которые были повреждены или утрачены. Ретрансляция – это один из основных механизмов, используемых протоколами, при работе с коммутацией пакетов компьютерной сети для обеспечения надежной связи (как, например, обеспечение надежного потока байтов, например TCP).Эти сети, как правило, «не надежны», это означает, что они не гарантируют отсутствие задержек, повреждений или потерь пакетов, или выводов их из строя. Протоколы, которые обеспечивают надежную связь по таким сетям используют комбинацию подтверждений (то есть явное получение от назначения данных), ретрансляцию недостающих или поврежденных пакетов (обычно, инициированные тайм-аутом), и контрольную сумму, чтобы обеспечить надежность [7].
     Подтверждения. Есть несколько форм подтверждения, которые могут быть использованы по отдельности или вместе в сетевых протоколах. Положительное подтверждение – приемник явно уведомляет отправителя, какие пакеты, сообщения, или сегменты были получены правильно [8]. Также положительное подтверждение косвенно сообщает отправителю, какие пакеты не были получены и обеспечивает подробную информацию о пакетах, которые должны быть переданы повторно. Положительное подтверждение с ретрансляцией (PAR) – это метод, используемый TCP (RFC 793), для проверки получения передаваемых данных. PAR работает с помощью повторной передачи данных в установленное время, пока принимающий хост не подтвердит прием данных. Отрицательное подтверждение (NACK): приемник явно уведомляет отправителя, какие пакеты, сообщения, или сегменты были получены неправильно и потребует их повторно (RFC 4077). Выборочное подтверждение (SACK): приемник явно перечисляет, какие пакеты, сообщения, или сегменты в потоке подтвердил (положительную или отрицательную). Положительное выборочное подтверждение – это опция в TCP (RFC 2018), оно является полезным для доступа в интернет через спутник (RFC +2488). Накопительное подтверждение: получатель подтверждает, что это правильно получил пакет, сообщение, или сегмент в потоке, который неявно информирует отправителя, что предыдущие пакеты были приняты правильно.
     Python (МФА) в русском языке встречаются названия пито?н или па?йтон) – высокоуровневый язык программирования общего назначения с динамической строгой типизацией и автоматическим управлением памятью, ориентированный на повышение производительности разработчика, читаемости кода и его качества, а также на обеспечение переносимости написанных на нём программ [9]. Язык является полностью объектно-ориентированным в том плане, что всё является объектами. Необычной особенностью языка является выделение блоков кода пробельными отступами. Синтаксис ядра языка минималистичен, за счёт чего на практике редко возникает необходимость обращаться к документации. Сам же язык известен как интерпретируемый и используется в том числе для написания скриптов. Недостатками языка являются зачастую более низкая скорость работы и более высокое потребление памяти написанных на нём программ по сравнению с аналогичным кодом, написанным на компилируемых языках, таких как C или C++.
     Python является мультипарадигмальным языком программирования, поддерживающим императивное, процедурное, структурное, объектно-ориентированное программирование, мета-программирование и функциональное программирование[10]. Задачи обобщённого программирования решаются за счёт динамической типизации. Аспектно-ориентированное программирование частично поддерживается через декораторы, более полноценная поддержка обеспечивается дополнительными фреймворками. Такие методики как контрактное и логическое программирование можно реализовать с помощью библиотек или расширений. Основные архитектурные черты – динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений с глобальной блокировкой интерпретатора (GIL), высокоуровневые структуры данных. Поддерживается разбиение программ на модули, которые, в свою очередь, могут объединяться в пакеты. Эталонной реализацией Python является интерпретатор CPython, поддерживающий большинство активно используемых платформ и являющийся стандартом де-факто языка. Он распространяется под свободной лицензией Python Software Foundation License, позволяющей использовать его без ограничений в любых приложениях, включая проприетарные. CPython компилирует исходные тексты в высокоуровневый байт-код, который исполняется в стековой виртуальной машине. К другим трём основным реализациям языка относятся Jython (для JVM), IronPython (для CLR/.NET) и PyPy. PyPy написан на подмножестве языка Python (RPython) и разрабатывался как альтернатива CPython с целью повышения скорости исполнения программ, в том числе за счёт использования JIT-компиляции [11]. Поддержка версии Python 2 закончилась в 2020 году. На текущий момент активно развивается версия языка Python 3. Разработка языка ведётся через предложения по расширению языка PEP (англ. Python Enhancement Proposal), в которых описываются нововведения, делаются корректировки согласно обратной связи от сообщества и документируются итоговые решения. Стандартная библиотека включает большой набор полезных переносимых функций, начиная с возможностей для работы с текстом и заканчивая средствами для написания сетевых приложений. Дополнительные возможности, такие как математическое моделирование, работа с оборудованием, написание веб-приложений или разработка игр, могут реализовываться посредством обширного количества сторонних библиотек, а также интеграцией библиотек, написанных на Си или C++, при этом и сам интерпретатор Python может интегрироваться в проекты, написанные на этих языках. Существует и специализированный репозиторий программного обеспечения, написанного на Python, – PyPI. Данный репозиторий предоставляет средства для простой установки пакетов в операционную систему и стал стандартом де-факто для Python. По состоянию на 2019 год в нём содержалось более 175 тысяч пакетов.
     Python стал одним из самых популярных языков, он используется в анализе данных, машинном обучении, DevOps и веб-разработке, а также в других сферах, включая разработку игр. За счёт читабельности, простого синтаксиса и отсутствия необходимости в компиляции язык хорошо подходит для обучения программированию, позволяя концентрироваться на изучении алгоритмов, концептов и парадигм. Отладка же и экспериментирование в значительной степени облегчаются тем фактом, что язык является интерпретируемым [12]. Применяется язык многими крупными компаниями, такими как Google или Facebook. По состоянию на октябрь 2021 года Python занимает первое место в рейтинге TIOBE популярности языков программирования с показателем 11,27%. «Языком года» по версии TIOBE Python объявлялся в 2007, 2010, 2018 и 2020 годах.
     MTProto API (он же Telegram API) – это API, через который приложение Telegram связывается с сервером [13]. Telegram API полностью открыт, так что любой разработчик может написать свой клиент мессенджера. Для написания ботов был создан Telegram Bot API – надстройка над Telegram API. Среди упрощений Bot API: работа через вебхуки, упрощенная разметка сообщений и прочее.
     
     
     1.3 Основная концепция бота 
     
     
     В наши дни существует много различных приложений для обмена сообщениями, файлами, видеофайлами, аудиофайлами и новостями, поэтому пользователям часто приходится использовать несколько таких приложений. В пример можно привести ситуацию, когда учителю удобно писать информацию в одном мессенджере, студенту уже в другом, и для того, чтобы не упустить важную информацию по учебе, очень полезным может оказаться приложение, которое позволяет переадресовывать сообщения.
     Целью выпускной квалификационной работы является разработка приложения для переадресации сообщений в мессенджерах и социальных сетях, которое будет давать возможность пользователям не переключаться между мессенджерами и социальными сетями, а получать информацию в одном приложении. Для наглядной демонстрации работы приложения была разработана функциональная схема, которая упрощает понимание работы программы.
     На рисунке 1 представлена функциональная схема приложения.
     
       
      Рисунок 1 – Функциональная схема приложения 
     
     На этой схеме представлена работа переадресации сообщений между пользователями, которые используют разные мессенджеры. Сообщения появляются сразу в обоих мессенджерах, также переадресация работает с ссылками, голосовыми сообщениями, фотографиями и файлами, что намного расширяет функционал приложения.
     
     

     1.4 Описание средств разработки
     
     
     Для создания бота были выбраны следующие программные средства:
     Microsoft Visual Code, Telegram(pc), Telegram(mobile)
     Visual Studio Code – редактор исходного кода, разработанный Microsoft для Windows, Linux и macOS. Позиционируется как «лёгкий» редактор кода для кроссплатформенной разработки веб-приложений.
     Это популярная бесплатная программа для разработчиков, которая помогает писать код. Например:
     * предустановлен синтаксис разных языков программирования позволяющий не ошибиться;
     * «подставляет» некоторые распространённые фрагменты кода;
     * подсвечивает названия переменных;
     * загружает код на Git;
     * предустановлены инструменты для отлаживания кода;
     * поддерживает плагины, которые превращают её в «мега комбайн» для разработчика.
     VSCode – один из самых популярных редакторов кода, потому что он бесплатный и открытый. Есть и другие: например, Sublime Text или продукты компании JetBrains. 
     Установка Visual Studio Code
     Для установки среды необходимо выполнить несколько действий:
     необходимо перейти на официальный сайт и загрузить установочный файл. Следующим шагом необходимо запустить установщик и установить редактор кода на компьютер. В блоке «Выберите дополнительные задачи» необходимо отметить два пункта, позволяющие запускать файлы через выпадающее меню – это поможет быстро открыть код в VS Code.
     На рисунке 2 представлено окно установщика.
     
      Рисунок 2 – Окно установщика
     
     На этом установка завершена. Теперь пользователь может использовать редактор кода по назначению. Обычно с этим не должно возникнуть никаких проблем, однако на слабых машинах запуск утилиты часто прерывается. Исправить эту проблему можно с помощью добавления нового значения к пути ярлыка. Для этого необходимо открыть его свойства через правый клик мыши и в графе «Объект» необходимо прописать -- disable-gpu.
     Telegram – кроссплатформенная система мгновенного обмена сообщениями с функциями VoIP, позволяющая обмениваться текстовыми, голосовыми и видео-сообщениями, стикерами и фотографиями, файлами многих форматов.
     На рисунке 3 представлено окно «Свойства».
     
     
      Рисунок 3 – Окно «Свойства»
     
     Теперь программа должна работать на любом компьютере.
     
2 Практическая реализация
     
     
     2.1 Этапы разработки
     
     
     Перечислим все этапы разработки:
     * подключение всех библиотек;
     * создание туннеля между мессенджерами (VK_API);
     * инициализация туннеля. Создание моста для передачи пакетов данных, установка начального состояния, назначение методов для обработки каждого состояния;
     * создание объекта для связи с botApi, с передачей токена;
     * создание обработчика сообщения пользователей;
     * описание и обработка данных для передачи пакетов по сетевому мосту.
     Боты telegram – аккаунты, которые управляются специальными разными программами. Они используются для: 
     * выполнения команд в чатах;
     * поиска в интернете;
     * развлечения;
     * бизнеса.
     Бот может выполнять за своего владельца какую-либо деятельность. Например, одними из полезных функций ботов являются: массовая рассылка, перевод с одного языка на другой, и так далее. Список функций для ботов достаточно широк.
     Чтобы подключить бота достаточно:
     * войти в telegram;
     * открыть поиск;
     * ввести имя бота. Это может быть, например, @telebot – робот Антон, один из самых популярных в telegram.
     После этого, можно задать команды, которые бот будет выполнять. 
     Каждый бот выполняет свои команды. Чтобы узнать какие, достаточно написать «/start» или «/help» В ответ придёт список команд, которыми можно будет воспользоваться.
     Возможности бота достаточно большие. Многие предприятия и фирмы используют возможность создать своего бота. Это позволяет расширить границы работы, увеличить численность клиентов и улучшить обслуживание.
     В данной работе используется Telegram бот в качестве ретранслятора сообщений, на данный момент никаких команд кроме «Дай ID» и «/start» бот не использует, в будущем будет разработана команда для авторизации в мессенджерах чтобы Ботом могли пользоваться все желающие пользователи.
     Команда «/start» начинает диалог с ботом и является стандартной функцией из библиотеки Telebot.
     Команда «Дай ID» нужна для получения id чата, куда непосредственно будут ретранслироваться пакеты данных (сообщения, видео, аудио, стикеры) 
     
     
     2.2 BotFather настройка бота
     
     
     Для начала нужно зарегистрировать необходимую оболочку бота в самом мессенджере, получить присвоенный ей ID, который является также токеном. В Telegram помощь при такой регистрации оказывает виртуальный помощник @BotFather.
     Как это сделать: 
     * ввод команды /start для запроса инструкции;
     * отправка установки /newbot;
     * @BotFather предлагает придумать имя для создаваемого бота. Оно должно заканчиваться словом «bot»;
     * далее @BotFather присылает токен нового виртуального пользователя и url для добавления его в список контактов.
     Полученную комбинацию желательно протестировать этой ссылкой: api.telegram.org/bot/getMe.
     Готово, теперь можно использовать токен, для дальнейшей работы.
     
     
     2.3 Подключение всех библиотек
     
     
     Для подключения всех нужных библиотек и модулей, потребуется встроенная функция import в язык программирования python. Функция import позволяет пользователям импортировать внешние модули и пакеты.
     Ключевые моменты:
     * выражения import производят поиск по списку путей в sys.path;
     * sys.path всегда включает в себя путь скрипта, запущенного из командной строки, и не зависит от текущей рабочей директории;
     * импортирование пакета равноценно импортированию init.py этого пакета.
     Основные определения:
     * модуль – это любой файл .py;
     * имя модуля – имя этого файла;
     * пакет – это любая папка, которая содержит init.py.
     Что делает import. 
     При импорте модуля Python выполняет весь код в нём. При импорте пакета Python выполняет код в файле пакета __init__.py, если такой имеется. Все объекты, определённые в модуле или __init__.py, становятся доступны пользователю.



     2.4 ApiTelegramBot
     
     
     Для начала пользователь подключает telebot и создает объект бота. 
     После пользователь «берет» токен, который получил от BotFather изначально в самом Telegram.
     После этого пользователь использует все методы через библиотеку бота.
     Это техническая «обертка» pyTelegramApi, где все методы описаны и достаточно при вызове передать параметр. После создания объекта пользователь обращается к этим методам передавая лишь необходимый параметр, что убирает необходимость на более низком уровне взаимодействовать c api.
     Получение обновлений. 
     Существует два диаметрально противоположных по логике способа получать обновления от бота: getUpdates и вебхуки. Входящие обновления будут храниться на сервере до тех пор, пока пользователь их не обработает, но не дольше 24 часов.
     Независимо от способа получения обновлений, в ответ пользователь получит объект Update, сериализованный в JSON. Этот объект представляет из себя входящее обновление. Под обновлением подразумевается действие, совершенное с ботом – например, получение сообщения от пользователя. Только один из необязательных параметров может присутствовать в каждом обновлении.
     Метод getUpdates используется для получения обновлений через long polling. Ответ возвращается в виде массива объектов Update.
     Метод setWebhook необходим для задания url вебхука, на который бот будет отправлять обновления. Каждый раз при получении обновления на этот адрес будет отправлен HTTPS POST с сериализованным в JSON объектом Update. При неудачном запросе к сервису пользователя, будет повторная попытка запроса заданное количество раз.
     
     
     2.5 Создание туннеля между мессенджерами (VK_API)
     
     
     Использование SSH для создания туннеля – это самый простой и быстрый способ организовать защищенный шифрованный канал связи. Для организации такого туннеля потребуется один компьютер с SSH-сервером и другой с SSH-клиентом. Технология SSH есть практически на любом компьютере с операционной системой Linux. В нашем случае в роли сервера выступает библиотека (VK_API) которая создает ssh подключение между двумя мессенджерами.
     Суть туннелирования состоит в том, чтобы «упаковать» передаваемую порцию данных, вместе со служебными полями, в новый «конверт» для обеспечения конфиденциальности и целостности всей передаваемой порции, включая служебные поля. Туннелирование может применяться на сетевом и на прикладном уровнях. Комбинация туннелирования и шифрования позволяет реализовать закрытые виртуальные частные сети. 
     Типы протоколов:
     * транспортируемый протокол;
     * несущий протокол;
     * протокол инкапсуляции.
     Протокол транзитной сети является несущим, а протокол объединяемых сетей – транспортируемым. Пакеты транспортируемого протокола помещаются в поле данных пакетов несущего протокола с помощью протокола инкапсуляции. Пакеты-«пассажиры» не обрабатываются при транспортировке их по транзитной сети никаким образом. Инкапсуляцию выполняет пограничное устройство (маршрутизатор или шлюз), которое находится на границе между исходной и транзитной сетями. Извлечение пакетов транспортируемого протокола из несущих пакетов выполняет второе пограничное устройство, расположенное на границе между транзитной сетью и сетью назначения. Пограничные устройства указывают в несущих пакетах свои адреса, а не адреса узлов в сети назначения.
     Туннель может быть использован, когда две сети с одной транспортной технологией необходимо соединить через сеть, использующую другую транспортную технологию. При этом пограничные маршрутизаторы, которые подключают объединяемые сети к транзитной, упаковывают пакеты транспортного протокола объединяемых сетей в пакеты транспортного протокола транзитной сети. Второй пограничный маршрутизатор выполняет обратную операцию. Обычно туннелирование приводит к более простым и быстрым решениям по сравнению с трансляцией, так как решает более частную задачу, не обеспечивая взаимодействия с узлами транзитной сети.
     Основные компоненты туннеля:
     * инициатор туннеля;
     * маршрутизируемая сеть;
     * туннельный коммуникатор;
     * туннельный терминатор.
     Инициатор туннеля встраивает (инкапсулирует) пакеты в новый пакет, содержащий наряду с исходными данными новый заголовок с информацией об отправителе и получателе. Несмотря на то, что все передаваемые по туннелю пакеты являются пакетами IP, инкапсулируемые пакеты могут принадлежать к протоколу любого типа, включая пакеты немаршрутизируемых протоколов. Маршрут между инициатором и терминатором туннеля определяет обычная маршрутизируемая сеть IP, которая может быть и сетью, отличной от Internet. Терминатор туннеля выполняет процесс, который является обратным инкапсуляции – он удаляет новые заголовки и направляет каждый исходный пакет в локальный стек протоколов или адресату в локальной сети. Инкапсуляция сама по себе никак не влияет на защищенность пакетов сообщений, передаваемых по туннелю VPN. Но инкапсуляция даёт возможность полной криптографической защиты инкапсулируемых пакетов. Конфиденциальность инкапсулируемых пакетов обеспечивается путем их криптографического закрытия, т.е. зашифровывания, а целостность и подлинность – путем формирования цифровой подписи. Так как существует множество методов криптозащиты данных, необходимо чтобы инициатор и терминатор туннеля использовали одни и те же методы и могли согласовывать друг с другом эту информацию. Более того, для возможности расшифровывания данных и проверки цифровой подписи при приеме инициатор и терминатор туннеля должны поддерживать функции безопасного обмена ключами. Чтобы туннели VPN создавались только между уполномоченными пользователями, конечные стороны взаимодействия требуется аутентифицировать.
     
     
     2.6 Инициализация туннеля
     
     
     Для инициализации туннеля прежде всего, нам потребуются вводные данные для авторизации бота в мессенджерах, для Telegram этими данными являются:
     * id чата;
     * токен бота.
     Для Вконтакте этими данными являются:
     * логин;
     * пароль;
     * id чата/беседы;
     * user id;
     * домен.
     Библиотека (VK_API) после подключения предоставляет нам уже готовые некоторые данные, такие как домен и user id, нам остается только записать их в переменные и использовать. Id чата/беседы можно получать посмотрев на ссылку на странице непосредственно самого чата или беседы, этот id указывается в самом конце ссылке в атрибуте sel. 
     После введения всех данных, пользователь может изменить их в файле «vk_config.json». Если пользователь использует двухфакторную аутентификацию бот потребует ввести единоразово код подтверждения, после чего повторная авторизация не требуется.
     Создание моста для передачи пакетов данных было реализовано при помощи ранее созданного и инициализированного туннеля. Мост выступает в роли обработчика подключения, он проверяет установлено ли соединение между двумя мессенджерами по средствам отправки метаданных, в частности датой и временем. Происходит проверка на дату и время с помощью библиотеки datetime, бот запрашивает дату и время сначала в telegram затем отправляет ее во Вконтакте. Если дата и время совпадает с датой и временем полученной от бота, бот продолжает работу, в случае если метаданные по дате и времени разнятся, могут возникнуть технические задержки, например несогласование сообщений в мессенджерах. Такие несогласования могут привести к логической ошибке, когда сообщение должно быть отправлено еще до его появления.
     
     
     2.7 Начальное состояние и переходы
     
     
     Состояние – это метод, который обрабатывается в данный момент в боте, начальным состоянием выступает ожидание запроса, то есть фоновый режим. Список всех состояний бота:
     * redirect;
     * events;
     * stikers;
     * file.
     Рассмотрим каждое состояние по отдельности.
     * redirect – состояние когда бот переадресует сообщение,
     * events – состояние когда бот переадресует событие, например опрос на какую то тему созданный в беседе/чате,
     * stikers – состояние когда бот переадресует стикер отправленный пользователем, работает это состояние в обе стороны,
     * file – состояние когда бот переадресует файл (фотография, видео, голосовое сообщение, word-файл или exel-таблица).
     Переход между состояниями осуществляется путем вызова функции каждого состояния, из мессенджера отправляется запрос, после чего бот определяет функцию и вызывает ее. Например: 
     из мессенджера Вконтакте приходит запрос на обработку сообщения, после чего бот запускает состояние redirect, определяет из какого мессенджера пришло сообщение и в какой мессенджер нужно отправить это сообщение, после чего сравнивает время (для чего это нужно описано в пункте 2.6) и ретранслирует символы, в конечном итоге пользователь получает свое сообщение. Точно таким же образом работают и другие состояния, отличаются только функции обработки этих сообщений, для файлов используется усложненная модель обработчика, для стикеров используется конвертация из webp в png. В пункте 2.8 автор работы рассмотрит, как работают обработчики и чем они отличаются. 
     
     
     2.8 Создание объекта для связи с botApi и создание обработчиков
     
     
     Объект бота для связи с botApi нужен для того, что бы после перезагрузки сервера бот не запрашивал данные с сервера. В случае создания объекта он будет брать уже записанные ранее данные с сервера, это облечгает разработку тем, что пользователю не нужно использовать сторонюю базу данных, все необходимые данные, такие как закрытые ключи подключения, он будет брать напрямую из сервера, и автоматически устанавливать подключение через созданный туннель.
     Объект бота создать очень просто, все что для этого требуется это подключить json файл с конфигурацией к библиотеке botApi это делается через встроенную в язык python функцию import.
     Обработчик «redirect» работает по принципу сравнения и подбора символов, так как сообщения не обрабатываются и не конвертируются в формат json, бот не может напрямую скопировать символы и отправить их в другой мессенджер. Вместо этого он получает массив символов после чего копирует их из созданного массива и записывает в переменную «last_message», после этого этой переменной присваивается временное значение «msg, userName, chatId» и «forwardMessage» в случае если сообщение пересланное. После, переменная «last_message» с минимально необходимыми атрибутами, такими как «userName и chatId», готова к дальнейшим манипуляциям и взаимодействиям.
     Обработчик «events» работает по приницу уведомления, но записывается как и обычное сообщение, поэтому в другой мессенджер оно пересылается как текстовое сообщение, Уведомлением может быть событие, которое появляется в VK_API, после чего отправляется боту в обработчик events, где конвертируется в сообщение и отправляется в другой мессенджер – telegram.
     Обработчик «stikers» работает по принципу ретрансляции изображения, если пользователь мессенджера Вконтакте отправляет стикер, этот стикер записывается и сохроняется в переменную в формате name.webp, далее бот использует библиотеку PIL для конвертации формата webp в формат png, после конвертации фотография отправляется в чат по сетевому мосту с использованием созданного тунеля между мессенджерами. По такому же принципу работает отправка стикеров из мессенджера telegram в мессенджер Вконтакте, только конвертация через библиотеку PIL происходит из формата png в формат webp.
     Обработчик «file» работает по принципу сохранения и переадресации этого файла, после того как пользователь мессенджера Вконтакте отправляет в чат или беседу файл, он временно сохраняется в облаке VK_API, после бот проверяет этот файл на тип, если это фотография он производит конвертацию в формат png, после чего отправляет ее в мессенджер telegram, если это видео, он создает ссылку на медиафайл и отправляет эту ссылку напрямую в мессенджер telegram где видео не скачивается а воспроизводится по прямой ссылке, через встроенный медиапроигрыватель.
     Если пользователь отправляет word файл или exel таблицу то она сохраняется в облаке на стороне сервера VK_API и пересылается в другой мессенджер. VK_API облегчает работу с файлами тем что пользователю не требуется сторонняя база данны где хранились бы эти файлы, в случае с telegram эти файлы хранятся в самом чате пользователя в локальном хранилище, то есть бот не требует хранить эти файлы в сторонней базе данных.
     
     
     2.9 Тестирование
     
     
     Тестирование программного обеспечения – процесс исследования, испытания программного продукта, имеющий своей целью проверку соответствия между реальным поведением программы и её ожидаемым поведением на конечном наборе тестов, выбранных определённым образом [14].
     На рисунке 4 представлен запуск бота.
     
       
      Рисунок 4 – Запуск бота
     
     Прежде всего проверим команду «Дай ID» 
     На рисунке 5 представленна работаспособность команды «Дай ID».
     
       
      Рисунок 5 – Работоспособность команды «Дай ID»
      
     Проверим работоспособность переадресации сообщений.
     На рисунке 6 представленна работоспособность переадресации сообщений из Вконтакте в Telegram.
     
       
      Рисунок 6 – Работоспособность переадресации сообщений из Вконтакте в Telegram
     
     На рисунке 7 представленная работоспособность переадресации сообщений из Telegram во Вконтакте.
     
       
      Рисунок 7 – Работоспособность переадресации сообщений из Telegram во Вконтакте
      
     На рисунке 8 представленна работоспособность переадресации голосовых сообщений.
     
       
      Рисунок 8 – Работоспособность переадресации голосовых сообщений
     
     На рисунках 9, 10 представленна работоспособность переадресации стикеров.
     
       
      Рисунок 9 – Работоспособность переадресации маленьких стикеров
    
       
      Рисунок 10 – Работоспособность переадресации больших стикеров
     
     На рисунке 11 представленна работа переадресации файла.
     
       
      Рисунок 11 – Работоспособность переадресации файла
      
     Проверим работоспособность приложения на мобильном устройстве. Для проверки работоспособности приложения на мобильном устройстве, необходимо установить приложение Telegram на мобильное устройство. Приложение Telegram устанавливается в цифровом магазине, Appstore или GooglePlay в зависимости от операционной системы устройства.
     На рисунках 12, 13 представленна работоспособность бота на мобильном устройстве.
       
      Рисунок 12 – Работоспособность переадресации на мобильном устройстве во Вконтакте
     
       
      Рисунок 13 – Работоспособность переадресации на мобильном утройстве в Telegram
      
     Тестирование мобильной версии приложения производилось на устройстве «Google pixel 4».
     
      
	3 Экономическая часть
     
     
     3.1 Планирование работы 
     
     
     Microsoft Project – программа управления проектами, разработанная и продаваемая корпорацией Microsoft. Microsoft Project создан, чтобы помочь менеджеру проекта в разработке планов, распределении ресурсов по задачам, отслеживании прогресса и анализе объёмов работ. 
     Возможности Microsoft Project 
     * Пошагово разрабатывать и детализировать проект.
     * Рассчитывать время и трудозатраты.
     * Оптимизировать план.
     * Сделать анализ текущего состояния проекта и прогресса.
     Для разработки ВКР этап планирования является важным этапом. Во время этого этапа планируются задачи и время их выполнения. Все этaпы, продолжительность и последовaтельность предстaвленa нa рисунке 14.
     

      Рисунок 14 – Плaнировaние этaпов рaбот
     Следующий этап – разработка сетевого графика. На рисунке 15 представлен сетевой график.
     

      Рисунок 15 – Сетевой грaфик

     Следующим этапом является определение ресурсов, которые необходимы  для выполнения выпускной квалификационной работы. Ресурсы представлены нa рисунке 16.
     

      Рисунок 16 – Ресурсы проектa
     
     Тaкже нa рисунке 17  изобрaжен лист использования ресурсов, который отобрaжaет использование ресурсов нa протяжении всего проектa, общее колличество чaсов работы для кaждого ресурса и их распределение по дням нa протяжении всего проектa.

      Рисунок 17 – Лист ресурсов
      
     На рисунке 17 изображены все использующиеся ресурсы.
     
     
    
4 Охрана труда и окружающей среды
     
     
     4.1 Информaционнaя безопaсность
     
     
     Информация, первоначально – сведения, передаваемые людьми устным, письменным или другим способом с помощью условных сигналов, технических средств и т.д. С середины 20-го века информация является общенаучным понятием, включающим в себя:
     * сведения, передаваемые между людьми, человеком и автоматом, автоматом и автоматом;
     * сигналы в животном и растительном мире;
     * признаки, передаваемые от клетки к клетке, от организма к организму.
     Другими словами, информация носит фундаментальный и универсальный характер, являясь многозначным понятием. Эту мысль можно подкрепить словами Н. Винера (отца кибернетики): «Информация есть информация, а не материя и не энергия».
     Согласно традиционной философской точке зрения, информация существует независимо от человека и является свойством материи. В рамках рассматриваемой дисциплины, под информацией (в узком смысле) мы будем понимать сведения, являющиеся объектом сбора, хранения, обработки, непосредственного использования и передачи в информационных системах.
     Опираясь на это определение информации, рассмотрим понятия информационной безопасности и защиты информации.
     В Доктрине информационной безопасности Российской Федерации под термином информационная безопасность понимается состояние защищенности национальных интересов в информационной сфере, определяемых совокупностью сбалансированных интересов личности, общества и государства.
     В более узком смысле, под информационной безопасностью понимают состояние защищенности информации и поддерживающей инфраструктуры от случайных или преднамеренных воздействий естественного или искусственного характера (информационных угроз, угроз информационной безопасности), которые могут нанести неприемлемый ущерб субъектам информационных отношений.
     Защита информации – комплекс правовых, организационных и технических мероприятий и действий по предотвращению угроз информационной безопасности и устранению их последствий в процессе сбора, хранения, обработки и передачи информации в информационных системах.
     Важно отметить, что информационная безопасность – это одна из характеристик информационной системы, т.е. информационная система на определенный момент времени обладает определенным состоянием (уровнем) защищенности, а защита информации – это процесс, который должен выполняться непрерывно на всем протяжении жизненного цикла информационной системы.
     Рассмотрим более подробно составляющие этих определений.
     Под субъектами информационных отношений понимаются как владельцы, так и пользователи информации и поддерживающей инфраструктуры.
     К поддерживающей инфраструктуре относятся не только компьютеры, но и помещения, системы электро-, водо- и теплоснабжения, кондиционеры, средства коммуникаций и, конечно, обслуживающий персонал.
     Ущерб может быть приемлемым или неприемлемым. Очевидно, застраховаться от всех видов ущерба невозможно, тем более невозможно сделать это экономически целесообразным способом, когда стоимость защитных средств и мероприятий не превышает размер ожидаемого ущерба. Значит, с чем-то приходится мириться и защищаться следует только от того, с чем смириться никак нельзя. Иногда таким недопустимым ущербом является нанесение вреда здоровью людей или состоянию окружающей среды, но чаще порог неприемлемости имеет материальное (денежное) выражение, а целью защиты информации становится уменьшение размеров ущерба до допустимых значений.
     Информационная угроза – потенциальная возможность неправомерного или случайного воздействия на объект защиты, приводящая к потере, искажению или разглашению информации.
     В зависимости от различных способов классификации все возможные угрозы информационной безопасности можно разделить на следующие основные подгруппы.
     Нежелательный контент – это не только вредоносный код, потенциально опасные программы и спам (т.е. то, что непосредственно создано для уничтожения или кражи информации), но и сайты, запрещенные законодательством, а также нежелательные ресурсы с информацией, не соответствующей возрасту потребителя.
     Несанкционированный доступ – просмотр информации сотрудником, который не имеет разрешения пользоваться ею, путем превышения должностных полномочий. Несанкционированный доступ приводит к утечке информации.
     
     
     4.2 Охрaнa трудa
     
     
     Охрана труда – система обеспечения безопасности жизни и здоровья работников в процессе трудовой деятельности, включающая правовые, социально-экономические, организационно-технические, санитарно-гигиенические, лечебно-профилактические, реабилитационные и иные мероприятия.
     В целях создания механизма управления профессиональными рисками в последние годы проводится значительная работа по приведению Трудового кодекса РФ и иных нормативных правовых актов в соответствие с новым порядком организации охраны труда в производственных организациях, вызванных к жизни переходом к управлению профессиональными рисками. В частности, только в 2011 году в раздел «Охрана труда» ТК РФ федеральными законами было внесено 15 изменений и дополнений.
     Выраженные в правовой форме и в первую. очередь закрепленные в трудовом законодательстве, все эти нормы образуют важнейший правовой институт особенной части трудового права, хотя, конечно, нельзя при этом не учитывать, что под охраной труда в широком смысле слова следует понимать все трудовое право, поскольку все его нормы направлены на защиту интересов всех работающих.
     Требования охраны труда при работе с компьютером.
     Перед началом работы оператор обязан:
     * осмотреть и привести в порядок рабочее место;
     * отрегулировать освещенность на рабочем месте;
     * убедиться в достаточности освещенности, отсутствии отражений на экране, отсутствии встречного светового потока;
     * проверить правильность подключения оборудования в электросеть;
     * убедиться в наличии защитного заземления.
     Проверить правильность установок стола, стула, подставки для ног, пюпитра, положения оборудования угла наклона экрана, положение клавиатуры и при необходимости произвести регулировку рабочего стола и кресла, а также расположение элементов компьютера в соответствии с требованиями эргономики и в целях исключения неудобных поз и длительных напряжений тела.
     При включении компьютера оператор обязан соблюдать следующую последовательность включения оборудования:
     * включать периферийные устройства: принтер, монитор, сканер и др.;
     * включить системный блок.
     Оператор во время работы обязан:
     * выполнять только ту работу, которая ему была поручена, и по которой он был проинструктирован, не допуская при этом спешки с учетом безопасных приёмов и методов работы;
     * в течение всего рабочего дня содержать в порядке и чистоте рабочее место;
     * держать открытыми все вентиляционные устройства;
     * внешнее устройство «мышь» применять только при наличии специального коврика;
     * отключать питание только в том случае, если оператор во время перерыва в работе на компьютере вынужден находиться в непосредственной близости от видеотерминала (менее 2 метров), в противном случае питание разрешается не отключать;
     * выполнять санитарные нормы и соблюдать режимы работы и отдыха;
     * для обеспечения оптимальной работоспособности пользователей компьютера необходимо устанавливать регламентированные перерывы во время работы;
     Время перерывов при несоблюдении санитарно-гигиенических требований, соответственно приведенным выше параметрам, должно быть увеличено на 30 %.
     * соблюдать правила эксплуатации вычислительной техники в соответствии с инструкциями по эксплуатации;
     * соблюдать расстояние от глаз до экрана в пределах 60 – 80 см.
     При работе с компьютерами для предупреждения развития переутомления необходимо осуществлять комплекс профилактических мероприятий:
     * проводить упражнение для глаз через каждые 20 – 25 минут работы на компьютере, а при появлении зрительного дискомфорта, выражающегося в быстром развитии усталости глаз, рези, мелькания точек перед глазами и т. п., упражнения для глаз проводятся индивидуально, ранее указанного времени;
     * для снятия общего утомления, улучшения функционального состояния нервной, сердечно-сосудистой, дыхательной систем, а также мышц плечевого пояса, рук, шеи, спины и ног, следует проводить физкультурные паузы;
     * комплексы упражнений следует менять через две – три недели.
     По окончании работ оператор обязан соблюдать следующую последовательность выключения вычислительной техники:
     * произвести закрытие всех активных задач;
     * выключить питание системного блока;
     * выключить питание всех периферийных устройств.
     Оператору запрещается приступать к работе при:
     * отсутствии информации о результатах аттестации условий труда на данном рабочем месте или при наличии информации о несоответствии параметров данного оборудования требованиям санитарных норм;
     * обнаружении неисправности оборудования;
     * отсутствии защитного заземления устройств компьютера;
     * отсутствии углекислотного или порошкового огнетушителя и аптечки первой помощи.
     Оператору во время работы запрещается:
     * касаться одновременно экрана монитора и клавиатуры;
     * прикасаться к задней панели системного блока при включенном питании, переключать разъемы интерфейсных кабелей периферийных устройств при включенном питании;
     * загромождать верхние панели устройств бумагами и посторонними предметами;
     * допускать захламленность рабочего места бумагой в целях недопущения накапливания органической пыли;
     * производить отключение питания во время выполнения активной задачи;
     * производить частые переключения питания;
     * допускать попадание влаги на поверхность системного блока, монитора, рабочую поверхность клавиатуры, дисководов, прицепов и др. устройств;
     * включать сильно охлажденное (принесенное с улицы в зимнее время) оборудование;
     * производить самостоятельно вскрытие и ремонт оборудования.
     Охрана труда охватывает практически все отношения между работодателем и работником вплоть до оснащения его рабочего места, продолжительности рабочего дня, перерывов для отдыха, отпусков, обеспечения специальной одеждой и обувью, профилактическим питанием.
     Для целей законодательства об охране труда используются (ст. 209 ТК РФ)
     Утилизация устаревшей техники.
     Самые сложные операции с компьютером связаны не с куплей и не с продажей, не с эксплуатацией и не с ремонтом. Труднее всего его утилизировать.
     Для того чтобы правильно распорядиться всего лишь одним ПК, не раскрыв при этом важной личной или корпоративной информации, не нарушив законов о сохранении окружающей среды и не уничтожив компонентов, допускающих повторное использование, придется потратить немало сил, времени и, конечно, денег.
     Возможные варианты: установить в другое место, продать, подарить, разобрать на запчасти, подготовить к утилизации.
     В России, согласно ст. 1 Закона «Об отходах производства и потребления» от 24.06.1998 г. № 89-ФЗ, к отходам относятся в числе прочего товары, потерявшие свои потребительские свойства. Все отходы, в соответствии со ст. 4.1 этого закона, подразделяются на пять классов опасности – от особо опасных (первый класс) до практически неопасных (пятый класс). К примеру, перегоревшие люминесцентные лампы относятся к отходам первого класса опасности, отработанные аккумуляторы – ко второму или третьему классу и т.?д. Списанная офисная техника, в соответствии с формулировкой закона, также является отходом и, как правило, относится к третьему классу опасности (умеренно опасные отходы).
     В соответствии с законом отходы для утилизации можно передавать лишь компаниям, имеющим соответствующую лицензию. Деятельность по сбору, использованию, обезвреживанию, транспортировке, размещению отходов 1 – 4 класса опасности подлежит лицензированию в соответствии со ст. 17 Федерального закона «О лицензировании отдельных видов деятельности» № 128-ФЗ от 08.08.2001 г.
     Согласно статье 8.2 КоАП РФ, «несоблюдение экологических и санитарно-эпидемиологических требований при сборе, накоплении, использовании, обезвреживании, транспортировании, размещении и ином обращении с отходами производства и потребления» влечет наложение штрафа: на должностных лиц – от 10 до 30 тыс. руб., на организации – от 100 до 250 тыс. руб. или административное приостановление деятельности на срок до 90 суток.
     Самой важной причиной, которую должно учитывать руководство предприятия при принятии решения об утилизации компьютерной техники, вышедшей из строя либо устаревшей, является забота об окружающей среде.
     Именно по данной причине практически каждое государство мира регламентирует правила и порядок утилизации различных видов отходов. И именно утилизация компьютерной и различной офисной техники является первостепенной задачей предприятий.
     Влажная уборка необходима для удаления поверхностных загрязнений, пыли и увлажнения воздуха в помещении. Для этого во время клининга используются специальные чистящие средства, тканевые салфетки, губки, швабры, моющие пылесосы. Регулярное поддержание чистоты в доме важно не только для красоты интерьера, но и для хорошего самочувствия и здоровья жильцов.
     Вентиляция – это организованный постоянный и контролируемый воздухообмен в нормативных количествах. Работает она за счёт разницы давлений снаружи и внутри жилища и обеспечивается за счет двух равноправных и одинаково важных процессов: притока свежего воздуха и удаления отработанного. Приток воздуха, в основном, обеспечивают окна и форточки. Отток – вентиляционные шахты.
     Естественное освещение – освещение помещений светом, исходящим от неба (прямым или отраженным), проникающим через световые проемы в наружных ограждающих конструкциях. Подразделяется на боковое, верхнее и комбинированное. Нормируемой характеристикой является коэффициент естественной освещенности.
     
      

Заключение
     
     
     Результатом выпускной квалификационной работы стало работающее приложение для переадресации сообщений в мессенджерах и социальных сетях.
     Разработанное приложение предоставляет пользователю следующие возможности:
     * переадресация сообщений;
     * переадресация голосовых сообщений;
     * переадресация фотографий;
     * переадресация ссылок;
     * переадресация файлов.
     В процессе изучения предметной области рассмотрена и описана классификация Telegram ботов. Также определены и освоены инструментальные средства разработки, при помощи которых была выполнена реализация выпускной квалификационной работы. Основной и наиболее важной программой для разработки ботов является API BotTelegramApi.
     В ходе выполнения выпускной квалификационной работы были решены следующие задачи:
     * изучена литература, посвященная платформе «Telegram»;
     * изучена литература, посвященная языку программирования Python;
     * изучена литература, посвященная компьютерным сетям и сетевым подключениям
     * разработано приложение на базе платформы «Telegram»;
     * протестировано разработанное приложение.
     В дальнейшем своё развитие бот получит за счёт подключения к нему других мессенджеров, расширения функционала, что сделает процесс пользования комфортнее.
     
