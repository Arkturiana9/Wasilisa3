Введение


В современном мире все больше компаний производят рекламу и предоставление услуг в сети Интернет. Данный способ является актуальным, быстрым и качественным по сравнению с устаревшими альтернативами.
Для инжиниринговой компании, специализирующейся на инженерных услугах или продуктах, один из основных маркетинговых каналов - это сайт компании, на котором могут быть представлены услуги компании, ее компетенции, информация о прошлых и текущих проектах. Таким образом, сайт компании играет ключевую роль в поиске и привлечении новых клиентов. 
Важным фактором успеха сайта является современный дизайн, отвечающий текущим трендам веб-разработки. Такой дизайн не только улучшает пользовательский опыт, делая навигацию по сайту интуитивно понятной и приятной, но и формирует положительное впечатление о компании у клиентов. Адаптивный и стильный интерфейс помогает формировать профессиональный имидж, что особенно важно для инжиниринговых компаний, стремящихся продемонстрировать свою технологичность и современность. Более того, современный дизайн играет важную роль в маркетинговой стратегии, становясь мощным инструментом для достижения бизнес-целей.
Создание сайта с современным дизайном поможет успешному развитию инжиниринговой компании.
Целью дипломной работы является разработка сайта инжиниринговой компании. 
Для достижения данной цели были поставлены следующие задачи:
рассмотреть теоретическую информацию о сайтах в сфере инжиниринга;
изучить литературу, посвященную разработке сайтов по принципу SPA;
составить требования к разработке;
описать архитектуру сайта;
проработать UX/UI-дизайн сайта;
описать функционал составления и обработки заявок пользователей;
провести планирование этапов работы и сроков их выполнения;
провести экономический расчет;
рассмотреть вопросы безопасности и экологичности работы.

1 Теоретические аспекты
      
      
1.1 Понятие веб-сайтов и их разработка
      
      
Понятие веб-сайта подразумевает под собой коллекцию страниц, связанных между собой какими-либо способами, размещенная в сети интернет или доступное по IP-адресу в рамках локальной сети. 
Данной коллекции должно быть присвоено доменное имя или IP-адрес в компьютерной сети, данный адрес необходим для успешного предоставления доступа пользователю к данному сайту. Каждая страница сайта содержит прямые ссылки, что позволяет пользователю быстро переходить от одной страницы веб-сайта к другой.
В сети Интернет сайт размещается с помощью удаленных машин – Веб-серверов. Данная машина хранит в памяти проект сайта, а также предоставляет пользователю доступ к сайту по доменному имени с помощью протокола HTTP.
Чтобы получить доступ к веб-сайту, необходимо набрать его доменное имя в адресной строке браузера, после чего браузер отобразит главную страницу сайта.
Ранее веб-сайты были представлены статическими документами, однако в настоящее время большинство из них представляют собой динамические и интерактивные элементы. Это связано с использованием различных технологий и языков программирования, которые позволяют создавать сайты с динамическим контентом и интерактивными функциями, улучшая взаимодействие пользователей с веб-сервером.
Доменное имя – ключевая составляющая Интернета. Данные имена предоставляют адреса веб-серверов, которые доступны в Интернете, понятные человеку.
Каждый компьютер подключен к Интернету и может быть доступен через общедоступный IP-адрес, который состоит из 32-битного адреса IPv4. Такие адреса обычно задаются в виде четырех чисел от 0 до 255, разделенных двумя точками или 128-битных для IPv6.
Доменное имя имеет простую структуру, состоящую из нескольких частей разделенных точками. Каждая из этих частей обеспечивает конкретную информацию о доменном имени.
TLD – Корневой домен, сообщающий о наиболее технологической информации. Корневой домен предоставляет пользователям самую важную информацию о службе, доступную по доменному имени. Общие корневые домены, такие как: .com, .org, .net, не требуют от веб-служб соблюдения строгих требований, но некоторые корневые домены придерживаются и более строгой политики. Например, локальные корневые домены, такие как .us, .fr или .sh, могут потребовать, чтобы услуги по предоставлению адреса были предоставлены на территории страны или физически размещены на территории страны.
Домены – это то, что следует за корневыми доменами. Домен может занимать какое угодно место, от одного знака до целого предложения. Домен сразу за корневым доменом также называют: доменом второго уровня. Доменное имя может включать в себя неограниченное количество доменов, при этом нет никаких ограничений только на 3 домена в составе доменного имени. Например, www.inf.ed.ac.uk – это правильное доменное имя. Тот, кто контролирует «верхнюю» часть доменного имени, например, mozilla.org, тот может создавать доменные имена более «низких» уровней, которые часто называют «поддоменами», например, Developer.mozilla.org.
Каждому веб-сайту назначается свое уникальное доменное имя, которое служит идентификаторами для сайта в Интернете, но существуют и альтернативные варианты, например, один сайт может иметь несколько доменных имен или несколько сайтов могут использовать одно общее доменное имя. Крупные веб-порталы и подобные им сайты могут применять несколько доменов для разделения различных видов предоставляемых услуг. Некоторые веб-сайты также могут использовать отдельные домены для разных стран или языков. Объединение нескольких сайтов под одним доменом часто встречается в случае у бесплатных хостингов. Для идентификации сайтов в веб-адресах могут использоваться тильда, имя сайта или доменное имя третьего уровня. Серверы, предназначенные для хранения веб-сайтов, называются веб-серверами, а услуга размещения - веб-хостингом. Изначально каждому сайту нужен был собственный веб-сервер, однако с развитием технологий стало возможным размещение нескольких сайтов на одном сервере путем использования виртуального хостинга. В настоящее время на одном сервере может быть размещено множество сайтов, каждый из которых имеет уникальный веб-адрес. Один и тот же сайт также может быть доступен по разным адресам и храниться на разных серверах с помощью копии оригинального сайта, которую называют зеркалом. 
Разработка сайта – процесс, требующий тщательного планирования, а также последующей поддержки в течение всего жизненного цикла продукта. Этапы создания и алгоритм разработки помогают разработчикам организовать работу и достичь желаемых результатов. При соблюдении всех этапов и уделяя внимание каждому из них, можно создать успешный и привлекательный сайт, который соответствует потребностям и ожиданиям пользователей.
      
      
1.2 Классификация веб-сайтов


Классификации веб-сайтов, основанная на доступности сервисов по природе содержимого:
В зависимости от доступности серверов веб-сайты можно разделить на три категории: открытые, полуоткрытые и закрытые. 
Открытые веб-сайты предоставляют неограниченный доступ ко всем сервисам без каких-либо требований предоставляя возможности без авторизации или специальных разрешений.
Что касается полуоткрытых веб-сайтов, чтобы получить к ним доступ нужно пройти регистрацию, но обычно она бесплатная. Одним из преимуществ полуоткрытых веб-сайтов считается возможность создания сообщества, где пользователи могут обмениваться информацией, делиться опытом, находить новых друзей или партнеров по интересам. Подобные сайты предлагают комбинацию приватности и доступности, позволяя пользователям получить определенные преимущества, связанные с регистрацией, при этом оставаясь открытыми для широкой аудитории.
Частные веб-сайты предназначены для небольшого круга лиц и могут быть как сервисными веб-сайтами организаций, так и личными веб-сайтами отдельных лиц. Новые пользователи могут получить доступ к этим веб-сайтам по приглашениям.
Такие сайты обеспечивают защиту конфиденциальной информации и данных с помощью различных методов аутентификации и шифрования.
Веб-сайты могут быть классифицированы по типу содержимого: они делятся на статические и динамические. Статические сайты содержат заранее подготовленное содержимое, которое пользователь получает без изменений с сервера. Динамические сайты, напротив, создают содержимое на основе данных из различных источников при помощи специальных программ.
Ниже приведены несколько распространенных подходов к классификации веб-сайтов.
По физическому размещению:
Открытые сайты, доступные через общую сеть.
Локальные сайты, ограниченные доступом только внутри локальной сети, такие как корпоративные сайты организаций или сайты частных лиц, доступные только в пределах провайдерской сети.
По цели создания сайта:
Интернет-магазин;
Сайт-визитка;
Промо-сайт;
Социальная сеть;
Блог;
Лэндинг.
Интернет-магазин - это сайт, позволяющий покупать товары онлайн с помощью оплаты банковской картой, системой быстрых платежей или другой  платежной системой. Интернет-магазин позволяет увеличить число клиентов, предлагая им возможность дистанционного заказа или доставки товара.
Сайт-визитка - это несколько страниц, в которых могут содержаться сведения о компании, прейскурант, информация о товарах, каких-либо услугах, контактные данные. На сайте-визитке не предполагается активного взаимодействия клиента с сайтом.
Промо-сайт — маркетинговый инструмент, представляющий собой веб-страницу, предназначенную для одной определенной задачи. Это веб-сайт, создающийся обычно отдельно от корпоративного ресурса.
Социальная сеть - онлайн-платформа, которая используется для общения, знакомств, создания социальных отношений между людьми, которые имеют схожие интересы или офлайн-связи, а также для развлечения (музыка, фильмы) и работы.
Блог - веб-сайт, основное содержимое которого это регулярно добавляемые пользователем записи, содержащие текст, изображения или мультимедиа. С помощью блога рядовые пользователи могут делиться своим опытом с аудиторией.
Лэндинг (Целевая страница) — веб-страница, основной задачей которой является сбор контактных данных целевой аудитории. Целевая страница используется для усиления эффективности рекламы, увеличения аудитории. Целевая страница обычно содержит информацию о товаре или услуге.


1.3 Классификация баз данных


Существует множество различных типов баз данных. Выбор наилучшей базы данных зависит от того, как намереваются работать с данными. Некоторые наиболее распространенные базы данных описаны ниже.
Реляционные базы данных. Данные в реляционной базе организованы в виде таблиц, состоящих из столбцов и строк, причем таблицы могут быть связаны друг с другом по ключевым полям. Реляционная СУБД обеспечивает быстрый и эффективный доступ к структурированной информации. Наиболее известными СУБД являются Open Source проекты PostgreSQL, MySQL и SQLite, а также проприетарные решения Oracle, Microsoft SQL Server и IBM Db2Relational. Стоит заметить, что реляционные базы бывают с хранением данных по строкам (PostgreSQL) и по столбцам/колонкам (ClickHouse, Vertica). Колоночные/столбцовые базы лучше подходят для аналитики, в то время как ориентация на строки лучше подходит для транзакционных нагрузок.
     Key-value (ключ значение) базы данных. Тип баз данных Key-value предназначен для осуществления быстрых, почти мгновенных запросов для таких задач как кэш, отображение баланса и т.д.. Высокая скорость осуществляется за счет хранения данных по принципу ключ-значение, и в большинстве случаев благодаря работе в оперативной памяти. Словари содержат коллекцию объектов или записей, а объекты содержат множество различных полей, каждое из которых содержит данные. Записи хранятся и извлекаются с использованием ключа, который однозначно идентифицирует запись и используется для быстрого поиска данных. Основным применением является ускорение отображения данных для конечных пользователей и снижение нагрузок, в том числе I/O на инфраструктуру организаций. Наиболее известными и широко используемыми Key-Value решениями являются Redis и Memcached.
     Документо-ориентированные базы данных. Если нужно хранить много файлов/документов, однако нет возможности исчерпывающе описать структуру хранения, иерархию и связи, может подойти одна из документо-ориентированных баз данных. Дополнительным преимуществом являются широкие возможности для масштабирования. Документо-ориентированные базы данных созданы для хранения иерархических структур данных (документов). Основой документо-ориентированных СУБД являются документные хранилища, имеющие структуру дерева или леса. Деревья начинаются с корневого узла и могут содержать несколько внутренних и листовых узлов. Листовые узлы содержат данные, которые при добавлении документа заносятся в индексы, это дает возможность даже при достаточно сложной структуре находить путь к искомым данным. В отличие от хранилищ типа ключ-значение, выборка по запросу к документному хранилищу может содержать части большого количества документов без полной загрузки этих документов в оперативную память. Наиболее популярной документо-ориентированной базой данных на текущий момент является MongoDB.
     Базы данных временных рядов. Если нужно хранить упорядоченные по времени данные с временными метками, такие как метрики от инфраструктуры или данные датчиков, может быть полезно использовать одну из баз данных временных рядов. Общие характеристики баз данных временных рядов:
Данные временных рядов всегда собираются на протяжении определенного периода времени;
Данные из рабочих нагрузок являются новыми и записываются как вставки. Уже существующие данные не обновляются путем замены;
Когда данные записываются, они автоматически назначаются последнему интервалу времени.
Базы даных временных рядов часто используются для осуществления мониторинга различных метрик (будь то загрузка CPU, или показатели работы какого-либо датчика).
Объектно-ориентированные базы данных представляют собой базы данных, где информация представлена в виде объектов, как в объектно-ориентированных языках программирования. Объектно-ориентированные базы данных появились как способ нативной коммуникации кода написанного с использованием объектно-ориентированных языков с базой данных. Объектно-ориентированные базы данных обладают следующими преимуществами:
Нет проблемы несоответствия модели данных в бд и приложении, так как в БД они сохраняются в том же виде;
Не нужно отдельно поддерживать модель данных на стороне базы данных;
Все объекты на уровне источника строго типизированы.
Наиболее известной объектно-ориентированной СУБД является Db4o, но есть и другие.
Это лишь некоторые из десятков типов баз данных, используемых в настоящее время. Другие, менее распространенные базы данных, предназначены для очень специфических научных, финансовых и иных задач.

2 Анализ предметной области


2.1 Описание функционала сайта инжиниринговой компании


Основная бизнес-цель сайта инжиниринговой компании - это привлечение новых клиентов. Ключевой элемент такого сайта - это форма обратной связи, позволяющая потенциальным клиентам выйти на контакт с менеджером по продажам. Клиент, оставляя заявку на обратную связь, должен заполнить о себе ряд сведений:
Название компании, представителем которой является пользователь;
ФИО пользователя;
Должность в компании;
Телефон;
Email.
На сайте есть группа страниц, закрытая авторизацией, предназначенная только для сотрудников компании, которая включает в себя разделы “Звонки”, “Поиск”, “Не удалось дозвониться”, “Архив”.
Раздел “Звонки” позволяет менеджерам по продажам осуществлять звонки клиентам, оставившим заявки на сайте. В этом разделе отображается карточка клиента для обзвона, со всей информацией, что он указал в заявке. Для менеджера доступны несколько кнопок:
“Дозвонился” / “Нет ответа” - после обзвона менеджер фиксирует результат;
“Пропустить”, чтобы пропустить этого клиента и увидеть следующую карточку клиента.
Раздел “Архив” позволяет просмотреть список клиентов, с которыми обзвон уже состоялся.
Раздел “Не удалось связаться” позволяет посмотреть клиентов, до которых не смогли дозвониться. 
Раздел “Поиск” позволяет найти любого клиента в базе данных с помощью фильтров:
поиск по фрагменту ФИО клиента;
поиск по менеджеру, который обслуживал клиента.
С помощью разделов сайта “Услуги” и “Участие в проектах” возможно предоставление информации об услугах и проектах, что может привлечь новых клиентов. Помимо этого, публикация материалов об успешных проектах и экспертизе специалистов может способствовать установлению доверия к компании среди потенциальных клиентов и партнеров.
Раздел “О компании” позволяет информировать о новостях компании, текущих событиях и достижениях, поддерживать связь с существующими клиентами и партнерами.


2.2 Требования к разработке и программному обеспечению


Основные требования к разрабатываемому web-сайту:
дизайн должен быть простым и ненавязчивым;
пользовательский интерфейс должен быть удобным;
навигация по сайту должна быть интуитивно понятной;
основные разделы сайта находятся в быстром доступе, то есть требуют минимального количества пользовательских действий;
контент должен быть понятным.
При разработке web-сайта используются преимущественно неброские цвета, которые не утомляют глаз. Дизайн web-сайта должен быть лаконичным и стильным.
Основные разделы web-сайта должны быть доступны с первой страницы. На первой странице не должно быть большого объема текстовой информации. Макеты страниц не должны быть:
перегружены информацией;
графика не должна мешать воспринимать информацию;
текст должен легко читаться и не сливаться с фоном.
     Также web-сайт должен быть удобен при всех размерах разрешения экрана.
Для корректной работы web-сайта требуется перечисленное ниже программное обеспечение.
Сайт должен обеспечивать корректное отображение данных в следующих браузерах:
GoogleChrome (версия 104.0.5112.81 и выше);
Yandex (версия 22.1.0.2510 и выше);
Microsoft Edge (версия 105.0.1343.50 и выше);
Opera (версия 92.0.4561.33 и выше).
Требования к аппаратному обеспечению сервера хостинга: 
процессор семейства x86_64;
оперативной памяти не менее 2 Gb;
свободное место на диске не менее 1 Gb.
Требования к программному обеспечению сервера хостинга:
операционная система Windows / Linux;
cервер Apache;
язык PHP не ниже 7-ой версии.
При соблюдении указанных требований к программному обеспечению, сайт будет исправно функционировать.


2.3 Структура и дизайн сайта


Навигация сайта отражает логическую структуру, в которой все страницы и разделы сайта расположены и связаны между собой. Прежде чем запустить проект, необходимо предусмотреть его логическую структуру, так как без нее может получиться несвязный набор документов, непонятный ни поисковым роботам, ни людям. Структура сайта должна быть выбрана в соответствии с его назначением на этапе проектирования [2].
Внешняя структура сайта представляет собой макет, на котором блоками отмечены различные элементы страницы. Внутренняя структура включает в себя разделы сайта и их взаимосвязи с отдельными страницами.
На рисунке 1 показан макет страницы, он включает в себя: шапку сайта, вертикальное меню и контент.


Рисунок 1 – Макет страницы
     
На рисунке 2 показана структура меню сайта, которая обеспечивает гостю легкий доступ web-сайту. Все разделы расположены таким образом, чтобы пользователь при посещении сайта сразу находил нужную ему информацию.
     

Рисунок 2 – Макет меню сайта

      На рисунке 3 представлен макет страницы админ-панели, поскольку менеджер, используя админ-панель находится в веб приложении, для практичности было принято решение использовать макет с вертикальным меню – сайд-баром.
      

Рисунок 3 – Макет страницы для админ-панели

     На рисунке 4 показана структура меню админ-панели, которая обеспечивает менеджеру легкий доступ в использовании панели.


Рисунок 4 – Макет меню админ панели
      
Также с помощью инструментов Figma для админ-панели были разработаны макеты некоторых веб-страниц. На рисунке 5 представлен макет страницы «Звонки» для админ-панели.


Рисунок 5 – Макет страницы «Звонки»

На рисунке 6 представлен макет страницы «Архив» для админ-панели, на которой будет представлена информация о всех обработанных заявках.


Рисунок 6 – Макет страницы «Архив»

На рисунке 7 представлен макет страницы «Поиск» в состоянии выбора найденной заявки.


Рисунок 7 – Макет страницы «Поиск»
Также для сайта была выбрана следующая цветовая палитра, представленная рисунке 8.


Рисунок 8 – Цветовая схема сайта

      Таким образом были созданы макеты меню и страниц сайта, а также админ панели.


2.4 Описание средств реализации

      
     HTML – это язык, используемый для описания структуры web-страниц. Он позволяет пользователям просматривать созданные на нем сайты только через браузеры, установленные на их компьютерах. Большинство веб-страниц построены на базе HTML.
     HTML-документы состоят из текста, а также специальных инструкций, называемых тегами, которые позволяют форматировать текст, а также добавлять мультимедийные файлы, гипертекстовые ссылки, таблицы, формы ввода и другие элементы [3].
     CSS (каскадные таблицы стилей) – технология для управления внешним видом элементов web-страницы, предоставляющая гораздо больше возможностей, чем HTML. С помощью CSS можно легко изменять параметры страницы, например, убрать подчеркивание у ссылок, сделать пунктирные границы у таблиц или изменить курсор «мыши». В настоящее время CSS используется практически на всех сайтах. Она представляет собой революцию в мире web-дизайна, давая верстальщикам возможность управлять внешним видом страницы и сделать ее более привлекательной [4].
     JavaScript является языком программирования, позволяющим создавать динамически обновляемый контент, управлять мультимедиа, анимировать изображения и выполнять многое другое с помощью нескольких строк кода [5].
     Visual Studio Code – это редактор исходного кода с многоязычным интерфейсом пользователя, поддерживающий различные языки программирования, а также обеспечивающий подсветку синтаксиса, IntelliSense, рефакторинг, отладку, навигацию по коду, поддержку Git и другие функции. Некоторые возможности Visual Studio Code можно использовать через графический интерфейс, но большинство из них доступно только через палитру команд или JSON-файлы (например, пользовательские настройки) [6]. 
     Git – это система управления версиями с открытым исходным кодом, которая поддерживает совместную работу над проектами путем использования распределенной системы управления версиями файлов, хранящихся в репозиториях. По сути, Git позволяет совмещать в один репозиторий потоки работ, проделанные несколькими участниками в течение определенного промежутка времени.
     GitHub является веб-сайтом, который предоставляет платформу для хранения репозиториев Git, таких как Microsoft Learn. Он предоставляет основной репозиторий для всех проектов, из которого участники могут копировать свои работы и посылать изменения обратно [7].
     TypeScript – это расширенная версия языка JavaScript, изначально созданная в Microsoft для разработки крупных приложений. TypeScript помогает избавиться от главной проблемы JavaScript: отсутствия динамической типизации и целого спектра проблем, вытекающих из данной проблемы.
     React – JavaScript-библиотека, предназначенная для создания декларативных пользовательских интерфейсов. Она позволяет создавать сложные пользовательские интерфейсы, основанные на маленьких изолированных частях кода, известных как «компоненты».
     React предлагает два различных синтаксиса для создания компонентов: классовый и функциональный. Хотя использование классового синтаксиса не является основным, он все же может быть полезен для более сложных компонентов [8].
     React функциональный компонент представляет собой JavaScript-функцию, которая принимает на вход объект с данными (props) и возвращает описание интерфейса для отрисовки компонента.
     JSX – это язык шаблонов для элементов React, поэтому он служит основой
для любой разметки, которую React будет отображать в приложении. Поскольку JSX позволяет использовать JavaScript в разметке, можно воспользоваться преимуществами функций и методов JavaScript, включая сопоставление массива и сокращенное вычисление для условных конструкций. JSX имеет более простой синтаксис, чем JavaScript, поэтому поддержка и отладка кода требуют меньше времени.
     React.js предоставляет возможности для экономии времени, улучшения читаемости кода и переиспользования больших блоков, что позволяет существенно снизить расходы на разработку, поддержку, обновление и отладку приложений, а также ускорить их разработку.
     React Router DOM – это модуль узла, предназначенный для реализации маршрутизации в веб-приложениях на основе React. Он позволяет создавать маршруты для одностраничных приложений [9].
     React MUI – это библиотека пользовательского интерфейса, которая предоставляет полностью загруженные компоненты, привнося нашу собственную систему проектирования в готовые к производству компоненты. MUI является гибкой и настраиваемой библиотекой компонентов React, предоставляющей пользователю полноценную дизайн-систему, основанную на Material Design от Google [10].
     Axios – это программное обеспечение, которое предоставляет современный способ отправки HTTP-запросов и обработки их ответов с использованием обратных вызовов JavaScript. Axios поддерживается в браузерах и платформах Node.js и JavaScript [11].
     PostgreSQL — это мощная, объектно-реляционная система управления базами данных (СУБД) с открытым исходным кодом. Она известна своей надежностью, гибкостью и совместимостью со стандартом SQL. PostgreSQL используется для хранения и управления данными, предоставляя разработчикам и администраторам баз данных множество функций для работы с данными. Благодаря своей надежности, гибкости и множеству функций, PostgreSQL является популярным выбором для разработки и эксплуатации баз данных в различных приложениях, от веб-приложений до корпоративных систем и аналитических платформ.

3 Разработка сайта инжиниринговой компании


3.1 Проектирование базы данных


Для реализации функционала админ-панели веб-сайта необходимо спроектировать базу данных. 
Основные сущности предметной области описаны ниже.
Заявка, оставленная клиентом, содержащая основную информацию, необходимую для предоставления обратной связи:
Полное имя клиента (включает в себя фамилию, имя, отчество);
Название компании;
Номер телефона;
Должность в компании;
Email.
      Менеджер по работе с клиентами:
Полное имя менеджера;
Номер телефона (используется для авторизации);
Пароль (используется для авторизации).
      Звонок -  запись в базе, отражающая результат работы менеджера:
Менеджер, осуществлявший звонок;
Клиент, с которым пытались связаться;
Дата и время осуществления звонка;
Результат звонка: удалось связаться или нет.
Схема базы данных изображена на рисунке 9.

Рисунок 9 – Схема базы данных

Первичным ключом в таблице Managers и Clients является столбец id, с помощью него обеспечивается связь с таблицей Calls. Это позволяет как находить звонки, которые осуществлял определенный менеджер, так и находить заявку клиента, связанную с звонком. 
Связь между таблицами Managers и Calls описывается отношением «один ко многим», это означает, что менеджер может совершить множество звонков, однако каждая запись звонка в бд ссылается лишь на 1 менеджера. Такой же тип отношений у таблиц Client и Calls. 
На листинге 1 представлен код контроллера сервера.

На рисунке 10 представлен графический инструмент для администрирования баз данных pgAdmin 4, который позволяет, создавать базы данных, управлять ими, а также просматривать статистику их загруженности. 


Рисунок 10 – инструмент pgAdmin4 




3.2 Верстка страниц сайта


      На рисунке 11 представлена главная страница сайта инжиниринговой компании. Цель данной – привлечение будущих клиентов компании, увеличение узнаваемости на рынке.

 
Рисунок 11 – Главная страница

При нажатии кнопки «Свяжитесь с нами» открывается страница с формой обратной связи. На рисунке 12 представлена форма обратной связи для пользователя. Модель заявки содержит 5 полей, необходимых менеджеру для последующей обработки данного запроса: 
компания: текстовое поле;
ФИО: имя пользователя, также текстовое поле;
должность: текстовое поле;
телефона: номер телефона обращающегося, текстовое поле с маской под формат номера телефона;
электронная почта: текстовое поле.
Данная форма при отправке сохраняет данные в базу данных, для дальнейшей обработки заявки менеджером.
      
 
Рисунок 12 – Форма обратной связи

      На рисунке 13 представлен пример информационной страницы. На данном скрине изображена страница «Услуги», описывающая список услуг предоставляемых инжиниринговой компанией.
      
 
Рисунок 13 – Страница «Услуги»
На рисунке 14 представлена страница «Партнеры».


Рисунок 14 – Страница «Партнеры»

На рисунке 15 продемонстрирована страница «Инструментарий». 


Рисунок 15 – Страница «Инструментарий»

На рисунке 16 представлена страница «Контакты».


Рисунок 16 – Страница «Контакты»

      Таким образом пользователю, зашедшему на сайт предоставлены возможности; просмотр 6 информационных страниц, для ознакомления с компанией и ее возможностями, а также форма обратной связи, для предоставления услуги обработки запроса менеджером.
      
      
3.3 Создание админ-панели и авторизации


Для предоставления менеджеру доступа к журналу заявок было необходимо реализовать авторизацию в админ-панели. На рисунке 17 представлена форма авторизации сайта.


Рисунок 17 – Форма авторизации

      Авторизация на сайте производится посредством JWT-токена, где время жизненого цикла рефреш токена составляет 12 часов.
На листинге 3 представлен код, отвечающий за обработку логики формы авторизации.

      
      Верстка для компонента формы авторизации представлена на листинге 4.


      После авторизации пользователь с ролью «Менеджер» попадает на вкладку со списком заявок ожидающих обработки. На рисунке 18 изображена страница с представленной в ней карточкой заявки. Также пользователь имеет возможность осуществлять поиск по заявкам.


Рисунок 18 – Страница заявок в ожидании обработки

На листинге 5 представлен код компонента, отвечающего за обработку логики раздела админ-панели «Звонки».


Также на вкладке «Поиск» представленной на рисунке 19, можно найти конкретную заявку, по имени клиента или по имени обрабатывающего его менеджера.


Рисунок 19 – Страница «Поиск»

На листинге 7 представлен код компонента, отвечающего за обработку логики раздела админ-панели «Поиск».

После введения значения в поисковое поле «Фрагмент имени клиента», на странице происходит фильтрация по соответствующему полю. На рисунке 20 представлен поиск по текстовому полю «Фрагмент имени клиента».


Рисунок 20 – Поиск по фрагменту именени клиента

Также поиск можно осуществлять по статусу заявки и по имени менеджера, который обрабатывал заявку. Данные поля предоставляют возможность выбора одного из нескольких домтупных вариантов. На рисунке 21 представлен поиск по полю «Статус» со значением «Нет ответа».


Рисунок 21 – Поиск по статусу «Нет ответа»

После обнаружения необходимой заявки, пользователю предоставляется возможность посмотреть более подробную информацию, нажав на имя клиента, а также в случае необходимости сменить статус заявки. Данный функционал представлен на рисунке 22.


Рисунок 22 – Просмотр данных и изменение статуса заявки

      После того, как менеджер осуществит звонок, ему необходимо изменить статус заявки, в зависимости от успешности звонка. 
      Если менеджер успешно дозвонился до клиента, необходимо проставить стату «Дозвонился», после чего статус заявки изменится, а саму заявку можно увидеть на вкладке «Архив».
      В случае не успешного звонка необходимо изменить статус на «Нет ответа», после чего заявку можно будет просмотреть на вкладке «Не удалось связаться», а затем, через 3 часа данная заявка, снова переместится в список заявок доступных для звонка, что позволит менеджеру совершить еще одну попытку связаться с клиентом.
      На рисунке 23 представлен архив, в который попадают обработанные заявки.


Рисунок 23 – Архив 

На листинге 9 представлен код компонента, отвечающего за обработку логики раздела админ-панели «Архив».

Верстка для компонента «Архив» админ-панели представлена на листинге 10.


Таким образом был разработан функционал взаимодействия менеджера с оставленной заявкой.


3.4 Понятия и проведение тестирования


     Тестирование программного обеспечения — это проверка соответствия реальных и ожидаемых результатов поведения программы, проводимая на конечном наборе тестов, выбранном определённым образом.
     Цель тестирования — проверка соответствия ПО предъявляемым требованиям, обеспечение уверенности в качестве ПО, поиск очевидных ошибок в программном обеспечении, которые должны быть выявлены до того, как их обнаружат пользователи программы.
     К общим целям проведения тестирования относятся:
     –	проверка соответствия требованиям;
     –	обнаружение проблем на более ранних этапах разработки и предотвращения повышения стоимости продукта;
     –	обнаружение вариантов использования, которые не были предусмотрены при разработке. А также взгляд на продукт со стороны пользователя;
     –	повышение лояльности к компании и продукту, т.к. любой обнаруженный дефект негативно влияет на доверие пользователей.
     Качественное тестирование возможно при реализации следующих этапов:
     –	анализ продукта
     –	работа с требованиями;
     –	разработка стратегии тестирования и планирование процедур контроля качества;
     –	создание тестовой документации;
     –	тестирование прототипа;
     –	основное тестирование;
     –	стабилизация;
     –	эксплуатация.
     Дефект (bug) – отклонение фактического результата от ожидаемого.
     Отчёт о дефекте (bug report) – документ, который содержит отчет о любом недостатке в компоненте или системе, который потенциально может привести компонент или систему к невозможности выполнить требуемую функцию.
     Классификация по доступу к коду и архитектуре:
     –	Тестирование белого ящика – метод тестирования ПО, который предполагает полный доступ к коду проекта.
     –	Тестирование серого ящика – метод тестирования ПО, который предполагает частичный доступ к коду проекта (комбинация White Box и Black Box методов).
     –	Тестирование чёрного ящика – метод тестирования ПО, который не предполагает доступа (полного или частичного) к системе. Основывается на работе исключительно с внешним интерфейсом тестируемой системы.
     Классификация по уровню детализации приложения:
     –	Модульное тестирование – проводится для тестирования какого-либо одного логически выделенного и изолированного элемента (модуля) системы в коде. Проводится самими разработчиками, так как предполагает полный доступ к коду.
     –	Интеграционное тестирование – тестирование, направленное на проверку корректности взаимодействия нескольких модулей, объединенных в единое целое.
     –	Системное тестирование – процесс тестирования системы, на котором проводится не только функциональное тестирование, но и оценка характеристик качества системы – ее устойчивости, надежности, безопасности и производительности.
     –	Приёмочное тестирование – проверяет соответствие системы потребностям, требованиям и бизнес-процессам пользователя.
     Пирамида тестирования, также именуемая уровнями тестирования, это группировка тестов по уровню детализации и их назначению. Эту абстракцию придумал Майк Кон и описал в книге «Scrum: гибкая разработка ПО» (Succeeding With Agile. Software Development Using Scrum).
     Пирамиду разбивают на 4 уровня (снизу-вверх), например, по ISTQB:
     –	модульное тестирование (юнит);
     –	интеграционное тестирование;
     –	системное тестирования;
     –	приемочное тестирование.
     Но можно встретить варианты, где 3 уровня. В этой модели объединяют интеграционный и системный уровни:
–	модульное тестирование (юнит);
–	интеграционное тестирование (включает в себя системное);
–	приемочное тестирование.
     Можно сказать, что разработка ПО - это движение по пирамиде снизу-вверх. 
После ознакомления с теорией тестирования было принято решение, произвести тестирование кросс-браузерности, а также тестирование верстки сайта при разных параметрах масштабирования страницы.
В ходе тестирования, во всех браузерах не было обнаружено ни одной ошибки или неправильного отображения страниц. Во всех браузерах страницы отображаются одинаково. Форма отправки заявки, так же корректно работает и отправляет данные со всех браузеров. Гиперссылки работают корректно и без ошибок. Тестирование позволило убедиться в исправной работе сайта во всех браузерах. Была произведена проверка на браузере Google Chrome. На рисунке 24, изображена страница в браузере Google Chrome.


Рисунок 24 – Главная страница в браузере Google Chrome
На рисунке 25 представлена главная страница в браузере Safari.

Рисунок 25 – Главная страница в браузере Safari

На рисунке 26 представлена главная страница в браузере Firefox.


Рисунок 26 – Главная страница в браузере Firefox

На рисунке 27 представлена главная страница в браузере Opera.

Рисунок 27 – Главная страница в браузере Opera

На рисунке 28 представлена главная страница в браузере Yandex.

Рисунок 28 – Главная страница в браузере Yandex

На рисунке 29 представлена главная страница в браузере MicrosoftEdge.

Рисунок 29 – Главная страница в браузере MicrosoftEdge

Также в ходе тестирования была проверена валидация формы отправки заявки на заполнение корректного адреса почты. На рисунке 30 представлено поведение формы обратной связи при вводе некорректного адреса электронной почты. 

Рисунок 30 – Поведение формы при некорректном вводе адреса
Данное сообщение об ошибке исчезает после ввода корректных данных. На рисунке 31 представлена форма с корректным адресом электронной почты.


Рисунок 31 – Форма после введения корректного адреса электронной почты

Далее производилось тестирование сайта на масштабируемость на примере страницы «Услуги». На рисунке 32 представлена страница «Услуги» при масштабе 150%.


Рисунок 32 – Поведение страницы при масштабе 150%
На рисунке 33 представлена страница с масштабом 50%.

Рисунок 33 – Поведение страницы при масштабе 50%

4 Экономическое обоснование работы


4.1 Определение общей продолжительности работ


Экономические расчеты, приведенные ниже, были произведены с использованием программы управления проектами «ProjectLibre». 
ProjectLibre – кроссплатформенное программное обеспечение для управления проектами. Программа включает все нужные функции: диаграмма Гaнтa, сетевой график, распределение ресурсов, доклады.
Для разработки дипломной работы этап планирования является важным этапом. Во время этого этапа планируются задачи и время их выполнения. На рисунке 34 изображена диаграмма Ганта и этапы проекта.
      

      Рисунок 34 – Диаграмма Ганта
      
На рисунке 35 можно увидеть сетевой график проекта, иллюстрирующий этапы проекта, их последовательность и длительность каждого этапа.


      Рисунок 35 – Сетевой график
      
     В ProjectLibre существуют несколько видов ресурсов:
      трудовые ресурсы. К ним относятся разработчик и другие специалисты, которые участвуют в создании каких-либо материальных и нематериальных благ;
      материальные ресурсы. К материальным относятся: информационные ресурсы интернета, энергоресурсы, ресурсы связи.
     На рисунке 36 изображены ресурсы проекта.
     

Рисунок 36 – Ресурсы проекта
     
     «Иерархическая структура работ» предназначена для задания и отображения структуры работ.
     На рисунке 37 изображена иерархическая структура работ.
     

   
Рисунок 37 – Иерархическая структура работ

На рисунке 38 изображено использование ресурсов в проекте. 



Рисунок 38 – Использование ресурсов в проекте




5.1 Охрана труда


     Персональные компьютеры в современном мире используются практически во всех организациях. Применение работниками данного оборудования оказывает негативное влияние на их здоровье и может привести к чрезвычайным ситуациям или несчастным случаям на производстве. Для избегания подобных проблем, пользователям необходимо соблюдать технику безопасности.
     Работник, использующий в своей трудовой деятельности компьютер, может испытывать на себе влияние следующих негативных факторов:
      электромагнитное и инфракрасное излучения;
      шум работающего компьютера;
      риск поражения электрическим током в случае замыкания;
      возможность возникновения возгорания.
     Постоянная работа за компьютером вызывает ухудшение здоровья работника, в частности:
      нагрузка на зрение приводит к покраснениям глаз, возникновению «синдрома сухого глаза»;
      несоблюдение нормативов организации рабочего места может привести к искривлению позвоночника, заболеваниям суставов и болям различного характера;
      длительная концентрация внимания на экране вызывает переутомление.
     Порядок организации работы с компьютером определяется СанПиН 2.2.2/2.4.1340-03, введенными в действие с 30.06.2003.
     Приведем некоторые требования, предъявляемые СанПиН к рабочему месту пользователя ПК:
      расстояние от монитора до глаз должно составлять от 600 до 700 мм, но не меньше 500;
      стул работника должен быть регулируемым по высоте и обеспечивать возможность поворота и изменения позы во время работы;
      высота стола – от 680 до 800 мм;
      поверхность стола должна позволять оптимально разместить на ней все необходимое для работы.
В помещении обязательно должно иметься как естественное, так и искусственное освещение. Расположение рабочих мест за мониторами для любых пользователей не допускается в подвальных помещениях. Естественное освещение обеспечивается через оконные проемы с коэффициентом естественного освещения КЕО не ниже 1,2% в зонах с устойчивым снежным покровом и не ниже 1,5% на остальной территории. Световой поток из оконного проема должен падать на рабочее место оператора с левой стороны. Искусственное освещение в помещениях эксплуатации компьютеров должно осуществляться системой общего равномерного освещения. Освещенность на поверхности стола в зоне размещения документа должна быть 300-500 лк. Допускается установка светильников местного освещения для подсветки документов. Местное освещение не должно создавать бликов на поверхности экрана и увеличивать освещенность экрана более 300 лк. 
     С целью избежать переутомления работника СанПиН рекомендуют делать перерывы длительностью от 10 до 15 минут после 45 – 60 минут работы. Во время перерыва работнику следует выполнять гимнастику для глаз и физические упражнения, предусмотренные приложениями 8 – 10 к СанПиН.
     Соблюдение правил работы за компьютером способствует снижению негативного воздействия компьютера на здоровье пользователя. Главная задача работодателя – постоянно доводить до сведения своих сотрудников информацию о последствиях несоблюдения вышеизложенных требований и своими распоряжениями организовывать обязательные перерывы в работе.
     Рассмотрим основные правила безопасности при работе с компьютером.
до начала работы: проверить исправность электропроводки, розеток и вилок компьютера, заземление ПК;
во время работы: необходимо аккуратно обращаться с проводами;
запрещается работать с неисправным компьютером;
      нельзя заниматься очисткой компьютера, когда он находится под напряжением;
      недопустимо самостоятельно проводить ремонт оборудования при отсутствии специальных навыков;
      нельзя располагать рядом с компьютером жидкости, а также работать с мокрыми руками;
не допускается курение и употребление пищи в непосредственной близости с ПК и др;
в аварийных ситуациях: при любых неполадках необходимо сразу отсоединить ПК от сети;
      в случае обнаружения оголенного провода незамедлительно оповестить всех работников и исключить контакт с проводом;
      в случае возникновения пожара принять меры по его тушению с использованием огнетушителей (работники должны знать, где они находятся);
в случае поражения человека током оказать первую помощь и вызвать скорую медицинскую помощь;
по окончанию работы: выключить компьютер;
      желательно провести влажную уборку рабочего места;
      отключить электропитание.
Если необходимо ликвидировать возгорание электропроводки, необходимо использовать все возможности для обесточивания сети. Обычно напряжение потребительской сети не превышает 380 Вольт. Если обесточивание по каким-то причинам невозможно — следует использовать порошковый или углекислотный огнетушитель. Необходимо помнить, что при поврежденной изоляции может образоваться электрическая дуга, она опасна для человека.
5.2 Экологичность работы


     Обеспокоенность общественности экологическими проблемами, а также новые, более строгие законы об охране окружающей среды вынуждают крупных производителей оборудования создавать сети для сбора устаревшего оборудования и для его утилизации. Кроме того, доля материалов, пригодных для обработки, максимально увеличена при проектировании оборудования. Размер сети утилизации «электронного лома» зависит от региона и местного законодательства. Например, в Западной Европе, где законы об охране окружающей среды очень строгие, компания «Hewlett-Packard» создала очень впечатляющую инфраструктуру для сбора и переработки устаревших компьютеров и оргтехники. Всего в Европе продукты HP обрабатывают 30 заводов, один из которых находится в России. Следует отметить, что эти заводы не являются собственностью HP. Они принадлежат компаниям-партнерам американского поставщика, участвующим в программе утилизации выведенного из эксплуатации оборудования.
     Все офисное оборудование включает в себя как органические компоненты (пластик различных типов, материалы на основе поливинилхлорида, фенолформальдегида), так и полный набор металлов.
     Все эти компоненты не опасны при эксплуатации продукта. Однако ситуация принципиально меняется, когда продукт поступает на свалку. Металлы, такие как свинец, сурьма, ртуть, кадмий и мышьяк, которые являются частью электронных компонентов, переходят под воздействием внешних условий в органические и растворимые соединения и становятся сильнейшими ядами. Утилизация пластмасс, содержащих ароматические углеводороды, органические производные хлора, является актуальной экологической проблемой. Поэтому вся оргтехника должна быть утилизирована в соответствии с методикой, утвержденной Государственным комитетом связи РФ. Благодаря интегрированной системе утилизации оргтехники, количество неперерабатываемых отходов сводится к минимуму, а основные материалы (пластмассы, цветные и черные металлы) и ценные компоненты (редкие металлы, фосфор, ферриты и т.д.) возвращаются в производство. Драгоценные металлы, содержащиеся в электронных компонентах оргтехники, концентрируются и после переработки на аффинажном заводе передаются в Государственный фонд.
     Первый шаг всегда выполняется вручную. Это удаление всех опасных компонентов. В современных настольных ПК и принтерах таких компонентов практически нет. Но, как правило, компьютеры и оборудование, произведенные в конце 90-х – самом начале 2000-х годов, когда плоских ЖК-мониторов просто не существовало, содержат вредные компоненты. А в кинескопных мониторах содержится много соединений свинца. Другая категория продуктов, содержащих опасные элементы, это ноутбуки. Аккумуляторы и экраны старых моделей содержат определенное количество ртути, что также очень опасно для организма. Важно отметить, что в новых моделях ноутбуков от этих вредоносных компонентов избавились.
     Затем все большие пластиковые детали удаляются. В большинстве случаев эта операция также выполняется вручную. Пластик сортируется по типу и измельчается, чтобы его можно было использовать позже. Детали, оставшиеся после разборки, отправляются в большой измельчитель, а все дальнейшие операции автоматизируются. Технологии переработки во многом заимствованы из горного дела – примерно так же, как они извлекают ценные металлы из породы.
     Остатки компьютеров, измельченные в гранулы, сортируются. Во-первых, все железные части извлекаются с помощью магнитов. Затем выбираются цветные металлы, которых в ПК гораздо больше. Алюминий извлекается из лома электролизом. Медь выделяют путем флотации – гранулы помещают в специальную жидкость, пластик плавает, а медь остается на дне. Эта жидкость сама по себе не токсична, однако работники на фабрике используют средства защиты органов дыхания, чтобы не вдыхать пыль.

Заключение


     Результатом дипломной работы стал готовый сайт «SmartEngineering» для инжиниринговой компании с подключенной к нему админ-панелью.
     В результате был разработан веб-сайт с современным дизайном, предоставляющий функционал обратной связи для клиентов, а также админ-панель для сотрудников, обрабатывающих их заявки. 
     В ходе работы были реализованы следующие задачи:
рассмотрена теоретическая информация о сайтах в сфере инжиниринга;
изучена литература, посвященная разработке сайтов по принципу SPA;
составлены требования к разработке;
описана архитектура сайта;
проработан UX/UI-дизайн сайт;
описан функционал составления и обработки заявок пользователей;
проведено планирование этапов работы и сроков их выполнения;
проведен экономический расчет;
разработан сайт инжиниринговой компании;
рассмотрены вопросы безопасности и экологичности работы.
     Разработанный сайт содержит 13 страниц и предоставляет следующие возможности:
отправить заявку;
обработать заявку, изменяя ее статус;
авторизоваться на web-сайте.
Реализованная функциональность позволяет закрыть основные бизнес-потребности компании. 

