

Введение


     Темой выпускной квалификационной работы является разработка игрового приложения «One Gun» для ПК на Unreal Engine.
     В наше время разработка игровых приложений стала еще более актуальной из-за роста пользователей ПК и увеличения спроса на интерактивные развлечения. Благодаря доступности инструментов и сред разработки, создание игр стало доступным для большего числа людей и компаний.
     Разработка игровых приложений требует навыков в области программирования, дизайна, искусства и маркетинга. Успех игры зависит от множества факторов, таких как уникальный геймплей, качественное визуальное оформление, интересный сюжет и активное сообщество игроков.
     Цель выпускной квалификационной работы: разработать игровое приложения "One Gun" для ПК на Unreal Engine, которое позволит хорошо провести время.
     Задачи выпускной квалификационной работы:
– разработка концепции игры, определение основной идеи, сюжета и геймплея игры;
– проектирование игрового мира и уровней, создание карты и планировки уровней игры;
– дизайн персонажей и предметов, разработка внешнего вида и характеристик игровых объектов;
– программирование игры, реализация геймплея и логики игры;
– создание визуальных эффектов и анимаций, для персонажей и объектов;
– тестирование и отладка, выявление и устранение ошибок в коде и игровых механиках;
– подготовка документации, составление технического задания, руководства пользователя и других документов;
– экономическое обоснование работы;
– раскрытие вопросов информационной безопасности и охраны труда;
– презентация игры, подготовка демоверсии игры для демонстрации на защите ВКР.
     Использованные технологии: для разработки игрового приложения для ПК была использована программа Unreal Engine 5 и её система программирования Blueprint.
     Выпускная квалификационная работа посвящена разработке игрового приложения "One Gun" для ПК на Unreal Engine. В работе рассматривается актуальность темы, определяются цель и задачи ВКР, а также описываются использованные технологии. Работа включает в себя этапы изучения существующих решений, проектирования и разработки приложения, тестирования и отладки, а также подготовки документации. Работа состоит из введения, пяти основных разделов, заключения, перечня информационных ресурсов из 12 источников.
     В первом разделе пояснительной записки определенны технические требования. В данном разделе обосновывается выбор операционной системы, указываются минимальные и рекомендуемые технические характеристики, необходимые для комфортной игры. Во втором разделе представлен анализ предметной области, который включает в себя: требования к приложению, выбор средств реализации, анализ рынка, общую концепцию игры, ее жанр, основные механики и особенности, а также целевую аудиторию.
     Третий раздел посвящён разработке и тестированию приложения.
     Четвертый раздел посвящён экономическому обоснованию работы. В нем описывается план работы и расчёт сметы затрат на разработку.
     В пятом разделе рассматривается безопасность и экологичность работы. 
     В заключении кратко описаны основные выводы по проделанной работе.

    1 Теоретические аспекты разработки
     
     
     1.1 Выбор платформы и операционной системы
     
     
     На данный момент существует две основный платформы ПК и консоли.
Для данного проекта выбрана платформа ПК поэтому здесь не будут рассматриваться виды консольных систем.
Для ПК существуют три основные операционные системы(ОС) - Windows, Linux, MacOS.
     Для данного проекта выбрана операционная система Windows поскольку она более распространённая и удобная для разработки игровых приложений.
     Операционная система Windows - это программное обеспечение, которое управляет аппаратными ресурсами компьютера и предоставляет пользователю графический интерфейс для работы с приложениями. Она разработана корпорацией Microsoft и является одной из наиболее распространенных операционных систем в мире. Windows предоставляет такие функции, как управление файлами и папками, установка и запуск программ, подключение к интернету и многое другое.
     Поскольку ОС для разработки уже выбрана, в данной работе другие операционные системы описываться не будут.
     
     
     1.2 Минимальные и рекомендуемые технические характеристики
     
     
     Для успешного запуска программы могут потребоваться определённые мощности и устройства, здесь описаны минимальные и рекомендуемые характеристики устройства, которые требуются для того, чтобы запуск и использование программы не вызывало проблем и ошибок.
     Минимальные системные требования:
     ОС: Windows 10+ x64;
     Процессор: Intel/AMD X64 ;
     Оперативная память: 4 GB ОЗУ;
     Видеокарта: NVIDIA GTX 1050 или AMD аналог;
     DirectX: версии 11;
     Место на диске: 10 GB.
     Рекомендуемые системные требования:
     ОС: Windows 10+ x64;
     Процессор: Intel Core i7-4770K или AMD аналог;
     Оперативная память: 8 GB ОЗУ;
     Видеокарта: Nvidia GTX 1070 или AMD аналог;
     DirectX: версии 12;
     Место на диске: 10 GB.
Использование устройства с рекомендуемыми настройками позволит получить более приятный опыт использования игрового приложения.
     

    2 Анализ предметной области
     
     
     2.1 Требование к приложению
     
     
     Игровое приложение «One Gun» — это видеоигра в жанре экшен шутер от первого лица, которое позволяет пользователям весело провести время и потренировать реакцию и нестандартное мышление в критических ситуациях. Игра расчитанна на пользователей от 12 лет.
     Подробное описание игры – игра в жанре экшен шутер от первого лица с элементами аркады и РПГ, представляет из себя игру со сражениями с игровыми боссами с помощью игровой пушки, у которой можно изменять механики стрельбы или механики взаимодействия пулей игрового оружия с окружающим миром. Карточки можно комбинировать между собой получая необычные сочетания выстрелов. Также в игре предусмотрены карточки для изменения способностей и характеристик самого игрового персонажа (ИП), которым и будет управлять игрок.
     В рамках выпускной квалификационной работы для данной разработки должны быть выполнены следующие требования:
– игровой персонаж, управляемый игроком;
– игровая пушка;
– механика карточек оружия;
– гибкая система показателей игрового здоровья и брони
– игровой босс;
– локация игрового босса;
– гибкие системы игровых механик для расширения в будущем.
     
     
     
     2.2 Выбор средств реализации
     
     
     Unreal Engine (UE) - это бесплатный игровой движок для создания игр, один из самых известных сред для разработки игровых приложений и синематиков. Движком называется программная среда, на основе которой конструируются и создаются игры. В ней можно работать с персонажами, логикой, физикой и графикой игры. Для этого проекта использована версия 5.3. 
     Unreal Engine выбрана в качестве среды разработки по следующим причинам:
– ускоренная разработка благодаря системе Blueprint;
– технология оптимизации моделей Nanite;
– приятный визуальный интерфейс;
– продвинутая технология для разработки игровых приложений;
     Blender - это бесплатный пакет для создания 3D-изображений с открытым исходным кодом. Он поддерживает весь 3D—конвейер - моделирование, монтаж, анимацию, симуляцию, рендеринг, композитинг и отслеживание движения, а также редактирование видео. Продвинутые пользователи используют API Blender для написания сценариев на Python для настройки приложения и написания специализированных инструментов, которые потом включаются в будущие версии Blender. Blender хорошо подходит частным лицам и небольшим студиям, которые извлекают выгоду из его унифицированного конвейера и адаптивного процесса разработки. В данном проекте Blender использован для создания 3D-объектов на сцене, и персонажей.
     Adobe Substance 3D Painter - В Substance 3D Painter предусмотрены инструменты, позволяющие создавать текстуры 3D-ресурсов, — от сложных кистей до интеллектуальных материалов, которые автоматически адаптируются к модели. Substance 3D Painter широко используется в производстве игр и фильмов, а также в сфере проектирования товаров, в модной индустрии и архитектуре. Это приложение для создания 3D-текстур, предназначенное для профессиональных дизайнеров в любой области. В этом проекте Substance painter использован для создания текстур 3D объектов.
     Adobe Photoshop — это программное обеспечение для редактирования изображений, являющееся эталоном на рынке и ставшее неотъемлемым инструментом для профессионалов и любителей цифровой фотографии. Разработанный компанией Adobe и интегрированный в пакет Creative Cloud, Photoshop является мощным инструментом для улучшения, редактирования и обработки любого изображения с потрясающими результатами. Photoshop используется во многих областях и является стандартным программным обеспечением для графического дизайна, редактирования фотографий и цифровой иллюстрации. Известный как программное обеспечение, на которое ориентируются профессионалы отрасли, Photoshop является самой загружаемой и используемой программой для создания цифрового контента. С его помощью были реализованы некоторые элементы UI и текстуры.
     FL-Studio - цифровая звуковая рабочая станция, которая более 20 лет остается одним из лидеров на рынке программного обеспечения для создания музыки. В FL-Studio можно создавать семплы, звуковые эффекты и даже целые музыкальные композиции. В данном проекте FL-Studio был использован для создания некоторых звуковых эффектов. 
     Adobe Audition - Приложение для цифрового аудио монтажа позволяет создавать, микшировать и улучшать звуковые эффекты на профессиональном уровне. Аудиоредактор производства фирмы Adobe. Поддерживает практически все звуковые форматы файлов. Входит в пакет Adobe Creative Suite, а также в Adobe Creative Cloud. В этом проекте Adobe Audition использовался для редактирования и коррекции некоторых звуковых эффектов. 
     VisualStudio — это интегрированная среда разработки (IDE) от Microsoft, которая предоставляет разработчикам мощный и удобный набор инструментов для создания различных типов приложений, включая приложения для Windows, мобильные приложения и веб-приложения. С помощью VisualStudio были отредактированы некоторые функции и совершена компиляция проекта.
     2.3 Анализ рынка
     
     
     Рынок видеоигр - это огромный и быстрорастущий сектор экономики, который приносит миллиарды долларов прибыли. Рассмотрим основные тенденции и характеристики этого рынка, а также его перспективы на ближайшие годы.
     По статистическим данным, мировой рынок видеоигр оценивается примерно в 200 млрд долларов в 2024 году и продолжает расти с каждым годом. Крупнейшими компаниями-производителями видеоигр являются:
– Nintendo;
– Sony Corporation;
– Microsoft;
– Electronic Arts;
– Ubisoft;
– Rockstar Games;
– Activision Blizzard;
– Take-Two Interactive.
     Каждый из этих производителей имеет свою специализацию и занимает определенную нишу на рынке. Например, Nintendo ориентируется на детскую аудиторию, Sony Corporation славится своими мощными игровыми консолями, а Electronic Arts активно развивает мобильные игры.
     Жанры и платформы.
     В настоящее время на рынке представлены видеоигры различных жанров, среди них можно выделить:
– Экшн-игры;
– Приключения;
– Стратегии;
– Спортивные игры;
– Симуляторы;
– Казуальные игры.
     Основными платформами для видеоигр являются игровые консоли, персональные компьютеры, смартфоны и планшеты.
     Тенденции развития рынка.
     Видеоигровая индустрия постоянно развивается и адаптируется к новым технологиям и потребностям пользователей. Некоторые из основных тенденций, которые можно наблюдать на рынке видеоигр.
     Рост популярности мобильных игр - с увеличением числа пользователей смартфонов и планшетов растет спрос на мобильные игры.
     Развитие виртуальной реальности (VR) и дополненной реальности (AR) - технологии VR и AR позволяют игрокам полностью погрузиться в виртуальный мир и создают новые возможности для разработчиков игр.
     Геймдев как стартап - все больше людей начинают создавать свои собственные видеоигры и зарабатывать на этом деньги.
     Коллаборации с другими индустриями - видеоигры все чаще сотрудничают с другими отраслями, такими как кино, музыка и мода, что позволяет привлечь больше аудитории.
     Увеличение доли киберспорта - видеоигры становятся все более популярными в качестве спортивных дисциплин, привлекая внимание зрителей и спонсоров.
     Структура рынка.
     Рынок видеоигр состоит из нескольких основных сегментов:
– игровые консоли;
– персональные компьютеры;
– мобильные устройства;
– виртуальная реальность;
– киберспорт.
     Каждый из сегментов имеет свои особенности и требования к разработчикам. Например, рынок игровых консолей характеризуется высокой конкуренцией и жесткими требованиями к качеству продукции. Рынок мобильных устройств, наоборот, предлагает большую свободу в выборе жанров и стилей игр, но предъявляет высокие требования к оптимизации и производительности.
     Рынок видеоигровой индустрии продолжает расти и развиваться, предлагая все больше возможностей для игроков и разработчиков. С появлением новых технологий и трендов, таких как виртуальная реальность и киберспорт, этот рынок будет только усиливаться и расширяться.
     В разработанном игровом приложении «One Gun» автор выпускной квалификационной работы постарался учесть основные недостатки существующих аналогичных видеоигровых приложений похожих жанров, и реализовать необычные механики.
      
     
     2.4 Концепция игры
     
     
     Разрабатываемое игровое приложение предназначено для ПК на операционной системе Windows.
     Был разработан концепт механик игры. Механика игры состоит из использования игровых карточек для изменения механик выстрелов игрового оружия, для этого у игрового оружия есть 6 слотов. Каждый вид карточки можно совмещать несколько раз. Также у игрового персонажа есть 3 слота для карточек способностей самого персонажа, которые также можно совмещать. Для вставки карточек создан инвентарь.
     В игре должны быть реализованы следующие механики:
– механика карточек игрового оружия и управляемого персонажа;
– инвентарь карточек;
– система быстрых слотов карточек;
– система пресетов карточек;
– замедление времени в игре при нажатии на клавишу;
– уклонение управляемого персонажа в лево и вправо;
– игровой босс для сражения;
– взаимодействие босса с игроком;
– система стадий босса;
– расширенный компонент показателей жизни и брони игровых персонажей;
– динамический индикатор нанесения урона;
– интерфейс игрока.
– босс-бар (интерфейс, отображающий информацию о боссе).

     
3 Разработка 
     
     
     3.1 Процесс разработки
     
     
     Процесс разработки начинался с создания игровой пушки. Создано множество функций, а также адаптировано для использования не игровыми персонажами (ботами). На рисунке 1 изображена модель пушки.
     

Рисунок 1 – Модель пушки.

На рисунке 2 изображен Event graph (Основная среда выполнения функций класса объекта) пушки.

Рисунок 2 – Event graph пушки.

     Далее была создана система карточек оружия. Система взаимодействует с игровыми пушками и имеет гибкую настройку а также возможность использования ботами.  На рисунке 3 изображен базовый класс карточки пушки, реализующий обычный выстрел.
     

Рисунок 3 – Базовый класс карточки пушки.

     Создана гибкая система жизненных показателей и нанесения урона. Реализованна система как компонент, который можно прикрепить к любому объекту на сцене, благодаря чему её можно удобно интегрировать в любого созданного игрового персонажа. Система состоит из 10 основных функций позволяющих взаимодействовать с другими блупринтами(классами). В системе можно изменять количество жизней игровых персонажей, броню, а также тип существа, который в основном определяет невосприимчивость к определённым типам урона. На рисунке 4 изображён эвент граф (Event Graph) блупринта HP_State.


Рисунок 4 – Event graph блупринта HP_State.

     Также создана базовая AOE система нанесения урона - система повреждений в определённой области. Она понадобится для определённых атак по области, например атаки боссов, взрывы, огонь и тд. На рисунке 5 изображен Event graph базового блупринта AOE системы.

Рисунок 5 – Event graph AOE системы.

     Создана система игровой пули. Создана коллизия (сетка объекта взаимодействующая с окружающим игровым миром) пули а также взаимодействие с другими коллизиями игровых объектов. Улучшено взаимодействие с системой карт пуль для более производительных рассчётов и удобного создания новых карт в будущем. Созданы визуальные эффекты для различных пуль. На рисунке 6 изображен эвент граф блупринта пули.


Рисунок 6 – Event graph BP_Bullet.
     На рисунке 7 изображен один из новых эффектов пуль, а именно для карты Bloodletter.
     

Рисунок 7 – Event graph BP_Bullet.

     Добавлена система пресетов и быстрых слотов для инвентаря которая позволяет сохранять набор карт. С помощью красной кнопки, с изображением карточки со стрелкой, можно сохранять текущий набор карт в пресет для использования позже. Быстрые слоты же позволяют мгновенно сменять наборы карт во время игры с помощью клавиш от 1 до 4 на клавиатуре или прокрутки средней кнопки мыши, без необходимости открывать инвентарь. Для заполнения быстрого слота достаточно перетащить карточки на основные слоты или использовать заготовленный пресет. На рисунке 8 изображено окно добавления и редактирования пресета. Пресету можно изменить название и цвет отображения для удобства, также присутствует кнопка удаления и применения пресета.

Рисунок 8 – Окно добавления пресета.

     На рисунке 9 можно увидеть слоты быстрого доступа, пронумерованные от 1 до 4, для смены слот достаточно кликнуть на него или нажать на соответствующую клавишу.
     

Рисунок 9 – Слоты быстрого доступа.

     Далее разрабатывался игровой персонаж, управляемый игроком. Первым делом было добавлена новая основная способность – замедление игрового времени. На рисунке 10 показана функция замедления времени.


Рисунок 10 – Функция замедления времени.

     Далее создана система уклонения персонажа, теперь она стала более производительной. На рисунке 11 показана функция уклонения персонажа.
     

Рисунок 11 – Функция уклонения персонажа.

     Были исправлены некоторые баги, приводившие к ошибкам, а также произведены общие улучшения логики остальных функций. Добавлен автоматический режим стрельбы позволяющий зажать кнопку выстрела вместо постоянного нажатия для каждого выстрела.
     Добавлены анимированные индикатор жизненных показателей персонажа в виде часов и показатель брони персонажа в виде щита. Для жизненных показателей сделана логика интерполяции для плавного изменения показателя. На рисунке 12 изображены жизненные показатели персонажа.
     

Рисунок 12 – Жизненные показатели персонажа.

     На рисунке 13 изображена функция интерполяции показателей жизней.
     

Рисунок 13 –  Функция интерполяции показателей жизней.
     Далее был создан первый игровой босс для сражения. На рисунке 14 изображена 3д модель игрового босса.
     

Рисунок 14 – 3д модель игрового босса.

     Первым делом был создан базовый компонент босса, в котором определены переменные и функции которые в дальнейшем будут нужны для каждого созданного босса, например менеджер стадий и активация босса. На рисунке 15 изображен базовый компонент боссов.


Рисунок 15 – Базовый компонент боссов.

     Далее реализованны различные функции работы логики бота. На рисунке 16 изображёна логика begin play (функция срабатывающая при появлении объекта в мире) игрового босса.


Рисунок 16 – Функция begin play игрового босса.

     Создан анимационный блупринт персонажа – блупринт в котором выполняется почти вся логика воспроизведений анимацией персонажа. Одна из главных функций – вычисление угла поворота рук персонажа вычисляя траекторию полёта пули зная её скорость и гравитацию, а также скорость цели. На рисунке 17 изображен эвент граф анимационного чертежа, в котором устанавливаются основные переменные для управления анимациями.
     

Рисунок 17 – Event graph анимационного чертежа персонажа.

     На рисунке 18 изображен анимационный граф персонажа в котором уже смешивается и накладываются нужные анимации следуя установленной логике.


Рисунок 18 – Анимационный граф босса.
     В анимационном графе в качестве основного источника анимаций выступает state machine (машина состояний). Машина состояний используется для быстрого и удобного смена анимаций между состояниями персонажа. На рисунке 19 изображена машина стояний игрового босса.


Рисунок 19 – Машина состояний босса.

     Для создания логики поведения искусственного интеллекта используется дерево поведения, blackboard и AI controller. Они взаимодействуют между собой для создания поведения персонажа. AI controller нужен объекту для построения путей движения  по игровой карте и передаче некоторых переменных в blackboard, blackboard используется для хранения и передачи переменных в дерево поведения. Дерево поведения представляет из себя ветвистую структуру из различных задач и условий. На рисунке 20 изображено дерево поведения.

Рисунок 20 – Дерево поведения босса.

     А теперь рассмотрим стадии босса. Первая стадия представляет из себя обычный выстрел из пушки одной рукой, бот просто выполняет периодически выстрелы. На рисунке 21 изображена функция выстрелов в блупринте персонажа.
     

Рисунок 21 – Функция выстрела босса.

     Также в проекте реализован поворот босса в сторону противника не месте если он рядом. На рисунке 22 изображена функция поворота персонажа на определённую точку в пространстве. В дереве поведения она проверяется первой.
     

Рисунок 22 – Функция разворота босса.
     
     На рисунке 23 изображено дерево поведения и две первые задачи – разворот на цель, если она в радиусе досягаемости, и логика 1 стадии.


Рисунок 23 – Дерево поведения и две первые задачи.
     Добавлена атака в ближнем бою, если игрок подойдёт слишком близко к боссу спереди тот ударит и откинет игрового персонажа. На рисунке 24 изображена атака босса в ближнем бою.
     
      
Рисунок 24 – Дерево поведения и две первые задачи.

     Далее рассмотрим 2 и 3 стадию. Вторая стадия отличается от первой тем что босс использует 2 пушки. На третей стадии босс начинает своё движение. На рисунке 25 изображена вторая и третья стадии в дереве поведения босса.

Рисунок 25 – Дерево поведения 2 и 3 стадии.
      
     В четвёртой стадии к боссу добавляется особая атака. На 4 стадии босс использует особую атаку называемую «мельница». Атака состоит из постепенной раскрутки туловища босса вокруг своей оси с выстрелами во все стороны. К пушкам, во время особой атаки, добавляются три карточки - Gatling (позволяет стрелять пушкой как пулемётом), Bounce (пули отскакивают от стен), Sniper (ускоряет снаряд). Также здесь используется созданая ранее AOE система которая используется для того чтобы наносить урон если игровой персонаж подойдёт слишком близко во время того как босс использует эту атаку. На рисунке 26 изображена особая атака босса «мельница»
     

Рисунок 26 – Особая атака босса «мельница».

     На рисунке 27 изображена часть логики особой атаки.


Рисунок 27 – Часть логики атаки босса «мельница».
      
     В пятой стадии у босса появляется вторая особая атака, при которой босс делает несколько быстрых выстрелов с небольшим отклонением в прицеливании. На рисунке 28 изображена логика пятой стадии в дереве поведения.
     

Рисунок 28 – Логика пятой стадии в дереве поведения.

     Сделан интерфейс информации о боссе и его индикатор защиты. Показатель здоровья не планируется выводить на экран по задумке автора игрового приложения. На рисунке 29 изображен интерфейс информации о боссе.


Рисунок 29 – Логика пятой стадии в дереве поведения.

     Далее проведена работа над окружением, было создано и про текстурированно множество моделей окружения. Также проделана работа над освещением, в целях оптимизации пришлось отказаться от новой системы Lumen встроенной в Unreal Engine, Lumen позволяла делать все источники света динамическими что выглядело более реалистично, но требовало больше ресурсов. Поэтому были настроены объекты для «запечки» карт освещения. Настроена цветокоррекция и настройки пост-процесса для улучшения внешнего вида.  На рисунке 30 изображена проделанная работа над окружением и светом.


Рисунок 30 – Проделанная работа над окружением и светом.

На рисунке 31 изображена стартовая игровая комната.


Рисунок 31 – стартовая игровая комната.

     На рисунке 32 изображена арена с игровым боссом.
     

Рисунок 32 – арена с игровым боссом.
     
     Добавлены следы от пуль, размер которых зависит от размера самой пули. На рисунке 33 изображен след от большой пули.
     

Рисунок 33 – след от большой пули.
     
     Создано главное и внутриигровое меню с настройками графики и управления. На рисунке 34 изображено внутриигровое меню.
     

Рисунок 34 – внутриигровое меню.
     
     На рисунке 35 изображено главное меню.


Рисунок 35 – главное меню.
     
     Игровой мир был разделён на секции для оптимизации, это так называемый - level streaming, разделение мира на отдельные секции каждая из которых прогружается отдельно в зависимости от того в какой из них находится игрок. На рисунке 36 изображен процесс разделения мира на секции.
     

Рисунок 36 – процесс разделения мира на секции.


3.2 Тестирование игрового приложения


     Тестирование компьютерных игр – это процесс, который направлен на проверку качества и соответствия игры заявленным требованиям. Этот процесс крайне важен для современных игровых ААА-студий, поскольку наличие ошибок в игре может негативно сказаться на компании, например, привести к ухудшению результатов, таких как снижение прибыли из-за некачественного продукта. Это может вызвать недовольство пользователей и, в свою очередь, привести к уменьшению прибыли и оттоку аудитории от продуктов компании. Процесс тестирования включает в себя несколько видов:
– функциональное тестирование это проверка того, что все функции игры работают правильно. Это может включать проверку графики, звука, управления и других аспектов игры;
– тестирование производительности необходимо для определения того, насколько хорошо игра работает на различных конфигурациях ПК. Это включает в себя проверку на разных операционных системах, процессорах, видеокартах, объемах оперативной памяти и т.д;
– верификация контента это проверка игры на соответствие законам и правилам, таким как возрастные ограничения, цензура, соблюдение авторских прав;
– юзабилити-тестирование это проверка удобства использования игры, включая управление, навигацию, интерфейс и другие аспекты, которые могут повлиять на опыт игры;
– тестирование на ошибки и баги это поиск и исправление ошибок, которые могут возникнуть в процессе игры. Ошибки могут быть связаны с графикой, звуком, управлением и другими аспектами;
– регрессионное тестирование. После внесения изменений в игру, проводится регрессионное тестирование, чтобы убедиться, что новые изменения не повлияли на работу игры;
– стресс-тестирование и тестирование на совместимость это проверка стабильности игры при высоких нагрузках и на разных конфигурациях ПК, чтобы убедиться в отсутствии сбоев и несовместимости;
– интеграционное тестирование это тестирование взаимодействия между различными компонентами игры, такими как графика, звук, управление;
– безопасность. Тестирование безопасности проводится для обнаружения и устранения уязвимостей, которые могут использоваться злоумышленниками для взлома игры. В целом, тестирование компьютерных игр - это сложный и трудоемкий процесс, который требует большого количества времени и ресурсов. Однако, благодаря тестированию, разработчики могут гарантировать высокое качество и стабильность игры, что в свою очередь обеспечивает удовлетворенность пользователей и успех игры на рынке.
     Было проведено тестирование производительности. Тестирование проводилось на средних настройках графики. Характеристики комплектующих ПК, на котором производилось тестирование:
? процессор	Intel Core i3-9100F CPU @ 3.60GHz, 3600 МГц, ядер: 4.
? видеокарта NVIDIA GeForce RTX 2060.
? оперативная память 16 ГБ.
     На рисунке 37 изображено количество кадров в секунду(FPS) в стартовой комнате.
     

Рисунок 37 – FPS в стартовой комнате.
     
     На рисунке 38 изображено количество FPS на игровой арене.
     

Рисунок 38 – FPS на игровой арене.

     На рисунке 39 изображено количество FPS при использовании одной из самых ресурсоёмких комбинаций игровых карточек.
     

Рисунок 39 – FPS при использовании ресурсоёмкой комбинации игровых карточек.
     
     На рисунке 40 изображено количество FPS при использовании другой ресурсоёмкой комбинаций игровых карточек.


Рисунок 40 – FPS при использовании другой ресурсоёмкой комбинации игровых карточек.



    4 Экономическое обоснование работы
     
     
     4.1 Планирование работы
     
     
     Планирование работы необходимо для улучшения организации труда и повышения эффективности производственных процессов. Это позволяет оптимизировать распределение ресурсов, установить приоритеты и сроки выполнения задач, а также предотвратить возможные проблемы и риски на рабочем месте.
     Также планирование работы позволяет более эффективно использовать рабочее время, уменьшить количество ошибок и повысить качество продукции или услуг. Оно также способствует лучшему взаимодействию между сотрудниками и управленческим персоналом, что в свою очередь повышает мотивацию и уровень удовлетворенности работников. 
     Для составления плана работ была использована программа «Блокнот».
     Перечень работ со сроками их выполнения представлен на рисунке 41.
     


     Таким образом, общая себестоимость проекта составляет 376 810,97 рублей. При расчете цены на продукт необходимо учитывать эту сумму и добавить к ней наценку, чтобы получить конечную цену на продукт. В заключение экономического раздела по заданной теме можно отметить, что успешная реализация проекта требует не только технической грамотности и квалификации, но и грамотного финансового планирования. Расчет себестоимости проекта и определение цены на продукт - это важные шаги в процессе планирования и реализации проекта, которые позволяют оценить его экономическую эффективность и принять обоснованные решения.
     Однако, следует помнить, что в реальности наценка на продукт может варьироваться в зависимости от рыночной конъюнктуры и конкурентной среды. Поэтому, для более точного определения цены на продукт, необходимо провести дополнительные маркетинговые исследования.
     Также, следует учитывать, что в рамках проекта могут возникнуть дополнительные расходы, которые не были учтены в первоначальном расчете. Поэтому, рекомендуется предусмотреть некоторую резервную сумму в бюджете проекта на случай непредвиденных расходов.
     В целом, правильно спланированный экономический раздел позволяет оценить финансовую сторону проекта, выявить возможные риски и принять обоснованные решения на каждом этапе его реализации.
    
    
    

    5 Безопасность и экологичность работы
     
     
     5.1 Информaционнaя безопaсность
     
     
     Информационная безопасность является неотъемлемой частью обеспечения безопасности и экологичности работы. В современном мире информация является одним из самых ценных ресурсов, поэтому ее защита должна быть на должном уровне.
     Нарушение информационной безопасности может привести к серьезным последствиям, таким как утечка конфиденциальной информации, нарушение работоспособности систем и сетей, а также финансовые потери. Поэтому необходимо уделять достаточное внимание обеспечению информационной безопасности и регулярно обновлять используемые меры защиты в соответствии с изменяющимися угрозами. Кроме того, следует учитывать законодательные требования и стандарты в области информационной безопасности, чтобы избежать возможных штрафов и санкций.
     Для обеспечения информационной безопасности необходимо принимать меры по защите информации от несанкционированного доступа, использования и распространения. Это может включать в себя использование паролей, шифрования данных, контроля доступа к информации, а также меры по защите от вирусов и других вредоносных программ.
     Кроме того, необходимо обеспечить безопасность информационных систем и сетей, используемых в работе. Для этого следует проводить регулярную проверку на наличие уязвимостей и принимать меры по их устранению.
     
     
     
     
     5.2 Охрана труда
     
     
     Кроме информационной безопасности, также важно обеспечить безопасность труда для разработчиков игрового приложения. Для этого можно использовать обучение и тренинги. Разработчики должны проходить обучение и тренинги по охране труда, чтобы знать, как правильно работать с компьютером и другими устройствами, а также как избегать травм и болезней.
     Рабочее место разработчика должно быть оборудовано эргономично, чтобы избежать напряжения мышц, болей в спине и других проблем со здоровьем.
     Разработчики должны делать регулярные перерывы в работе, чтобы избежать перенапряжения и усталости.
     Разработчики должны использовать специальное оборудование, такое как клавиатуры и мыши с эргономичным дизайном, чтобы избежать травм рук и запястий.
     В офисе разработчиков должны быть установлены средства предупреждения пожаров и аварий, а также должны быть разработаны планы эвакуации и действия в случае чрезвычайных ситуаций.
     Разработчики должны соблюдать нормативы и требования в области охраны труда, установленные законодательством и компанией.
     Обеспечение безопасности труда для разработчиков игрового приложения поможет предотвратить травмы и болезни, повысить эффективность работы и улучшить общее качество жизни.
     

Заключение
     
     
     В результате выполнения выпускной квалификационной работы было разработано игровое приложение «One Gun» для ПК на Unreal Engine. Работа включала в себя этапы изучения существующих решений, проектирования и разработки приложения, тестирования и отладки, а также подготовки документации. Данный проект помог ознакомится с тонкостями Game Dev индустрии и изучить игровой движок Unreal Engine 5.
     В ходе работы:
– разработаны концепции игры, определены основные идеи сюжета и геймплея игры;
– спроектирован игровой мир и уровни, создана карта и планировка уровня игры;
– создан дизайн персонажей и предметов, разработан внешний вид и характеристики игровых объектов;
– закончено программирование игры, реализующее геймплей и логику игры;
– созданы визуальные эффекты и анимации, для персонажей и объектов;
– завершено тестирование и отладка, выявление и устранение ошибок в коде и игровых механиках;
– подготовлена документация, составлено техническое задание;
– проведено экономическое обоснование работы;
– раскрыты вопросы информационной безопасности и охраны труда;
– подготовлена презентация игры, подготовлена демоверсия игры для демонстрации на защите ВКР.
     Разработанное игровое приложение позволяет пользователю развить реакцию, интуицию и логическое мышление, а также приятно провести время.







