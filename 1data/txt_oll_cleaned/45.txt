

ВВЕДЕНИЕ
     
     В настоящее время интернет занимает все больше места в жизни каждого человека. Из интернета люди узнают все, что им необходимо: начиная от новостей и заканчивая специализированной информацией. Поэтому для каждого предприятия, будь это какой-то маленький магазинчик или большая корпорация, важно иметь web-сайт для размещения на нем своей информации. 
     Заданием на курсовое проектирование была разработка web-ресурса для предметной области «Магазин спортивных товаров». 
     Целью курсового проекта является разработка web-ресурса для предметной области «Магазин спортивных товаров». Для достижения результата были поставлены и решены следующие задачи:
      изучить предметную область;
      разработать дизайн; 
     разработать понятный интерфейс;
     разработать web-сайт и наполнить его контентом.
     Предмет исследования – технологии и языки программирования, используемые для создания web-сайтов.
     Объект исследования – web-сайт магазинаспортивных товаров.
     В первом разделе пояснительной записки приведено описание предметной области, и основные средства разработки web-сайта.
      Во втором разделе описана технология разработки сайта.
     В третьем разделе описано тестирование сайта.
     
     
     
     
     
     
     
1. Анализ предметной области

1. Исследование предметной области

     На сегодняшний день интернет-технологии стремительно развиваются, и, заглядывая в будущее можно предсказать перспективы развития Интернета. Каждый день появляются и новые сайты по самым различным тематикам. 
     Чаще всего такой web-сайт создается для того, чтобы посетитель, мог найти подробное описание и изображение товара. То есть сайт в данном случае является ничем иным как иллюстрированным рекламным каталогом товаров.
     Прежде всего, интернет-магазин - это сайт, содержащий подробный каталог товаров с описанием и изображением. Основное отличие от обычного интернет-каталога состоит в том, что товары, представленные в интернет-магазине можно не только увидеть, но и заказать, онлайн.
     Основные возможности программы [6]:
     выбор необходимой информации;
      переход по гиперссылкам и кнопкам;
      простой и удобный интерфейс для работы пользователя;
      полное описание каждого товара по отдельности.
     Выбор метода решения
     Для решения поставленной задачи можно выделить такие программные средства как:
      текстовый редактор Блокнот (Notepad++);
     скрипт языки JavaScript или PHP;
     язык разметки гипертекста (HTML).
     С помощью любого из этих средств можно обеспечить полное выполнение технического задания на проектирование.


1. Требования к разработке

     Требования к web-сайту :
     1. структура сайта должна быть понятной, не содержать логических противоречий, позволять посетителю сайта легко найти всю опубликованную информацию;
     2. логически связанные друг с другом страницы сайта должны иметь взаимные ссылки, что позволяет посетителю легко получать доступ к необходимой информации;
     3. навигация на сайте должна быть представлена в виде меню, которое должно обеспечивать простой и понятный доступ ко всем страницам сайта;
     4. тексты на сайте не должны содержать грамматических и стилистических ошибок;
     5. дизайн должен быть выполнен в единой цветовой гамме, без включения элементов, не сочетающихся с ней по цвету [7].
     Сайт должен быть выполнен по всем этим критериям.
	
1.  Выбор средств реализации

     Для верстки сайта необходимы хорошие средства реализации, которые помогут разработать действующий ресурс и внедрить сложные функциональные решения. 
     Язык программирования HTML
     HTML (от англ. HyperTextMarkupLanguage — «язык гипертекстовой разметки») стандартный язык разметки документов во Всемирной паутине. Большинство web-страниц содержат описание разметки на языке HTML (или XHTML). Язык HTML интерпретируется браузерами и отображается в виде документа в удобной для человека форме[4].
     Возможности.
     Язык HTML позволяет разместить в тексте:
      смысловую роль текстового блока (например: логическое ударение, заголовок, параграф, пункт списка и др.), который обрабатывается браузером в соответствии со смыслом[5].
      Гипертекстовые ссылки, которые значительно упрощают чтение множества связанных документов, ибо позволяют запросить документ с адресом, указанным в коде ссылки, простым щелчком мыши.
      Гарнитуру (текст разного начертания), кегль (размер высоты буквы), цвет шрифта для визуального вывода [5].
     Специальные символы (выходящие за рамки ASCII символы пунктуации, математические символы, греческие и готические буквы, стрелки и т.п.).
      Формы для введения пользователем данных, которые позднее подвергаются обработке [5].
      Открытие мультимедийных файлов, выводимых как непосредственно браузером (например, изображения в форматах JPEG, GIF или PNG; аудиофайлы MIDI и др.), так и внешними приложениями, «встраиваемыми» в окно браузера (Flesh-анимация. Java-апплеты и прочее) [5].
     HTML это «родной язык» пользовательского браузера.
     HTML это язык, который позволяет представлять информацию (например, научные исследования) в Internet. То, что отображается в браузере при просмотре страницы в Internet, это интерпретация браузером HTML-текста. Чтобы увидеть HTML-коды страницы в Internet, можно щёлкнуть "View" в линейке меню браузера и выбрать "Source"[5].
     Каскадные таблицы стилей
     CSS (англ. Cascading Style Sheets — каскадные таблицы стилей) —формальный язык описания внешнего вида документа, написанного с использованием языка разметки.
     Преимущественно используется как средство описания, оформления внешнего вида веб-страниц, написанных с помощью языков разметки HTML и XHTML, но может также применяться к любым XML-документам (расширяемый язык разметки), например, к SVG (язык разметки масштабируемой векторной графики) или XUL (язык разметки для создания динамических пользовательских интерфейсов на основе XML) [6].
     Цель создания CSS
     CSS используется создателями web-страниц для задания цветов, шрифтов, расположения отдельных блоков и других аспектов представления внешнего вида этих web-страниц. Основной целью разработки CSS являлось разделение описания логической структуры web-страницы (которое производится с помощью HTML или других языков разметки) от описания внешнего вида этой веб-страницы (которое теперь производится с помощью формального языка CSS).
     Такое разделение может увеличить доступность документа, предоставить большую гибкость и возможность управления его представлением, а также уменьшить сложность и повторяемость в структурном содержимом. Кроме того, CSS позволяет представлять один и тот же документ в различных стилях или методах вывода, таких как экранное представление, печатное представление, чтение голосом (специальным голосовым браузером или программой чтения с экрана), или при выводе устройствами, использующими шрифт Брайля (рельефно-точечный тактильный шрифт, предназначенный для письма и чтения незрячими людьми[5].
     
1. Требования к программному обеспечению

     Сайт должен обеспечивать корректное отображение данных в следующих браузерах:
     
      GoogleChrome (версия  49.0 и выше);
      Opera
      Mozilla Firefox
     операционная система Windows 7, Windows 8 и Windows 10;
      место на диске 50 Мбайт.
      выбор нужной информации;
     переход по окнам и кнопкам;
      простой и удобный интерфейс для работы пользователя.
     Требования к программному обеспечению сервера хостинга:
      процесс семейства x86_64;
     оперативной памяти не менее 1 Gb;
     место на диске не менее 5.8 Mb.
     Требования к программному обеспечению сервера хостинга:
      операционная система Windows/Linux;
     сервер Apache;
     язык PHP не ниже 5-ой версии;
      система управления сервером cPanel.
     Все эти параметры обеспечивают корректное отображение сайта в web-браузере пользователя.

5. Разработка web-документа, его схемы и структуры

2.1Структура web-документа

     На рисунке 1 показан примерный макет всех страниц сайта. Меню на каждой странице зафиксировано и находится всегда вверху экрана. Шапка сайта соответствует названию и назначению страницы.




Рисунок 1 – Макет страниц
     
     На рисунке 2 показана структура меню сайта, с помощью которой осуществляется переход на страницы сайта.

Рисунок 2 – Структура меню сайта

2.2Выбор цветовой схемы оформления
     
     Цветовая схема сайта – это первое, на что обращает внимание пользователь. Цвета, несочетающиеся друг с другому, могут сразу отпугнуть пользователя. Поэтому очень важно правильно подобрать цвета, которые будут гармонично смотреться друг с другом.
     Существует множество сервисов по подбору цветовой схемы для сайта. Это очень сильно облегчает жизнь верстальщику. 
     Для разрабатываемого сайта я выбрал два цвета и их оттенки: серый и белый. Белый и серый цвета относятся к ахроматическим цветам. Они прекрасно дополняют друг друга, отлично сочетаются между собой. Вдобавок серый имеет поразительное многообразие оттенков. Но этот цвет обладает некой магической притягательностью, его нейтральность и спокойствие создают ощущение комфорта, гостеприимства и расслабления.
     На рисунке 3 изображена страница сайта с цветовой совместимостью.
     

     
     На рисунке 4 представлена цветовая схема сайта.

Рисунок 4 – Цветовая схема сайта


2.3Разработка меню

     Меню – важная часть сайта, с помощью которого осуществляется переход по страницам сайта. Любое меню представляет собой список ссылок, ведущих на внутренние страницы сайта.
     Горизонтальное меню – самое простое и удобное. Поэтому именно оно будет использоваться на разрабатываемом сайте. Это меню должно располагаться сверху, на каждой странице сайта. Чтобы пользователь не листал постоянно страницу вверх, меню будет зафиксировано вверху экрана. 
     Существует несколько способов создания этой части сайта. Я воспользовался средствами HTML и CSS. Это самый простой способ создания меню. Горизонтальное меню состоит из 7 основных пунктов. При наведении мышью на них выпадают еще одни списки, которые и являются гиперссылками на другие страницы. Кроме того, в верхнем левом углу сайта, на одном уровне с меню, расположено название фирмы. Это кнопка, при нажатии на которую происходит пролистывание сайта наверх. 
     На рисунке 5 представлено действующее меню. 
     

Рисунок 5 – Меню сайта

     На листинге 1 представлен код меню HTML. 
      
     На листинге 2 представлен код меню CSS.
      Листинг 2 – Меню сайта CSS
     

С помощью данного кода было разработано горизонтальное меню 

2.4Форма обратной связи
     
     Обратная связь – не менее важная часть сайта. С ее помощью пользователь может задать вопросы, которые возникли во время посещения сайта, или указать администратору на какую-либо ошибку в работе. Реализация обратной связи осуществляется с помощью скрипта PHP.
     На рисунке 6 представлена форма обратной связи.
     
     
Рисунок 6 – Форма обратной связи

     На листинге 3 представлен код, делающий форму функционирующей.
      
     С помощью данного скрипта производится отправка данных на электронный адрес пользователя.



6. Тестирование

1. Общие понятия тестирования

     Как создание технического задания и прототипирование, тестирование сайта является одним из важных этапов разработки. Тестирование и устранение ошибок предшествуют запуску проекта и выполняются после всех остальных этапов, ведь досконально проверять имеет смысл только уже готовый проект. Но иногда бывает уместным протестировать отдельный этап, например, после верстки дизайна нужно просмотреть, как выглядят страницы на разных браузерах и устройствах [8]. 
     Этапы проверки:
      проверка гиперссылок, поиск нерабочих ссылок;
      тестирование верстки (изменение масштаба отображения);
      тестирование верстки сайта в режиме отключенной графики;
     тестирование верстки в режиме изменения разрешения экрана;
      тестирование php-скриптов;
     тестирование кроссбраузерности.
     Далее будут представлены результаты тестирования сайта.

1.  Результаты тестирования

     Проверка гиперссылок, поиск нерабочих ссылок
     На рисунке 8 представлен вид страниц, которые отображаются при переходе по гиперссылкам.




      Рисунок 8 – Проверка валидности гиперссылок
     
     
     Изменение масштаба
     На рисунке 9 представлено изображение главной страницы с масштабом 100%.
     

Рисунок 9 – Масштаб 100%


     На рисунке 10 представлено изображение главной страницы с масштабом 80%. 

Рисунок 10 – Масштаб 80%

     На рисунке 11 представлено изображение главной страницы с масштабом 120%. 
     

Рисунок 11 – Масштаб 120%
     
     Из вышеприведенных изображений можно сделать вывод, что сайт остается дееспособным и удобным. Все элементы остаются фиксированными, меняется только размер.
     Отключение графики
     На рисунке 12 изображена главная страница в режиме отключенной графики.
     

Рисунок 12 – Отключенная графика
     
     В режиме отключенной графики сайт остается полностью рабочим. 
     Разрешение экрана
     Просмотр сайта при разрешении экрана на 1086х882 (Рисунок 13).

Рисунок 13 – Разрешение экрана 1086х882
     
     При разрешении экрана 700х552 сайт выглядит корректно (Рисунок 14).

Рисунок 14 – Разрешение экрана 700х552
     
     Тестирование php-скриптов
     На рисунке 15 представлен результат работы php-скрипта обратной связи,
     когда не заполнено хотя бы одно поле.


Рисунок 15 – Результат работы при незаполненных полях
     На рисунке 16 представлен результат работы php-скрипта обратной связи,
     когда все поля были заполнены.
      

Рисунок 16 – Результат работы при заполненных полях
     
     Тестирование кроссбраузерности
      На рисунке 17 представлен просмотр сайта через браузер GoogleChrome. (Версия 73.0) 
     

Рисунок 17 – Просмотр сайта через GoogleChrome
     
     На рисунке 18 представлен просмотр сайта через браузер YandexBrowser (Версия 19.4)
     

Рисунок 18 – Просмотр сайта через YandexBrowser
     
     На рисунке 19 представлен просмотр сайта через браузер IE 9.
     

Рисунок 19 – Просмотр сайта через IE
     Сайт прошел тестирование на кроссбраузерность, во всех браузерах он выглядит корректно и остается действующим.
     Разработанный сайт успешно прошел все этапы тестирования. Из этого сделает вывод, что сайт готов к использованию. 
     

     ЗАКЛЮЧЕНИЕ
     
     Результатом курсового проекта стал готовый к работе магазин спортивных товаров. В ходе проведения работы были выделены основные задачи сайта, важные особенности целевой аудитории.
     Оценивая проделанную работу можно сделать выводы:
      сайт представляет пользователям основную информацию о спортивных товарах, находящихся на сайте, а также о контактных данных;
      дизайн сайта соответствует предполагаемым предпочтениям пользователей, времени и целям нахождения потенциальных клиентов;
      реализована навигация с помощью меню по страницам сайта;
      ссылки легко отличимые от основного текста, находятся в одном месте.
     Разработанный сайт состоит из 18 страниц, таких как:«главная», «новости», «отзывы», «вопрос-ответ», «статьи», «магазин», «об авторе», «контакты».
     Сайт способен обеспечить информирование пользователя о магазине и ознакомить со всем ассортиментом.

     
     
   