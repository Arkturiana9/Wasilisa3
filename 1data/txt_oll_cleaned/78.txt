Содержание



Введение


Современныеусловиябыстроготехнологическогоразвитияиконкуренциинарынке производстватребуютэффективногоуправленияпроизводственнымпроцессом.Одним изважныхаспектовтакогоуправления является контроль и учет выполнения плановыхзаданий.Сэтойцельюактивно внедряются информационныесистемыдляавтоматизацииучетныхиуправленческихпроцессовпроизводственныхпредприятий.
Цельюданнойработыявляетсяразработкаинформационной подсистемы, способной эффективно учитывать иуправлятьвыполнениемплановых заданийнапроизводстве. В ходе исследованияпроанализированы существующие подходы к учету производственныхзаданий,определены основные требования к информационной системе, разработаны алгоритмы и структура подсистемы учета заданий.
Врезультатеисследованиябудетразработанафункциональнаяиэффективнаяинформационнаяподсистема,которая позволит повысить уровеньуправленияиэффективностьпроизводственных процессов напредприятиях.
Для достижения поставленной цели были сформулированы следующие задачи:
	определить основные теоретические требования работы;
	спроектировать структуру программного продукта;
	выбрать технологии реализации разработки;
	разработать основные модули;
	провести тестирование и отладку ПО;
	провести экономическое обоснование работы;
	рассмотреть вопросы безопасности работы и охраны труда.

1. Основные теоретические сведения


1.1 Понятие информационной подсистемы


Устройства, программное и аппаратное обеспечение, которые используются для сбора информации в целях ее обработки и передачи по назначению, являются информационными системами.
Подсистемы информационной системы представляют собой отдельные части системы, выполняющие определённые функции (например: сбор, обработка, хранение и передача информации).Подсистемы могут быть автономными или зависеть друг от друга. Продукты и услуги, которые необходимы для обработки определенных типов информации или выполнения определенных задач, обычно объединяются в информационные подсистемы.
Сбор данных — это процесс сбора информации из различных источников и передачи ее в информационную подсистему для дальнейшей обработки.
Хранение данных — это процесс сохранения информации в базе данных или другом месте хранения данных для последующего доступа и использования.
Обработка данных — это процесс преобразования собранных данных в требуемый формат, их анализ и выдача результатов.
Передача данных — это процесс передачи информации между различными узлами информационной системы или между различными приложениями.
Управление доступом — это процесс управления доступом к информации для обеспечения безопасности и конфиденциальности данных.
Существуют различные виды информационных подсистем: это и системы управления базами данных, и информационные системы по управлению контентом, и информационные технологии по управлению взаимоотношениями с клиентами и системами управления проектами. Эти системы являются важными в организации и способствуют эффективному функционированию всей информационной системы в целом.
Вкачествепримера информационных систем могутслужить системы управления ресурсами, системы взаимодействия с клиентами, а также системы управления бизнес-процессами и системами. Эти системы являютсяважнымиэлементами в информационной системе организации и способствуютэффективномуфункционированию информационной системы.В современном мире информационнаяподсистемаиграет важную роль,котораяспособствуетэффективномуфункционированиюорганизаций и обмену информацией между ними. Эти системы обеспечивают организациям сбор,обработку,хранение и обмен информацией, чтопозволяет им принимать эффективные решения и повысить эффективность своейдеятельности [1].
Винформационныхподсистемахиспользуютсяразличныекомпоненты,такие как аппаратные и программныесредства, баз данных и коммуникационные системы, в то время как люди,управляющиеэтимисистемами,являютсявладельцамиэтихсистем.
Информационные подсистемы используются в самых разных отраслях, включая бизнес, науку, образование, здравоохранение и правительство.
Информационные подсистемы позволяют сократить время и усилия, необходимые для выполнения задач, повысить качество принятия решений, улучшить взаимодействие между подразделениями и членами организации, а также повысить конкурентоспособность компании на рынке.
Однако следует также отметить, что информационные подсистемы могут столкнуться с такими проблемами, как угрозы безопасности данных, несовместимость различных систем и недостаточная квалификация пользователей. Поэтому внедрение и использование информационных подсистем требует тщательного планирования, обучения персонала, а также постоянного мониторинга и обновления системы.
Поэтому информационные подсистемы играют важную роль в современном мире, обеспечивая эффективное управление информацией и повышая конкурентоспособность организаций. Чтобы организация функционировала хорошо, эти системы необходимо правильно использовать и обслуживать.


1.2 Сравнительная характеристика информационных подсистем


Проводя мониторинг информационных подсистем, были выявлены наиболее используемые виды:
Информационные подсистемы банка.
Такие подсистемы обеспечивает хранение, обработку и передачу финансовой информации, они также позволяют осуществлять разные банковские операции, включая переводы, платежи и т.д.
Подсистемы такого типа имеют высокие требования к безопасности данных и конфиденциальности как со стороны клиента, так и со стороны сервиса.
Информационные подсистемы государственных служб.
Подобные подсистемы обеспечивают учет и обработку информации о деятельности различных государственных органов, они позволяют осуществлять взаимодействие с гражданами, организациями и различного рода предпринимателями. 
Такая подсистема включает в себя функции планирования и мониторинга деятельности подразделений, и обладает высокой степенью защищённости.
Информационные подсистемы медицинских учреждений.
Это подсистемы, предназначенные для ведения медицинских карт пациентов и учета медицинских услуг.
В данном случае подсистема позволяет автоматизировать процессы приема пациентов, записи на прием и выписки рецептов, также обеспечиваетоперативный обмен информацией между различными медицинскими учреждениями, что позволяет быструю работоспособность учреждения.
Информационные подсистемы торговых компаний.
Подсистемы управляют складским учетом, закупками, продажами и отчетностью о товаре.
Подсистема такого типа позволяет оперативно получать и обрабатывать информацию об обороте товаров, контролировать доступ к базе данных, обеспечивает взаимодействие с поставщиками и клиентами.
Информационные подсистемы образовательных учреждений.
Подсистемы включают в себя учет успеваемости студентов или школьников, расписание занятий, управление учебными материалами и может быть совмещена с системой общежития если такая имеется в учреждении.
Подсистема позволяет организовать дистанционное обучение, электронное тестирование и оценку знаний, а также помогает обучающемуся взаимодействовать с преподавателями, студентами и администрацией.
Информационные подсистемы транспортных компаний.
Такие подсистемы обеспечивают оперативный учет, мониторинг и планирование транспортных рейсов, построение или редактирование маршрутов для транспорта.
Подсистема позволяет отслеживать перемещение грузов и транспортных средств, включает функции оптимизации маршрутов и снижения затрат на логистику и может работать вместе с системами бизнеса, в которых требуется управление транспортом, например системы торговых компаний.
Информационный подсистемы страховых компаний.
Такая подсистема может управлять страховыми полисами, расчётами страховых взносов и выплат на основе данных клиента.
 Подсистема обеспечивает анализ страховых рисков, статистику и отчетность на основе предоставленных данных, включает функции, помогающие в автоматизации процессов оформления страхования и урегулирования убытков.
Информационные подсистемы производственных предприятий.
Подобные подсистемы управляют производственными процессами, складским учетом, а также планированием производства.
Подсистема позволяет автоматизировать процессы закупок сырья и материалов, учета выполнения задач в производстве, контроля качества и отгрузки готовой продукции, обеспечивает взаимодействие между различными отделами предприятия и интеграцию с другими информационными системами.
Вывод: основным преимуществом данных подсистем является то, что они позволяют контролировать процессы в различных отраслях, а также точно отслеживать данные в системе [2]. 
Однако, при сравнении таких подсистем могут выявляться недостатки, такие как недостаток или переизбыток оборудование для предприятия, а также большой поток информации.
 Все эти недостатки будут учтены и применены при создании собственной информационной подсистемы.


2 Аналитический раздел


2.1 Анализ функционала


В настоящее время наиболее распространённый формат информационных подсистем — это приложение, так как оно позволяет в одном месте объединить все необходимые для предприятия функции, что позволяетсделать процесс учёта выполнения задачнаиболее удобным.
 Для того, чтобы создать успешно функционирующие приложение, следует сначала определиться с основными пользователями, а затем создать макет приложения.
Создание макета приложения — это важный этап в разработке любого программного продукта, который помогает определить структуру и внешний вид будущего приложения.
Таким образом, создание макета приложения — это сложный и многокомпонентный процесс, который требует внимания к деталям, понимания потребностей пользователей и соблюдения дизайнерских стандартов.
С помощью макета можно представить наиболее удобно расположение элементовв приложении, откорректировать их под нужды бедующего пользователя. Также макет позволяет оперативно исправить неудобства, возникшие в дизайне ещё на этапе планирования.
Этап разработки дизайна отвечает за визуальную составляющую, фирменный стиль должен быть удобным в использование, дизайн приложения должен быть простым и понятным.
Программирование подсистемы является одним из самых трудоёмких этапов, при этом правильно продуманный макет значительно облегчает процесс. Программированиеосновывается на использовании языков программирования и средств программирования. При правильном подходе к проектированию, программирование будет упрощено в зависимости от сложности задачи.
База данных, используемая для подсистемы, должна быть наиболее актуальна для своевременного обновления в приложении. Необходимо постоянно актуализировать базу данных в приложении для стабильной работы системы в рамках предприятия. Пользователи в зависимости от их роли в системе должны иметь доступ к разной информации, поэтому в приложении должно быть распределение пользователей, независимо от роли пользователя отображаемая ему информация должна быть актуальна [3].
После выполнения всех этапов разработки, система должна пройти финальное тестирование для проверки её работоспособности. Также необходима проверка после каждого этапа разработки.
Информационная подсистема «УВПЗВП» создана для пользователей, работающих на производстве и в офисе. Доступ в систему будет делиться на разные роли.В системе пользователю будет выдан профиль и роль в соответствии с приказом руководства, профиль пользователя и назначение роли будет производится с помощью администратора системы.


2.2 Требования к разработке


Основные требования к разработке подсистемы:
	лаконичность дизайна;
	эргономичность и понятность пользовательского интерфейса;
	распределение доступа к данным и функционалу системы;
	доступность основных разделов подсистемы для пользователей в соответствии с их ролью;
	 актуальность данных.
При разработке подсистемы используются преимущественно серые цвета, которые не утомляют глаз. Дизайн системы должен быть удобен в использовании. 
Основные разделы подсистемы должны быть доступны с первой страницы после входа в профиль. На первой странице не должно быть окно входа [4]. 
Окна приложения не должны быть:
	сильно яркими, чтобы не мешать восприятию информации; 
	текст должен легко читаться и не сливаться с фоном. 


2.3 Требования к программному обеспечению


Для корректной работы требуется перечисленное ниже программное обеспечение.
Требования к аппаратному обеспечению компьютера: 
	процессор семейства x86_64;
	оперативной памяти не менее 4 Gb;
	место на диске не менее 500 Mb.
Требования к программному обеспечению сервера хостинга:
	операционная система Windows;
	язык PHP не ниже 7-ой версии;
	набор API DirectXне ниже 11 версии;
	программная платформа.NET Framework не ниже 4.8 версии.
При соблюдении указанных требований к программному обеспечению, информационная подсистема «УВПЗВП»будет исправно функционировать.




2.4 Структура приложения


Структура «УВПЗВП» представляет собой логическую структуру, в которой все и разделы подсистемы и базы данных расположены и связаны между собой. Эта структура отвечает за вход в подсистему и навигацию в ней. Прежде чем запустить «УВПЗВП», необходимо разобраться с её логической структурой, так как без нее может получиться некорректно работающие и неудобное в работе приложение. Структура «УВПЗВП» должна быть выбрана в соответствии с её планом на этапе проектирования.
В соответствии с темой были разработаны — контекстная диаграмма, диаграммаIDF0 и диаграмма классов. На рисунке 1 представлена диаграмма классов.

 
Рисунок 1 – Диаграмма классов
На рисунке 2 представлена контекстная диаграмма.

 
Рисунок 2 –Контекстная диаграмма

На рисунке 3 представлена диаграмма IDF0.

 
Рисунок 3 – ДиаграммаIDF0
Внешняя структура «УВПЗВП» представляет собой макет, на котором блоками отмечены различные элементы приложения. Внутренняя структура включает в себя таблицы с различным функционалом в зависимости от роли пользователя в системе.
На рисунке 4 показан макет окна входа, оно включает в себя: поле ввода логина, поле ввода пароля, кнопку входа.

 
Рисунок 4 – Макет окна входа

На рисунке 5 показан макет основного меню, оно включает в себя поля кнопки для выбора нужной таблицы.

 
Рисунок 5 – Макет основного меню
На рисунке 6 показан макет основного интерфейса таблиц, он включает в себя таблицу со встроенными функциями, поиск по таблице.

 
Рисунок 6 – Макет основного интерфейса таблиц

На рисунке 7 показана структура«УВПЗВП», которая обеспечивает доступ к данным для работников предприятия.
Все разделы расположены таким образом, чтобы пользователь пользовался только теми функциями и видел ту информацию, которая соответствует его роли в «УВПЗВП».

 
Рисунок 7 – Структура «УВПЗВП»
2.5 Дизайн приложения


Создание дизайна приложения требует тщательного планирования, внимания к деталям для достижения качественного результата.
Для успешного создания дизайна приложения необходимо провести исследование целевой аудитории при этом определив ее потребности и предпочтения. На основе этих данных будетразрабатываться основная концепция дизайна, включающая в себяфункциональностьприложения, его структуру и визуальное оформление.
Затем требуется приступить к созданию макетов и прототипов, которые помогают визуализировать и протестировать интерфейс приложения. Для этого обычно используют программы редакторы, которые специализируются на работе с графикой.
Основные элементы дизайна приложения, такие как цветовая палитра, шрифты, иконки и компоновка элементов, разрабатываются с учетом желаний заказчика и удобства использования для пользователей.
После завершения разработки дизайна требуется провести тестирование и оптимизация интерфейса приложения, чтобы гарантировать лёгкость использования для пользователей. При создании дизайна в области подсистем для предприятийсамым важным фактором остаётся удобство в дизайне интерфейсов, чтобы обеспечить быструю обучаемость в работе с приложением.
На рисунке 8 показаны цвета, выбранные для оформления внешнего вида приложения.

 
Рисунок 8 – Цветовая схема приложения
Для создания дизайна логотипа, необходимо провести исследование и понять основную область работы. Затем приступить к созданию концепции, которая отражает эту область. 
В программе Corel DRAW, был разработан логотип для обучающего приложения. 
Разработанный логотип показан на рисунке 9.

 
Рисунок 9 – Логотип приложения


2.6 Описание средств разработки


C# —это объектно-ориентированный язык программирования, разработанный компанией Microsoft. Он широко используется для разработки приложений для платформы .NET Framework. C# объединяет в себе простоту и гибкость языков программирования, таких как C++ и Java.В целом, C# является мощным и гибким языком программирования, который широко используется для создания разнообразных приложений, от веб-сайтов до игр и мобильных приложений. Он обладает простым синтаксисом, богатой стандартной библиотекой и полной поддержкой .NET Framework, что делает его идеальным выбором для многих разработчиков [5].
Платформа .NET Framework, созданная компанией Microsoft, является мощным инструментом для разработки программного обеспечения. Она предоставляет разработчикам широкие возможности для создания различных видов приложений, включая веб-приложения, десктопные приложения, мобильные приложения, игры и многое другое.
.NET Framework основан на принципах объектно-ориентированного программирования и поддерживает использование различных языков программирования, таких как C#, F#, Visual Basic, и другие. В его состав входит ряд ключевых компонентов, включая Common Language Runtime (CLR), которая обеспечивает выполнение кода и управление ресурсами приложения, а также библиотеки классов, предоставляющие готовые решения для множества задач программирования.
.NET Framework позволяет создавать кроссплатформенные приложения, способные работать на различных операционных системах, таких как Windows, macOS и Linux. Кроме того, его богатая экосистема сторонних библиотек и инструментов значительно упрощает и ускоряет процесс разработки.Благодаря своей гибкости, мощности и обширным возможностям, .NET Framework является одним из самых популярных и широко используемых инструментов для разработки программного обеспечения в мире.
VisualStudioCode, часто называемый VSCode, является мощным и гибким текстовым редактором, разработанным компанией Microsoft для создания и редактирования кода. Приложение доступно на различных операционных системах, включая Windows, macOS и Linux, и пользуется популярностью среди разработчиков благодаря своей поддержке расширений. 
VSCode предлагает широкий спектр функций, делающих его удобным инструментом для разработки. Одной из ключевых особенностей является поддержка IntelliSense, которая предоставляет интеллектуальные предложения кода на основе контекста. Это значительно повышает производительность при написании кода и снижает вероятность ошибок. Он имеет встроенную поддержку системы контроля версий Git, что облегчает разработчикам управление изменениями в своем коде и работу с удаленными репозиториями. Возможности включают в себя просмотр изменений, коммит, откат изменений и разрешение конфликтов [6].
Microsoft Visual Studio — это мощный интегрированный набор инструментов разработки программного обеспечения, созданный компанией Microsoft. Он предлагает разработчикам широкий спектр функций для работы с приложениями на различных платформах, таких как Windows, Android, iOS и веб. 
Одной из ключевых особенностей Visual Studio является его универсальность, поскольку поддерживает множество языков программирования, включая C#, Visual Basic, C++, Python, JavaScript и другие. Благодаря обширной библиотеке компонентов разработчики могут легко расширять функциональность и интегрировать приложения с различными сервисами и системами. Интерфейс Visual Studio интуитивно понятен и гибок, обеспечивая комфортное рабочее окружение для программистов. В нем есть текстовый редактор с подсветкой синтаксиса, авто завершением кода, встроенным отладчиком и другими инструментами, способствующими повышению производительности и качества кода [7].
Git – это система управления версиями с открытым исходным кодом, которая обеспечивает совместную работу над проектами путем использования распределенной системы управления версиями файлов, хранящихся в репозиториях. Она позволяет объединять работы, выполненные несколькими участниками в течение определенного периода времени в одном репозитории.
GitHub, с другой стороны, является веб-сайтом, предоставляющим платформу для хранения репозиториев Git, аналогично Microsoft Learn. Он является центральным репозиторием для всех проектов, где участники могут копировать свои работы и отправлять изменения обратно [8].





3 Разработка приложения


3.1 Внешний вид приложения


Приложение включает в себя окно входа в систему.
Окно входа включает в себя следующие кнопки и окна ввода:
	«Логин»(поле для ввода логина);
	«Пароль»(поле для ввода пароля);
	«Войти» (кнопка для входа в систему);
	«Памятка» (описание системы и информация, предназначенная для помощи пользователю).
На рисунке 10 представлено окно входа в систему.

 
Рисунок 10 – Окно входа

Кроме окна входа, которое закрывается и открывается при входе и выходе из профиля пользователя в верхней части окна находиться кнопка памятки пользователя, при нажатии кнопки открывается новая форма с памяткой.
Для каждого пользователя памятка является одинаковой, данные в форме заранее прописаны.
На рисунке 11 представлена памятка пользователя.

 
Рисунок 11 – Памятка

Помимо формы входа пользователь, по всплывающему окно во время запуска подсистемы, может узнать стабильность подключения подсистемы к базе данных.
Окно проверки подключения представлено на рисунке 12.

 
Рисунок 12 – Проверка подключения

3.2 Форма выбора таблицы


Форма выбора таблицы может быть использована для получения доступа к таблицам, в зависимости от роли пользователя ему может быть доступно от 3 до 5 таблиц. На каждой форме в независимости от роли пользователя имеется кнопка выхода из системы.
На рисунке 13 изображена форма выбора таблицы для администратора.

 
Рисунок 13 – Форма выбора таблицы для администратора

На рисунке 14 изображена форма выбора таблицы для рядового пользователя.

 
Рисунок 14– Форма выбора таблицы для рядового пользователя
Форма выбора таблицы была написана с использованием функции проверки подключения к таблице и функции проверки выполненного входа.
Данный код проверяет подключение к таблице во время её выбора, а также успешность входа пользователя в свой профиль.
Окно проверки выполненного входа представлено на рисунке 15.

 
Рисунок 15 – Окно проверки выполненного входа 


3.3 Основнойинтерфейс таблиц


Пользователь «УВПЗВП» должен своевременно получать требуемую информацию также она должна быть максимально актуальной и правильной.
В разработанной подсистеме для каждой роли в подсистеме существует своя форма для каждой таблицы. 
Все наполнение таблиц хранится во встроенной базе данных, это предоставляет возможности её упрощённого редактирования и переноса на другие носители или сервисы.
Таблицы берут информацию из базы данных, по запросу из отдельно хранимого содержимого.
В разработанной подсистеме присутствует функция поиска, который находится на формах с таблицами и позволяет оперативно осуществлять поиск данных, на каждой форме для таблиц существует кнопка возврата в меню.
На рисунке 16 представлена форма администратора для таблицы «Сотрудники».

 
Рисунок 16 – Форма администратора «Сотрудники»

На рисунке 17 представлена форма администратора для таблицы «Пользователи».

 
Рисунок 17 – Форма администратора «Пользователи»
На рисунке 18 представлена форма администратора для таблицы «Плановые задания».

 
Рисунок 18 – Форма администратора «Плановые задания»

На рисунке 19 представлена форма администратора для таблицы «Отчёты».

 
Рисунок 19 – Форма администратора «Отчёты»
На рисунке 20 представлена форма администратора для таблицы «Журнал действий».

 
Рисунок 20 – Форма администратора «Журнал действий»

В подсистеме существует разделение на роли поэтому формы с таблицами отличаются в основном функционалом в зависимости от роли, то есть для рядового пользователя такие функции как редактирование, удаление и добавление будут недоступны.
На рисунке 21 представлена форма рядового пользователя для таблицы «Сотрудники».

 
Рисунок 21 – Форма рядового пользователя «Сотрудники»
На рисунке 22 представлена форма рядового пользователя для таблицы «Отчёты».

 
Рисунок 22 – Форма рядового пользователя «Отчёты»

На рисунке 23 представлена форма рядового пользователя для таблицы «Плановые задания».

 
Рисунок 23 – Форма рядового пользователя «Плановые задания»
	Понятие и проведение тестирования


Тестирование подсистем проекта и бизнес-логики может проводиться как с использованием ручных, так и автоматизированных методов тестирования:
	тестирование качества форм приложений;
	тестирование скорости загрузки;
	тестирование корректности отображения информации.
Основная цель тестирования - проверить, соответствует ли функциональность подсистемы спецификации. Другими словами, определить, в каких случаях программа не удовлетворяет заданным требованиям, а также проверить корректность поведения программы на основе заданных тестовых данных [10].
Два основных правила теории тестирования программного обеспечения
	невозможно найти абсолютно все ошибки в программном продукте; ошибки всегда будут оставаться;
	невозможно создать всеобъемлющий входной тест.
Другими словами, невозможно полностью протестировать программу. Даже самая простая программа никогда не проработает достаточно долго, чтобы оправдать преимущества создания "идеально протестированной" программы. При тестировании современных сложных программных систем тщательное тестирование становится невозможной задачей.
Для проверки корректности программы требуются тесты, которые намеренно создают сложные наборы данных для выявления возможных ошибок в программе.
Наша цель - проанализировать различные типы тестов для повышения качества подсистемы. Для этого необходимо обратить внимание на различные уровни анализа и критерии качества.
Функциональное тестирование подсистем.
Функциональное тестирование является приоритетной задачей для тестировщиков, поскольку оно гарантирует, что подсистема может быть использована. Для достижения максимальной эффективности подсистемы необходимо убедиться, что она выполняет свои целевые операции без помех, интегрирована с другими системами и безопасна.
Тестирование производительности.
В ходе тестирования производительности тестировщики проверяют скорость выполнения подсистемой целевых действий при нормальной нагрузке и в различных условиях. Для этого проверяется как скорость работы, так и количество внутренних ресурсов, используемых для выполнения задачи. В некоторых случаях проводятся нагрузочные тесты, чтобы проверить производительность подсистемы при различных запросах.
Тестирование безопасности подсистемы.
Внутренние ресурсы требуют регулярной проверки на уязвимость, чтобы предотвратить возможные атаки и взломы хакеров.
Тестирование доступности.
При тестировании избыточности подсистемы тестировщик берет на себя роль пользователя и оценивает понятность и удобство взаимодействия с ресурсом, а также проводит специальный анализ, чтобы учесть, что необходимо добавить или изменить и как это должно быть реализовано.
Ручное тестирование подсистем.
В этом случае специалисты не используют программное обеспечение, а моделируют поведение обычных пользователей для выявления ошибок. Такой подход подходит для крупных проектов и может быть использован для проверки любого пользователя на наличие ошибок.
В ходе изучения видов тестирования, было проведено тестирование подсистемы «УВПЗВП».
Порядок тестирования подсистемы:
	проверка работоспособности базы данных;
	тестирование базы данных;
	тестирование форм приложения;
	тестирование функций, реализованных в подсистеме.
Для тестирования приложения была выбрана операционная система Windows 10.
Проведя все проверки, было выявлено, что база данных работает корректно, все данные отображаются правильно, а форма при запуске выдаёт уведомление о стабильном подключении,входа функционирует корректно, редактирование данных через функции, встроенные в форму, работают правильно. 
Была произведена проверка корректности данных в базе данных. На рисунке 24 изображена таблица «Сотрудники» внутри базы данных.


 
Рисунок 24 – Таблица «Сотрудники» внутри базы данных

На рисунке 25 изображена таблица «Пользователи» внутри базы данных.

 
Рисунок 25 – Таблица «Пользователи» внутри базы данных
На рисунке 26 изображена таблица «Плановые задания» внутри базы данных.

 
Рисунок 26 – Таблица «Плановые задания» внутри базы данных

На рисунке 27 изображена таблица «Отчёты» внутри базы данных.

 
Рисунок 27 – Таблица «Отчёты» внутри базы данных

На рисунке 28 изображена таблица «Журнал действий» внутри базы данных.

 
Рисунок 28 – Таблица «Журнал действий» внутри базы данных
Была произведена проверка корректности работы функционала форм подсистемы. На рисунке 29 изображено тестирование функции добавления данных на примере таблицы «Сотрудники».

 
Рисунок 29 – Тестирование функции добавления данных

На рисунке 30 изображена таблица данных после успешного добавления данных.

 
Рисунок 30 – Таблица после добавления данных
На рисунке 31 изображено тестирование функции редактирования данных на примере таблицы «Сотрудники».

 
Рисунок 31 – Тестирование функции редактирования данных

На рисунке 32 изображена таблица данных после успешного редактирования данных.

 
Рисунок 32 – Таблица после редактирования данных
На рисунке 33 изображено тестирование функции удаления данных на примере таблицы «Сотрудники».

 
Рисунок 33 – Тестирование функции удаления данных

На рисунке 34 изображена таблица данных после успешного удаления данных.

 
Рисунок 34 – Таблица после редактирования данных
В подсистеме реализована функция поиск данных в таблице. На рисунке 35 изображено тестирование функции поиска.

 
Рисунок 35 – Тестирование функции поиска данных



4 Экономическое обоснование работы


4.1 Планирование работы


ProjectLibre –приложение, используемое для планирования различных проектов, его можно использовать бесплатно и представляет собой альтернативу программе Microsoft Project [11].
Бюджет, установленный для выполнения проекта, будет рассчитан с помощью планирования стоимости.
Рассмотрим следующие основные его этапы:
	определение количества ресурсов, необходимых для успешного завершения проекта;
	определение стоимости вложений по различным работам проекта, включая затраты на трудовые ресурсы и материалы;
	проект подвергнется оценке в соответствии с распределением предполагаемых затрат в зависимости от времени их выполнения.
Затраты на ресурсы, необходимые для завершения проекта, являются основным фактором при вычислении стоимости проекта.
Для определения общей цены проекта необходимо учитывать все вложенные в него ресурсы:
	трудовые ресурсы;
	оборудование;
	материалы и денежные средства;
	энергетические ресурсы;
	информационные ресурсы;
	вычислительную и организационную технику;
	прочие ресурсы.
На рисунке 35 представлены этапы проекта с их продолжительностью.

 
Рисунок 35 – Этапы проекта

На рисунке 36 представлены этапы проекта с их продолжительностью и назначенными ресурсами.

 
Рисунок 36 – Диаграмма Ганта
На рисунке 37 представлен сетевой график проекта.

 
Рисунок 37 – Сетевой график проекта

На рисунке 38 представлены ресурсы проекта.

 
Рисунок 38 – Ресурсы проекта

На рисунке 39 изображена структурная декомпозиция работ WBS.

 
Рисунок 39– График WBS
Подводя итоги по планированию проекта, были реализованы все задачи, а именно: разработаны этапы проекта, добавлен список задач проекта, посчитана длительность для каждой задачи и всего этапа, специально для каждой задачиназначены ресурсы.




5 Безопасность и экологичность работы


5.1 Охрана труда 


Научно-технический прогресс значительно усложнил условия психической деятельности работников. Работа стала более интенсивной и требует больше времени, умственных, эмоциональных и физических затрат. В связи с этим возникла необходимость принятия мер по улучшению эргономики, гигиены и организации труда, регламентации режима труда и отдыха [13].
Сегодня компьютерная техника используется во многих сферах человеческой деятельности. При использовании компьютеров люди подвергаются воздействию различных опасных и вредных факторов. К ним относятся воздействие радиочастот (РЧ, УВЧ, СВЧ), инфракрасного излучения, ионизирующего излучения, шума, вибрации и статического электричества.
Пользователи компьютеров испытывают сильное психическое и нервно-эмоциональное напряжение, они также выполняют много зрительной работы и вынуждены напрягать мышцы рук из-за использования компьютерных клавиатур.
Для поддержания оптимальной осанки важно, чтобы элементы рабочего места были правильно расположены и разумно спроектированы. Чтобы избежать негативных последствий для здоровья, работу за компьютером следует регулярно прерывать. В противном случае это может привести к значительной нагрузке на зрительную систему, головным болям, нарушениям сна, раздражительности, усталости и болям в глазах, спине, шее и руках [14].
Забота о здоровье работников, обеспечение безопасных условий труда и профилактика профессиональных заболеваний и травм - важная задача общества. Необходимо шире использовать прогрессивные формы научной организации труда, свести к минимуму ручной и неквалифицированный труд, улучшить условия для исключения профессиональных заболеваний и травм.
На рабочем месте должны быть приняты меры безопасности для защиты от воздействия опасных и вредных производственных факторов. Величина этих факторов не должна превышать допустимых значений, установленных законодательством, техническими и гигиеническими нормативами. Согласно этим нормативным документам, на рабочих местах должны быть созданы такие условия труда, при которых воздействие опасных и вредных факторов либо полностью исключается, либо остается в пределах допустимых значений.
При работе с компьютерами на работников могут воздействовать следующие факторы (в соответствии с ТОИ Р-45-084-011 "Типовая инструкция по охране труда при работе с компьютерами")
	повышенный уровень электромагнитного излучения;
	повышенное статическое электричество
	пониженная ионизация воздуха;
	статическое физическое перенапряжение;
	перенапряжение зрительного анализатора.
Длительное время, проведенное перед компьютером, может привести к болям в спине, снижению венозного кровообращения, ухудшению зрения и постоянному стрессу из-за необходимости постоянно принимать решения.
Наведение порядка на рабочем месте может значительно снизить риск влияния негативных факторов на здоровье сотрудников и помочь уменьшить вероятность последствий.
Организация рабочего места
Для работников, проводящих за компьютером более четырех часов в день, площадь рабочего места зависит от типа монитора:
	если компьютер оснащен монитором на основе ЭЛТ, площадь должна составлять не менее 6 кв. м;
	если компьютер оснащен ЭЛТ-монитором, то площадь должна быть не менее 6 кв. м; если компьютер оснащен ЖК- или плазменным монитором, то площадь должна быть 4,5 кв. м.
Общее освещение должно быть в виде непрерывных или прерывистых рядов люминесцентных ламп по бокам рабочего места, параллельно линии зрения пользователя, если мониторы расположены в ряд.
Если компьютер расположен по периметру комнаты, светильник должен быть расположен так, чтобы его луч падал точно на передний край рабочего стола пользователя.
Для оптимального освещения поверхности стола требуется яркость 300-500 лк. Для поддержания такого уровня освещенности в классе рекомендуется чистить окна и лампы не реже двух раз в год и своевременно заменять перегоревшие лампы.
При организации рабочих мест с компьютерами расстояние между партами должно быть не менее 2 метров, а расстояние между сторонами видеомониторов - не менее 1,2 метра.
Для создания условий умственного труда, требующих высокой концентрации и значительного напряжения, рекомендуется разделять рабочие места перегородками высотой 1,5-2 м [15]. [15].
Оптимальные размеры рабочих поверхностей для компьютеров должны составлять 800-1 400 мм в ширину, 800-1 000 мм в глубину и 725 мм нерегулируемой высоты.
Для оптимальной работы монитор должен располагаться на рабочем столе на расстоянии 60-70 см от глаз пользователя. Клавиатура должна располагаться на столе на расстоянии 100-300 мм от глаз пользователя.
Для обеспечения правильной рабочей позы и снижения нагрузки на мышцы спины и шеи/плеч следует использовать стул с регулируемым положением.
Пользователи компьютеров должны быть обеспечены подставками для ног шириной не менее 0,3 м, глубиной 0,4 м, регулируемыми по высоте до 0,15 м, с углом наклона 20° C, с выемками на поверхности и высотой переднего края 10 мм.
Рабочая мебель.
	стулья должны иметь ширину и глубину сиденья не менее 40 см;
	спинки: высота опорной поверхности 30 +/- 2 см, ширина 38 см и более; Локти: длина 25 см и более, ширина 5-7 см, высота от поверхности сидения 23 + 3 см;
	столы должны иметь размеры рабочей поверхности (столешницы): длина - 80-120 см; ширина - 80-100 см; высота (расстояние от пола до рабочей поверхности) 68-85 см; оптимальная высота - 72,5 см;
	подставки для рук: прямые, изогнутые или из мягкого материала, размещаемые перед клавиатурой. Для ног необходима подставка шириной не менее 30 см и длиной не менее 40 см.
Необходимое условие:
	площадь первой рабочей зоны, где расположен компьютер, должна составлять не менее 6 м2;
	комната с окном, выходящим на север или северо-восток, с искусственным или естественным освещением, чтобы не было бликов на плоскости экрана монитора. Верхний свет (с потолка) должен быть рассеянным, а не ярким.
	используйте жалюзи или тканевые шторы, чтобы избежать чрезмерного света из окон;
	в помещении следует ежедневно проводить влажную уборку, чтобы предотвратить появление пыли в воздухе, на полу, рабочих поверхностях столов и другого оборудования. Также должны быть предусмотрены системы вентиляции, кондиционирования и отопления. Работа за компьютером в подвалах строго запрещена, так как для качественной работы необходимы чистые рабочие поверхности.
Существуют также требования к уровню электромагнитных полей, шума, вибрации и микроклимата.
Оптимальные параметры микроклимата в помещении с компьютерами следующие:
	температура - от 19 до 21 °C;
	относительная влажность воздуха - от 62 до 55 процентов;
	скорость ветра - до 0,1 м/с.
Время перерывов.
Чтобы избежать преждевременного утомления пользователей компьютеров, рекомендуется разделять смены с использованием и без использования компьютера. При выполнении задач, требующих постоянного внимания и концентрации, перерывы продолжительностью 10-15 минут следует делать каждые 45 минут.
Эти перерывы в обязательном порядке включаются в рабочее время и увеличиваются на 30 % при работе в ночное время.
Время отдыха зависит от категории трудовой деятельности и рабочей нагрузки и составляет от 50 до 90 минут при 8-часовой смене и от 80 до 140 минут при 12-часовой смене.
Для поддержания нормального нервно-эмоционального состояния и борьбы с гипонатриемией и гипокалиемией рекомендуются "физкультурные минутки".
Проведение медицинских осмотров:
	проведение медицинских осмотров: Люди, которые проводят за компьютером более 50 % рабочего времени, должны пройти медицинский осмотр;
	люди, проводящие за компьютером более 50 % рабочего времени, должны раз в два года проходить осмотр у невропатолога и офтальмолога.
Инструкции по охране труда.
Инструкции должны пересматриваться не реже одного раза в пять лет. При этом инструкции по охране труда могут пересматриваться заблаговременно:
	при изменении межведомственных правил и типовых инструкций по охране труда;
	при изменении условий труда работников; или
	при внедрении новой техники или технологии; или
	по результатам анализа данных расследования аварий, несчастных случаев на производстве и профессиональных заболеваний.
Электробезопасность.
Работодатели должны обеспечивать электробезопасность своих работников, предоставляя им оргтехнику, в том числе компьютерную, и устанавливая защитное заземление в соответствии с эксплуатационными требованиями [15].
Обязанности работодателя. Все работники имеют право на условия труда, отвечающие требованиям охраны здоровья и безопасности.
При проведении контрольных мероприятий Государственная инспекция труда может проверять:
	наличие приказа об охране труда
	соблюдение требований закона об особом учете условий труда
	наличие локальных норм об установленном времени отдыха при работе на компьютере;
	фактическое соблюдение норм охраны труда.
Пожаробезопасность
Для обеспечения пожарной безопасности необходимо соблюдать различные меры предосторожности и правила, в том числе:
	разработка и соблюдение планов эвакуации в случае пожара;
	установка и обслуживание противопожарного оборудования, такого как огнетушители, пожарные краны и сигнализация;
	проводить профилактические осмотры и обучение персонала пожарной безопасности. 
Соблюдение всех норм и правил, установленных Законом о пожарной безопасности. Важно не только разработать и внедрить план пожарной безопасности, но и регулярно проверять соблюдение действующего законодательства и вносить необходимые коррективы.
Утилизация компьютерного оборудования - сложный процесс, включающий извлечение ценных компонентов и драгоценных металлов, переработку оборудования по окончании срока службы и утилизацию непригодных элементов.
Утилизация оборудования требует соблюдения всех этапов процедуры:
	в организации составляется акт об амортизации;
	проводится экспертная оценка объектов, подлежащих амортизации; - в организации составляется акт об амортизации; - в организации составляется акт об амортизации
	определяется остаточная стоимость;
	составляется письменное заключение о непригодности объекта к эксплуатации; a
	составляется документ об утилизации;
	производится демонтаж оборудования и отделение ценных элементов;
	оформляется документация на выделенные компоненты драгоценных металлов;
	драгоценные металлы передаются в национальный фонд.
Закон делает утилизацию обязательной, а за несоблюдение закона предусмотрены штрафы и другие наказания.
Запрещено выбрасывать ноутбуки на свалки вместе с бытовыми отходами. Их переработка необходима для защиты окружающей среды и эффективного использования компонентов оргтехники.
Некоторые материалы, используемые при производстве компонентов ноутбуков, вредны для живых организмов. Токсичные компоненты могут попадать в воздух, почву и воду. При сжигании компонентов могут выделяться канцерогены, кадмий и свинец.
Ноутбуки содержат цветные и драгоценные металлы, которые подлежат переработке и повторному использованию, а не утилизации.
Используя современные методы, специалисты успешно удаляют из ноутбуков пластик, стекло и железо, обеспечивая при этом безопасность и минимизируя количество отходов [16].

Заключение


В ходе выполнения выпускной квалификационной работы была разработана и успешно реализована информационная подсистема учета выполнения плановых заданий в производстве. Программное обеспечение позволяет эффективно контролировать и анализировать выполнение плановых задач, улучшая процессы и увеличивая производительность предприятия. 
В ходе проекта были реализованы следующие задачи:
	определены основные теоретические требования работы;
	спроектирована структура программного продукта;
	выбраны технологии реализации разработки;
	разработаны основные модули;
	проведено тестирование и отладка ПО;
	проведено экономическое обоснование работы;
	рассмотрены вопросы безопасности работы и охраны труда.
Разработанная подсистема содержит 12форм и предоставляет пользователю следующие возможности:
	просмотр информации;
	поиск информации;
	 возможность авторизоватьсяв подсистеме;
	добавление, удаление и редактирование информации в подсистеме (в зависимости от роли пользователя).
В дальнейшем есть возможность интеграции подсистемы в основную систему предприятия. При необходимости новый материал будет быстро добавлен в подсистему.



